{"uid":"a5c3cc372afbfb09","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1758007969965,"stop":1758007973635,"duration":3670},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758007277154,"stop":1758007277210,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2481-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":111,"broken":18,"skipped":0,"passed":29,"unknown":0,"total":158},"items":[{"uid":"4893e4407d8c5b6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/532//#testresult/4893e4407d8c5b6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757921595579,"stop":1757921598632,"duration":3053}},{"uid":"900ae9ba1fdf2544","reportUrl":"https://pagopa.github.io/rtp-platform-qa/531//#testresult/900ae9ba1fdf2544","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757835157070,"stop":1757835160173,"duration":3103}},{"uid":"f75b5586caa94a58","reportUrl":"https://pagopa.github.io/rtp-platform-qa/530//#testresult/f75b5586caa94a58","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757748800366,"stop":1757748803530,"duration":3164}},{"uid":"29f9d7cadbdea477","reportUrl":"https://pagopa.github.io/rtp-platform-qa/529//#testresult/29f9d7cadbdea477","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757666509426,"stop":1757666514850,"duration":5424}},{"uid":"40b233adc5038f53","reportUrl":"https://pagopa.github.io/rtp-platform-qa/528//#testresult/40b233adc5038f53","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757661701409,"stop":1757661704542,"duration":3133}},{"uid":"4564f04ae444893","reportUrl":"https://pagopa.github.io/rtp-platform-qa/527//#testresult/4564f04ae444893","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757598402871,"stop":1757598406067,"duration":3196}},{"uid":"24b368621e0bc07d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/526//#testresult/24b368621e0bc07d","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757575330975,"stop":1757575333902,"duration":2927}},{"uid":"d6eb623cae60dae6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/525//#testresult/d6eb623cae60dae6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757489083748,"stop":1757489087201,"duration":3453}},{"uid":"305c94f9fe3618f5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/524//#testresult/305c94f9fe3618f5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757402560005,"stop":1757402562817,"duration":2812}},{"uid":"5c39ca7d0f3eba00","reportUrl":"https://pagopa.github.io/rtp-platform-qa/523//#testresult/5c39ca7d0f3eba00","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757316153777,"stop":1757316157218,"duration":3441}},{"uid":"16cef156e5f04fc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/522//#testresult/16cef156e5f04fc","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757229701765,"stop":1757229705179,"duration":3414}},{"uid":"c5eecdc1c0ca23e3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/521//#testresult/c5eecdc1c0ca23e3","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757143266842,"stop":1757143270229,"duration":3387}},{"uid":"82817c5a08dcbce9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/520//#testresult/82817c5a08dcbce9","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1757057142393,"stop":1757057142995,"duration":602}},{"uid":"fb840b359381536e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/519//#testresult/fb840b359381536e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756969685868,"stop":1756969689426,"duration":3558}},{"uid":"898e889a57d1aa24","reportUrl":"https://pagopa.github.io/rtp-platform-qa/518//#testresult/898e889a57d1aa24","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756910924028,"stop":1756910927938,"duration":3910}},{"uid":"289d0107fce561aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/517//#testresult/289d0107fce561aa","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756883307369,"stop":1756883310445,"duration":3076}},{"uid":"6d9202a73917ae70","reportUrl":"https://pagopa.github.io/rtp-platform-qa/516//#testresult/6d9202a73917ae70","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756798028856,"stop":1756798031682,"duration":2826}},{"uid":"a6be13caef2f3c75","reportUrl":"https://pagopa.github.io/rtp-platform-qa/515//#testresult/a6be13caef2f3c75","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756796904287,"stop":1756796907578,"duration":3291}},{"uid":"dd514ac5bb1fcc9c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/514//#testresult/dd514ac5bb1fcc9c","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756719642982,"stop":1756719646385,"duration":3403}},{"uid":"9cc00657107eaab5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/513//#testresult/9cc00657107eaab5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756710590496,"stop":1756710593818,"duration":3322}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"a5c3cc372afbfb09.json","parameterValues":[]}