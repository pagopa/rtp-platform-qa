{"uid":"41d883893c8533f5","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1759822161385,"stop":1759822164303,"duration":2918},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759821659153,"stop":1759821659212,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2561-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":133,"broken":20,"skipped":0,"passed":29,"unknown":0,"total":182},"items":[{"uid":"10cff836170ed629","reportUrl":"https://pagopa.github.io/rtp-platform-qa/556//#testresult/10cff836170ed629","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759735748460,"stop":1759735751816,"duration":3356}},{"uid":"9fd1d2309f03cfbb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/555//#testresult/9fd1d2309f03cfbb","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759650040493,"stop":1759650043663,"duration":3170}},{"uid":"8535e725b257895b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/554//#testresult/8535e725b257895b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759563706180,"stop":1759563709955,"duration":3775}},{"uid":"b0295adb4ee11dc6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/553//#testresult/b0295adb4ee11dc6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759484870673,"stop":1759484874468,"duration":3795}},{"uid":"748943389f625dee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/552//#testresult/748943389f625dee","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1759476836156,"stop":1759476836752,"duration":596}},{"uid":"3596c85fddc5b593","reportUrl":"https://pagopa.github.io/rtp-platform-qa/551//#testresult/3596c85fddc5b593","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759390825207,"stop":1759390828593,"duration":3386}},{"uid":"879d5c509d2d3e26","reportUrl":"https://pagopa.github.io/rtp-platform-qa/550//#testresult/879d5c509d2d3e26","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759316225993,"stop":1759316229108,"duration":3115}},{"uid":"e982ce16b4d11f69","reportUrl":"https://pagopa.github.io/rtp-platform-qa/549//#testresult/e982ce16b4d11f69","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759303785636,"stop":1759303788974,"duration":3338}},{"uid":"1d8ee08330a97fab","reportUrl":"https://pagopa.github.io/rtp-platform-qa/548//#testresult/1d8ee08330a97fab","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759217371486,"stop":1759217374653,"duration":3167}},{"uid":"5954233cd0c09e40","reportUrl":"https://pagopa.github.io/rtp-platform-qa/547//#testresult/5954233cd0c09e40","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759130914875,"stop":1759130917905,"duration":3030}},{"uid":"f34a22b3375eb207","reportUrl":"https://pagopa.github.io/rtp-platform-qa/546//#testresult/f34a22b3375eb207","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759044366978,"stop":1759044370437,"duration":3459}},{"uid":"31b23f4eecc26b07","reportUrl":"https://pagopa.github.io/rtp-platform-qa/545//#testresult/31b23f4eecc26b07","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758957732098,"stop":1758957735557,"duration":3459}},{"uid":"dcfecfd8345c2ae7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/544//#testresult/dcfecfd8345c2ae7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758872018579,"stop":1758872022242,"duration":3663}},{"uid":"89861629ceb8adf6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/543//#testresult/89861629ceb8adf6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758786159562,"stop":1758786162636,"duration":3074}},{"uid":"d956f50b8e3f7ed5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/542//#testresult/d956f50b8e3f7ed5","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1758699766821,"stop":1758699767939,"duration":1118}},{"uid":"45ef48161d53bbcd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/541//#testresult/45ef48161d53bbcd","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758612590296,"stop":1758612593947,"duration":3651}},{"uid":"bf5fe3c407be4a1b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/540//#testresult/bf5fe3c407be4a1b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758526255544,"stop":1758526259302,"duration":3758}},{"uid":"832fc8891504379","reportUrl":"https://pagopa.github.io/rtp-platform-qa/539//#testresult/832fc8891504379","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758439597602,"stop":1758439600907,"duration":3305}},{"uid":"761fe0a024e55d8e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/538//#testresult/761fe0a024e55d8e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758353256922,"stop":1758353260053,"duration":3131}},{"uid":"e93218f1c16ec7b4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/537//#testresult/e93218f1c16ec7b4","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1758271093398,"stop":1758271093947,"duration":549}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"41d883893c8533f5.json","parameterValues":[]}