{"uid":"c5eecdc1c0ca23e3","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1757143266842,"stop":1757143270229,"duration":3387},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757143047989,"stop":1757143048047,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":99,"broken":18,"skipped":0,"passed":29,"unknown":0,"total":146},"items":[{"uid":"82817c5a08dcbce9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/520//#testresult/82817c5a08dcbce9","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1757057142393,"stop":1757057142995,"duration":602}},{"uid":"fb840b359381536e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/519//#testresult/fb840b359381536e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756969685868,"stop":1756969689426,"duration":3558}},{"uid":"898e889a57d1aa24","reportUrl":"https://pagopa.github.io/rtp-platform-qa/518//#testresult/898e889a57d1aa24","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756910924028,"stop":1756910927938,"duration":3910}},{"uid":"289d0107fce561aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/517//#testresult/289d0107fce561aa","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756883307369,"stop":1756883310445,"duration":3076}},{"uid":"6d9202a73917ae70","reportUrl":"https://pagopa.github.io/rtp-platform-qa/516//#testresult/6d9202a73917ae70","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756798028856,"stop":1756798031682,"duration":2826}},{"uid":"a6be13caef2f3c75","reportUrl":"https://pagopa.github.io/rtp-platform-qa/515//#testresult/a6be13caef2f3c75","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756796904287,"stop":1756796907578,"duration":3291}},{"uid":"dd514ac5bb1fcc9c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/514//#testresult/dd514ac5bb1fcc9c","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756719642982,"stop":1756719646385,"duration":3403}},{"uid":"9cc00657107eaab5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/513//#testresult/9cc00657107eaab5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756710590496,"stop":1756710593818,"duration":3322}},{"uid":"8f251bc435fbc51","reportUrl":"https://pagopa.github.io/rtp-platform-qa/512//#testresult/8f251bc435fbc51","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756624059154,"stop":1756624061911,"duration":2757}},{"uid":"b1f5456e0b24d43d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/511//#testresult/b1f5456e0b24d43d","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756537650606,"stop":1756537654162,"duration":3556}},{"uid":"ca9d9b37f0901b5c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/510//#testresult/ca9d9b37f0901b5c","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756451307403,"stop":1756451310378,"duration":2975}},{"uid":"8171b3ea10635b03","reportUrl":"https://pagopa.github.io/rtp-platform-qa/509//#testresult/8171b3ea10635b03","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756385971779,"stop":1756385975447,"duration":3668}},{"uid":"acc9db05b0a2cbea","reportUrl":"https://pagopa.github.io/rtp-platform-qa/508//#testresult/acc9db05b0a2cbea","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756364940015,"stop":1756364943953,"duration":3938}},{"uid":"b74faf74aa4de53","reportUrl":"https://pagopa.github.io/rtp-platform-qa/507//#testresult/b74faf74aa4de53","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756278527045,"stop":1756278530609,"duration":3564}},{"uid":"9da287c9088a07a1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/506//#testresult/9da287c9088a07a1","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756192117607,"stop":1756192120673,"duration":3066}},{"uid":"36388b14e121cd51","reportUrl":"https://pagopa.github.io/rtp-platform-qa/505//#testresult/36388b14e121cd51","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756105763650,"stop":1756105766811,"duration":3161}},{"uid":"b4d28f7b3591d943","reportUrl":"https://pagopa.github.io/rtp-platform-qa/504//#testresult/b4d28f7b3591d943","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756019251553,"stop":1756019254627,"duration":3074}},{"uid":"2c8cee8787ffe32e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/503//#testresult/2c8cee8787ffe32e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755932844296,"stop":1755932847282,"duration":2986}},{"uid":"9252bd82bbcf60e2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/502//#testresult/9252bd82bbcf60e2","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755847718406,"stop":1755847721679,"duration":3273}},{"uid":"f733a670b579999","reportUrl":"https://pagopa.github.io/rtp-platform-qa/501//#testresult/f733a670b579999","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755846500368,"stop":1755846503678,"duration":3310}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"c5eecdc1c0ca23e3.json","parameterValues":[]}