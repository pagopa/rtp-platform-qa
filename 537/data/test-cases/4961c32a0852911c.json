{"uid":"4961c32a0852911c","name":"An RTP callback is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback_DS_08N_compliant","historyId":"d5748ad5568cbf463a334911f922c3be","time":{"start":1758270990128,"stop":1758270990686,"duration":558},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('An RTP callback is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback_DS_08N_compliant():\n        rtp_data = generate_rtp_data()\n    \n>       debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_callback.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758270979519,"stop":1758270979579,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2488-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":51,"broken":18,"skipped":0,"passed":12,"unknown":0,"total":81},"items":[{"uid":"cc6d551271f00ed2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/536//#testresult/cc6d551271f00ed2","status":"passed","time":{"start":1758266453060,"stop":1758266456491,"duration":3431}},{"uid":"394563d01856632a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/535//#testresult/394563d01856632a","status":"passed","time":{"start":1758180040921,"stop":1758180045978,"duration":5057}},{"uid":"f59b16324fd8c0b0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/534//#testresult/f59b16324fd8c0b0","status":"passed","time":{"start":1758093637701,"stop":1758093640794,"duration":3093}},{"uid":"e959ceb272196bf1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/533//#testresult/e959ceb272196bf1","status":"passed","time":{"start":1758007298728,"stop":1758007302394,"duration":3666}},{"uid":"e3b6f478b43b1d2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/532//#testresult/e3b6f478b43b1d2","status":"passed","time":{"start":1757920927509,"stop":1757920930619,"duration":3110}},{"uid":"777862137dec28ba","reportUrl":"https://pagopa.github.io/rtp-platform-qa/531//#testresult/777862137dec28ba","status":"passed","time":{"start":1757834366297,"stop":1757834370907,"duration":4610}},{"uid":"c7476ac10f3bc62e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/530//#testresult/c7476ac10f3bc62e","status":"passed","time":{"start":1757747913828,"stop":1757747917137,"duration":3309}},{"uid":"fd6308ad943bb073","reportUrl":"https://pagopa.github.io/rtp-platform-qa/529//#testresult/fd6308ad943bb073","status":"passed","time":{"start":1757665823268,"stop":1757665828386,"duration":5118}},{"uid":"316073119a13be97","reportUrl":"https://pagopa.github.io/rtp-platform-qa/528//#testresult/316073119a13be97","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1757661614611,"stop":1757661618188,"duration":3577}},{"uid":"3ba598b5a8a4f307","reportUrl":"https://pagopa.github.io/rtp-platform-qa/527//#testresult/3ba598b5a8a4f307","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1757598316981,"stop":1757598319635,"duration":2654}},{"uid":"77751df68ab13982","reportUrl":"https://pagopa.github.io/rtp-platform-qa/526//#testresult/77751df68ab13982","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1757575264123,"stop":1757575266799,"duration":2676}},{"uid":"a664872f071f295a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/525//#testresult/a664872f071f295a","status":"failed","statusDetails":"AssertionError: assert 503 == 201\n +  where 503 = <Response [503]>.status_code","time":{"start":1757488959597,"stop":1757488967293,"duration":7696}},{"uid":"783a530d7b80ee7a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/524//#testresult/783a530d7b80ee7a","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1757402495726,"stop":1757402498007,"duration":2281}},{"uid":"9cd1a55458e64b4a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/523//#testresult/9cd1a55458e64b4a","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1757316092666,"stop":1757316095206,"duration":2540}},{"uid":"9c2fc266ec409af7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/522//#testresult/9c2fc266ec409af7","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1757229580825,"stop":1757229583356,"duration":2531}},{"uid":"58841583dccaf130","reportUrl":"https://pagopa.github.io/rtp-platform-qa/521//#testresult/58841583dccaf130","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1757143112362,"stop":1757143116339,"duration":3977}},{"uid":"32afde91d59e323b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/520//#testresult/32afde91d59e323b","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1757057090067,"stop":1757057090673,"duration":606}},{"uid":"b243a47fb58b082b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/519//#testresult/b243a47fb58b082b","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1756969621934,"stop":1756969624476,"duration":2542}},{"uid":"8df236b6590c1d88","reportUrl":"https://pagopa.github.io/rtp-platform-qa/518//#testresult/8df236b6590c1d88","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1756910831639,"stop":1756910835613,"duration":3974}},{"uid":"3628ff5f95f0dfb0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/517//#testresult/3628ff5f95f0dfb0","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1756883242652,"stop":1756883245489,"duration":2837}}]},"tags":["callback","happy_path"]},"source":"4961c32a0852911c.json","parameterValues":[]}