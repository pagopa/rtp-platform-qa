{"uid":"7a55c54b190ce38a","name":"A Service Provider is authenticated","fullName":"tests.test_auth#test_get_valid_token","historyId":"e813f3b4e17d0411820f4d08ba7e7042","time":{"start":1758270987882,"stop":1758270988439,"duration":557},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('Authentication')\n    @allure.story('Service Provider authentication')\n    @allure.title('A Service Provider is authenticated')\n    @pytest.mark.auth\n    @pytest.mark.happy_path\n    def test_get_valid_token():\n>       access_token = get_valid_access_token(client_id=secrets.creditor_service_provider.client_id,\n                                              client_secret=secrets.creditor_service_provider.client_secret,\n                                              access_token_function=get_access_token)\n\nfunctional-tests/tests/test_auth.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758270979519,"stop":1758270979579,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service Provider authentication"},{"name":"feature","value":"Authentication"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_auth"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2488-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_auth"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":18,"skipped":0,"passed":250,"unknown":0,"total":268},"items":[{"uid":"2c55b7970313fc1f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/536//#testresult/2c55b7970313fc1f","status":"passed","time":{"start":1758266447831,"stop":1758266448531,"duration":700}},{"uid":"34d4eb5312db5938","reportUrl":"https://pagopa.github.io/rtp-platform-qa/535//#testresult/34d4eb5312db5938","status":"passed","time":{"start":1758180033319,"stop":1758180035014,"duration":1695}},{"uid":"a0d72f52e2996437","reportUrl":"https://pagopa.github.io/rtp-platform-qa/534//#testresult/a0d72f52e2996437","status":"passed","time":{"start":1758093632947,"stop":1758093633787,"duration":840}},{"uid":"6c240554cde1b0f1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/533//#testresult/6c240554cde1b0f1","status":"passed","time":{"start":1758007292884,"stop":1758007293605,"duration":721}},{"uid":"7fc58e5a9d74379c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/532//#testresult/7fc58e5a9d74379c","status":"passed","time":{"start":1757920923306,"stop":1757920923660,"duration":354}},{"uid":"e0c6bbb5350f9e90","reportUrl":"https://pagopa.github.io/rtp-platform-qa/531//#testresult/e0c6bbb5350f9e90","status":"passed","time":{"start":1757834359956,"stop":1757834360828,"duration":872}},{"uid":"3215832c0bf561fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/530//#testresult/3215832c0bf561fe","status":"passed","time":{"start":1757747909039,"stop":1757747909692,"duration":653}},{"uid":"f80ef5e2c6bb2cee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/529//#testresult/f80ef5e2c6bb2cee","status":"passed","time":{"start":1757665816916,"stop":1757665817767,"duration":851}},{"uid":"a11d9e6a0fcf330f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/528//#testresult/a11d9e6a0fcf330f","status":"passed","time":{"start":1757661608304,"stop":1757661609234,"duration":930}},{"uid":"b5bdc77062a4f088","reportUrl":"https://pagopa.github.io/rtp-platform-qa/527//#testresult/b5bdc77062a4f088","status":"passed","time":{"start":1757598312578,"stop":1757598312966,"duration":388}},{"uid":"12d92ca153c0c436","reportUrl":"https://pagopa.github.io/rtp-platform-qa/526//#testresult/12d92ca153c0c436","status":"passed","time":{"start":1757575258973,"stop":1757575259671,"duration":698}},{"uid":"4ffb7cd110b7a04c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/525//#testresult/4ffb7cd110b7a04c","status":"passed","time":{"start":1757488950298,"stop":1757488951024,"duration":726}},{"uid":"40b716f0b5216bdd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/524//#testresult/40b716f0b5216bdd","status":"passed","time":{"start":1757402488482,"stop":1757402489173,"duration":691}},{"uid":"69e6d5b648d94c94","reportUrl":"https://pagopa.github.io/rtp-platform-qa/523//#testresult/69e6d5b648d94c94","status":"passed","time":{"start":1757316086774,"stop":1757316087495,"duration":721}},{"uid":"6f0ce5e5b8f1deeb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/522//#testresult/6f0ce5e5b8f1deeb","status":"passed","time":{"start":1757229574575,"stop":1757229575567,"duration":992}},{"uid":"1ac5ac43d2f7023a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/521//#testresult/1ac5ac43d2f7023a","status":"passed","time":{"start":1757143105530,"stop":1757143106452,"duration":922}},{"uid":"1c76ec2a19bdfa9f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/520//#testresult/1c76ec2a19bdfa9f","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1757057087586,"stop":1757057088190,"duration":604}},{"uid":"1506ad5f27e69180","reportUrl":"https://pagopa.github.io/rtp-platform-qa/519//#testresult/1506ad5f27e69180","status":"passed","time":{"start":1756969616221,"stop":1756969616929,"duration":708}},{"uid":"6b20a95035d01886","reportUrl":"https://pagopa.github.io/rtp-platform-qa/518//#testresult/6b20a95035d01886","status":"passed","time":{"start":1756910823761,"stop":1756910824748,"duration":987}},{"uid":"9adee270fff1fe41","reportUrl":"https://pagopa.github.io/rtp-platform-qa/517//#testresult/9adee270fff1fe41","status":"passed","time":{"start":1756883237161,"stop":1756883237890,"duration":729}}]},"tags":["auth","happy_path"]},"source":"7a55c54b190ce38a.json","parameterValues":[]}