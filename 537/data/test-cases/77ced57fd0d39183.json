{"uid":"77ced57fd0d39183","name":"Get list of service providers successfully","fullName":"tests.test_service_providers_registry.TestServiceProvidersRegistry#test_get_service_providers_success","historyId":"672313a90fcd5952f4d0a6c4b0a65474","time":{"start":1758271096822,"stop":1758271096822,"duration":0},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"self = <tests.test_service_providers_registry.TestServiceProvidersRegistry object at 0x7fbc91a265d0>\n\n    @pytest.fixture(autouse=True)\n    def setup(self):\n>       self.access_token = get_valid_access_token(\n            client_id=secrets.pagopa_integration_service_registry.client_id,\n            client_secret=secrets.pagopa_integration_service_registry.client_secret,\n            access_token_function=get_access_token\n        )\n\nfunctional-tests/tests/test_service_providers_registry.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758270979519,"stop":1758270979579,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1758271096822,"stop":1758271097382,"duration":560},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/rtp-platform-qa/rtp-platform-qa/functional-tests/tests/test_service_providers_registry.py\", line 16, in setup\n    self.access_token = get_valid_access_token(\n                        ~~~~~~~~~~~~~~~~~~~~~~^\n        client_id=secrets.pagopa_integration_service_registry.client_id,\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        client_secret=secrets.pagopa_integration_service_registry.client_secret,\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        access_token_function=get_access_token\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/home/runner/work/rtp-platform-qa/rtp-platform-qa/api/auth.py\", line 8, in get_valid_access_token\n    token_response.raise_for_status()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py\", line 1026, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"pagoPA retrieves service providers registry"},{"name":"feature","value":"Service Providers Registry"},{"name":"tag","value":"happy_path"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_service_providers_registry"},{"name":"subSuite","value":"TestServiceProvidersRegistry"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2488-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_service_providers_registry"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":11,"skipped":0,"passed":163,"unknown":0,"total":174},"items":[{"uid":"b42f7f16dbead3a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/536//#testresult/b42f7f16dbead3a","status":"passed","time":{"start":1758267128720,"stop":1758267129148,"duration":428}},{"uid":"50dbd12ca553093a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/535//#testresult/50dbd12ca553093a","status":"passed","time":{"start":1758180737483,"stop":1758180738067,"duration":584}},{"uid":"7bf71ba3a5350b77","reportUrl":"https://pagopa.github.io/rtp-platform-qa/534//#testresult/7bf71ba3a5350b77","status":"passed","time":{"start":1758094312949,"stop":1758094313388,"duration":439}},{"uid":"18745324f85062ca","reportUrl":"https://pagopa.github.io/rtp-platform-qa/533//#testresult/18745324f85062ca","status":"passed","time":{"start":1758007983134,"stop":1758007983626,"duration":492}},{"uid":"93eb26cf719d16e0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/532//#testresult/93eb26cf719d16e0","status":"passed","time":{"start":1757921607251,"stop":1757921607654,"duration":403}},{"uid":"f7a1a74947054c77","reportUrl":"https://pagopa.github.io/rtp-platform-qa/531//#testresult/f7a1a74947054c77","status":"passed","time":{"start":1757835172073,"stop":1757835172725,"duration":652}},{"uid":"ac05ec4a365bf277","reportUrl":"https://pagopa.github.io/rtp-platform-qa/530//#testresult/ac05ec4a365bf277","status":"passed","time":{"start":1757748812455,"stop":1757748812930,"duration":475}},{"uid":"c977cfc37aa1cd3f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/529//#testresult/c977cfc37aa1cd3f","status":"passed","time":{"start":1757666527294,"stop":1757666527940,"duration":646}},{"uid":"4c582a3675518186","reportUrl":"https://pagopa.github.io/rtp-platform-qa/528//#testresult/4c582a3675518186","status":"passed","time":{"start":1757661715984,"stop":1757661716569,"duration":585}},{"uid":"cdf2c9c6ef5e5b9e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/527//#testresult/cdf2c9c6ef5e5b9e","status":"passed","time":{"start":1757598416647,"stop":1757598417080,"duration":433}},{"uid":"231a535f785110a8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/526//#testresult/231a535f785110a8","status":"passed","time":{"start":1757575342990,"stop":1757575343415,"duration":425}},{"uid":"66dd51ad6e73c765","reportUrl":"https://pagopa.github.io/rtp-platform-qa/525//#testresult/66dd51ad6e73c765","status":"passed","time":{"start":1757489096225,"stop":1757489096677,"duration":452}},{"uid":"3be3b5ab8ee30979","reportUrl":"https://pagopa.github.io/rtp-platform-qa/524//#testresult/3be3b5ab8ee30979","status":"passed","time":{"start":1757402571644,"stop":1757402572025,"duration":381}},{"uid":"8cd49425d15aea49","reportUrl":"https://pagopa.github.io/rtp-platform-qa/523//#testresult/8cd49425d15aea49","status":"passed","time":{"start":1757316165821,"stop":1757316166201,"duration":380}},{"uid":"81d9a5cb28ad3dbd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/522//#testresult/81d9a5cb28ad3dbd","status":"passed","time":{"start":1757229715028,"stop":1757229715424,"duration":396}},{"uid":"d4c1bb5f2119de4e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/521//#testresult/d4c1bb5f2119de4e","status":"passed","time":{"start":1757143282135,"stop":1757143282797,"duration":662}},{"uid":"4199eba07e23cf84","reportUrl":"https://pagopa.github.io/rtp-platform-qa/520//#testresult/4199eba07e23cf84","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1757057146216,"stop":1757057146216,"duration":0}},{"uid":"572b34b60b7305f1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/519//#testresult/572b34b60b7305f1","status":"passed","time":{"start":1756969698070,"stop":1756969698459,"duration":389}},{"uid":"2b15bcc8787167e8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/518//#testresult/2b15bcc8787167e8","status":"passed","time":{"start":1756910940420,"stop":1756910941070,"duration":650}},{"uid":"fbce408bd7da11f7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/517//#testresult/fbce408bd7da11f7","status":"passed","time":{"start":1756883319772,"stop":1756883320209,"duration":437}}]},"tags":["happy_path"]},"source":"77ced57fd0d39183.json","parameterValues":[]}