{"uid":"adee8f068a00230b","name":"An RTP is sent through API","fullName":"tests.test_send_rtp#test_cannot_send_rtp_not_activated_user","historyId":"6160dd4465c6621e0038ef4589227e7c","time":{"start":1758271096264,"stop":1758271096807,"duration":543},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a non-activated debtor')\n    @allure.title('An RTP is sent through API')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_cannot_send_rtp_not_activated_user():\n        rtp_data = generate_rtp_data()\n    \n>       creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_send_rtp.py:232: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758270979519,"stop":1758270979579,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a non-activated debtor"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2488-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":37,"broken":18,"skipped":0,"passed":191,"unknown":0,"total":246},"items":[{"uid":"49fb0b1ca89996c8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/536//#testresult/49fb0b1ca89996c8","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1758267127164,"stop":1758267128047,"duration":883}},{"uid":"c2e40adb2a1f6bce","reportUrl":"https://pagopa.github.io/rtp-platform-qa/535//#testresult/c2e40adb2a1f6bce","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1758180735471,"stop":1758180736662,"duration":1191}},{"uid":"592700141b5eef36","reportUrl":"https://pagopa.github.io/rtp-platform-qa/534//#testresult/592700141b5eef36","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1758094311367,"stop":1758094312233,"duration":866}},{"uid":"dddd7f7d056f8ae2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/533//#testresult/dddd7f7d056f8ae2","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1758007981487,"stop":1758007982422,"duration":935}},{"uid":"d700d5e18e47b82","reportUrl":"https://pagopa.github.io/rtp-platform-qa/532//#testresult/d700d5e18e47b82","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1757921605793,"stop":1757921606584,"duration":791}},{"uid":"daa41f59b21f9689","reportUrl":"https://pagopa.github.io/rtp-platform-qa/531//#testresult/daa41f59b21f9689","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1757835169946,"stop":1757835171156,"duration":1210}},{"uid":"f45e9a87d8141b7a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/530//#testresult/f45e9a87d8141b7a","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1757748810885,"stop":1757748811790,"duration":905}},{"uid":"dd88273e6c3b9565","reportUrl":"https://pagopa.github.io/rtp-platform-qa/529//#testresult/dd88273e6c3b9565","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1757666524787,"stop":1757666526341,"duration":1554}},{"uid":"32586a05d53d1598","reportUrl":"https://pagopa.github.io/rtp-platform-qa/528//#testresult/32586a05d53d1598","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1757661713941,"stop":1757661715110,"duration":1169}},{"uid":"5918445643e1b77b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/527//#testresult/5918445643e1b77b","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1757598414472,"stop":1757598415936,"duration":1464}},{"uid":"54ef5d824bc6fbce","reportUrl":"https://pagopa.github.io/rtp-platform-qa/526//#testresult/54ef5d824bc6fbce","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1757575341363,"stop":1757575342254,"duration":891}},{"uid":"ec10cff17587c769","reportUrl":"https://pagopa.github.io/rtp-platform-qa/525//#testresult/ec10cff17587c769","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1757489094551,"stop":1757489095515,"duration":964}},{"uid":"f61fcc672427137b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/524//#testresult/f61fcc672427137b","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1757402570219,"stop":1757402570955,"duration":736}},{"uid":"63e9c7aed0b6a979","reportUrl":"https://pagopa.github.io/rtp-platform-qa/523//#testresult/63e9c7aed0b6a979","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1757316164403,"stop":1757316165147,"duration":744}},{"uid":"a7868429fbc0d6a2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/522//#testresult/a7868429fbc0d6a2","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1757229713431,"stop":1757229714236,"duration":805}},{"uid":"297601564408fcf5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/521//#testresult/297601564408fcf5","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1757143279731,"stop":1757143281033,"duration":1302}},{"uid":"b47323b4ed8ccf89","reportUrl":"https://pagopa.github.io/rtp-platform-qa/520//#testresult/b47323b4ed8ccf89","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1757057145571,"stop":1757057146201,"duration":630}},{"uid":"c24b97b3c26078bf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/519//#testresult/c24b97b3c26078bf","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1756969696611,"stop":1756969697409,"duration":798}},{"uid":"b5d72759b3fdb15","reportUrl":"https://pagopa.github.io/rtp-platform-qa/518//#testresult/b5d72759b3fdb15","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1756910938201,"stop":1756910939546,"duration":1345}},{"uid":"aaa85e09f9dc118d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/517//#testresult/aaa85e09f9dc118d","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1756883318160,"stop":1756883319055,"duration":895}}]},"tags":["unhappy_path","send"]},"source":"adee8f068a00230b.json","parameterValues":[]}