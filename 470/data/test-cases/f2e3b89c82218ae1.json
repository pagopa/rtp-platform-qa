{"uid":"f2e3b89c82218ae1","name":"RTP is successfully retrieved","fullName":"tests.test_get_rtp#test_get_rtp_success","historyId":"caeb9610ab96a7a077f09cf26a913a9a","time":{"start":1754291684092,"stop":1754291685347,"duration":1255},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Get')\n    @allure.story('Service provider retrieves an RTP')\n    @allure.title('RTP is successfully retrieved')\n    @pytest.mark.get\n    @pytest.mark.happy_path\n    def test_get_rtp_success():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n>       creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_get_rtp.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1754291619678,"stop":1754291619736,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Get"},{"name":"story","value":"Service provider retrieves an RTP"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"pkrvmjbmru5nbw0"},{"name":"thread","value":"2505-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":13,"skipped":0,"passed":66,"unknown":0,"total":79},"items":[{"uid":"2bd194678beb5185","reportUrl":"https://pagopa.github.io/rtp-platform-qa/469//#testresult/2bd194678beb5185","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754204873024,"stop":1754204873715,"duration":691}},{"uid":"8c1905740bfed4eb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/468//#testresult/8c1905740bfed4eb","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754118485732,"stop":1754118486854,"duration":1122}},{"uid":"ef0567fdb065fd7b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/467//#testresult/ef0567fdb065fd7b","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754051912847,"stop":1754051913712,"duration":865}},{"uid":"e678bc695dfa273b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/466//#testresult/e678bc695dfa273b","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754032279724,"stop":1754032281177,"duration":1453}},{"uid":"1d7c70ee505f0855","reportUrl":"https://pagopa.github.io/rtp-platform-qa/465//#testresult/1d7c70ee505f0855","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753974033238,"stop":1753974033985,"duration":747}},{"uid":"15c5e4b315b48e9c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/464//#testresult/15c5e4b315b48e9c","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753945845373,"stop":1753945846601,"duration":1228}},{"uid":"f454b8b7d355b2e0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/463//#testresult/f454b8b7d355b2e0","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753878280686,"stop":1753878281940,"duration":1254}},{"uid":"17898b82095d9813","reportUrl":"https://pagopa.github.io/rtp-platform-qa/462//#testresult/17898b82095d9813","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753859493290,"stop":1753859494534,"duration":1244}},{"uid":"2d0b9200efb0a250","reportUrl":"https://pagopa.github.io/rtp-platform-qa/461//#testresult/2d0b9200efb0a250","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753773051904,"stop":1753773053155,"duration":1251}},{"uid":"aecfc9a63d832a9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/460//#testresult/aecfc9a63d832a9","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753686726684,"stop":1753686727630,"duration":946}},{"uid":"d2c86f1712eff27d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/459//#testresult/d2c86f1712eff27d","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753600064622,"stop":1753600065319,"duration":697}},{"uid":"7c4352b4262dbeec","reportUrl":"https://pagopa.github.io/rtp-platform-qa/458//#testresult/7c4352b4262dbeec","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753513676262,"stop":1753513677070,"duration":808}},{"uid":"5a2b37b5415ed8b5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/457//#testresult/5a2b37b5415ed8b5","status":"passed","time":{"start":1753433579747,"stop":1753433583088,"duration":3341}},{"uid":"4e5517d30ab73fc6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/456//#testresult/4e5517d30ab73fc6","status":"passed","time":{"start":1753427400010,"stop":1753427402309,"duration":2299}},{"uid":"22f0f952016049f7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/455//#testresult/22f0f952016049f7","status":"passed","time":{"start":1753366998951,"stop":1753367001912,"duration":2961}},{"uid":"235da5d7d53ee1d8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/454//#testresult/235da5d7d53ee1d8","status":"passed","time":{"start":1753351360530,"stop":1753351362786,"duration":2256}},{"uid":"f505ebbbdd706813","reportUrl":"https://pagopa.github.io/rtp-platform-qa/453//#testresult/f505ebbbdd706813","status":"passed","time":{"start":1753341010646,"stop":1753341013075,"duration":2429}},{"uid":"87dbde1a3a10bcb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/452//#testresult/87dbde1a3a10bcb","status":"passed","time":{"start":1753254629896,"stop":1753254631872,"duration":1976}},{"uid":"5d671479534f9dd7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/451//#testresult/5d671479534f9dd7","status":"passed","time":{"start":1753168188936,"stop":1753168190788,"duration":1852}},{"uid":"d0259ef0d5e2d8f4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/450//#testresult/d0259ef0d5e2d8f4","status":"passed","time":{"start":1753081909794,"stop":1753081911687,"duration":1893}}]},"tags":["get","happy_path"]},"source":"f2e3b89c82218ae1.json","parameterValues":[]}