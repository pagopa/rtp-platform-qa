{"uid":"b0c040df6bf582bb","name":"RTP callback is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback","historyId":"564f1dce6aedb3cd53747bbee764bfb9","time":{"start":1743318391385,"stop":1743318391386,"duration":1},"status":"broken","statusMessage":"ValueError: Could not deserialize PKCS12 data","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider receives RTP callback')\n    @allure.title('RTP callback is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback():\n        rtp_data = generate_rtp_data()\n    \n>       cert, key = pfx_to_pem(secrets.debtor_service_provider_mock_PFX_base64,\n                               secrets.debtor_service_provider_mock_PFX_password_base64,\n                               config.cert_path,\n                               config.key_path)\n\nfunctional-tests/tests/test_callback.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nbase64_pfx = '', base64_password = '', cert_destination_path = 'config/cert.pem'\nkey_destination_path = 'config/key.pem'\n\n    def pfx_to_pem(base64_pfx, base64_password, cert_destination_path=None, key_destination_path=None):\n    \n        pfx_data = base64.b64decode(base64_pfx)\n        pfx_password = base64.b64decode(base64_password)\n    \n>       private_key, certificate, additional_certs = load_key_and_certificates(pfx_data, pfx_password)\nE       ValueError: Could not deserialize PKCS12 data\n\nutils/cryptography.py:21: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1743318339739,"stop":1743318339799,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Callback"},{"name":"story","value":"Service provider receives RTP callback"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"fv-az1786-487"},{"name":"thread","value":"2362-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":0,"unknown":0,"total":10},"items":[{"uid":"13122ca45eda3570","reportUrl":"https://pagopa.github.io/rtp-platform-qa/259//#testresult/13122ca45eda3570","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743231993128,"stop":1743231993129,"duration":1}},{"uid":"7a2cf9b170f0f695","reportUrl":"https://pagopa.github.io/rtp-platform-qa/258//#testresult/7a2cf9b170f0f695","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743145626701,"stop":1743145626701,"duration":0}},{"uid":"28f7912999290df8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/257//#testresult/28f7912999290df8","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743059220275,"stop":1743059220276,"duration":1}},{"uid":"ace8415d8bcf1f63","reportUrl":"https://pagopa.github.io/rtp-platform-qa/256//#testresult/ace8415d8bcf1f63","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1742972814194,"stop":1742972814195,"duration":1}},{"uid":"6aafaae2b1c39171","reportUrl":"https://pagopa.github.io/rtp-platform-qa/255//#testresult/6aafaae2b1c39171","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1742886423771,"stop":1742886423772,"duration":1}},{"uid":"68e4775ceda9b8da","reportUrl":"https://pagopa.github.io/rtp-platform-qa/254//#testresult/68e4775ceda9b8da","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1742800024487,"stop":1742800024487,"duration":0}},{"uid":"a3051b236d368821","reportUrl":"https://pagopa.github.io/rtp-platform-qa/253//#testresult/a3051b236d368821","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1742713595590,"stop":1742713595591,"duration":1}},{"uid":"1bd760b11f66da73","reportUrl":"https://pagopa.github.io/rtp-platform-qa/252//#testresult/1bd760b11f66da73","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1742627176058,"stop":1742627176059,"duration":1}},{"uid":"b5060bf3e16ae5db","reportUrl":"https://pagopa.github.io/rtp-platform-qa/251//#testresult/b5060bf3e16ae5db","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1742576847783,"stop":1742576847784,"duration":1}}]},"tags":["callback","happy_path"]},"source":"b0c040df6bf582bb.json","parameterValues":[]}