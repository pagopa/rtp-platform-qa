{"uid":"210bf2ada92e6eca","name":"An RTP is sent through API","fullName":"tests.test_send_rtp#test_send_rtp_api","historyId":"6c14d2fbb180e49a106680915fe95577","time":{"start":1739862386889,"stop":1739862390095,"duration":3206},"status":"failed","statusMessage":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('An RTP is sent through API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    def test_send_rtp_api():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                                                      client_secret=secrets.debtor_service_provider.client_secret)\n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret)\n    \n        res = activate(debtor_service_provider_access_token, rtp_data['payer']['payerId'],\n                       secrets.debtor_service_provider.service_provider_id)\n>       assert res.status_code == 201, 'Error activating debtor'\nE       AssertionError: Error activating debtor\nE       assert 401 == 201\nE        +  where 401 = <Response [401]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:27: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1739862369950,"stop":1739862370006,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"fv-az1280-696"},{"name":"thread","value":"2280-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":42,"broken":0,"skipped":0,"passed":32,"unknown":0,"total":74},"items":[{"uid":"84d0a6af6d57bcd4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/201//#testresult/84d0a6af6d57bcd4","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1739776009898,"stop":1739776013142,"duration":3244}},{"uid":"6e378a8fd003c7dd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/200//#testresult/6e378a8fd003c7dd","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1739689535589,"stop":1739689538621,"duration":3032}},{"uid":"a7e9ffed1c07377e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/199//#testresult/a7e9ffed1c07377e","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1739603140381,"stop":1739603143035,"duration":2654}},{"uid":"b101193aef2af82c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/198//#testresult/b101193aef2af82c","status":"passed","time":{"start":1739516769345,"stop":1739516772139,"duration":2794}},{"uid":"12029763ef9df5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/197//#testresult/12029763ef9df5","status":"passed","time":{"start":1739430412341,"stop":1739430415344,"duration":3003}},{"uid":"39027e51d6b3562b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/196//#testresult/39027e51d6b3562b","status":"passed","time":{"start":1739343977127,"stop":1739343980535,"duration":3408}},{"uid":"90dc1b54215ee000","reportUrl":"https://pagopa.github.io/rtp-platform-qa/195//#testresult/90dc1b54215ee000","status":"passed","time":{"start":1739257584687,"stop":1739257588432,"duration":3745}},{"uid":"858047f7e7348287","reportUrl":"https://pagopa.github.io/rtp-platform-qa/194//#testresult/858047f7e7348287","status":"passed","time":{"start":1739171228373,"stop":1739171231024,"duration":2651}},{"uid":"ff63599029d57786","reportUrl":"https://pagopa.github.io/rtp-platform-qa/193//#testresult/ff63599029d57786","status":"passed","time":{"start":1739084770430,"stop":1739084773081,"duration":2651}},{"uid":"ea8abcd678fef5e1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/192//#testresult/ea8abcd678fef5e1","status":"passed","time":{"start":1738998375506,"stop":1738998378705,"duration":3199}},{"uid":"f686e1021ab15ced","reportUrl":"https://pagopa.github.io/rtp-platform-qa/191//#testresult/f686e1021ab15ced","status":"passed","time":{"start":1738912002794,"stop":1738912005466,"duration":2672}},{"uid":"b00a94aa1b76f66b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/190//#testresult/b00a94aa1b76f66b","status":"passed","time":{"start":1738829714840,"stop":1738829718181,"duration":3341}},{"uid":"658dbb5fd566e6ac","reportUrl":"https://pagopa.github.io/rtp-platform-qa/189//#testresult/658dbb5fd566e6ac","status":"passed","time":{"start":1738825608248,"stop":1738825610927,"duration":2679}},{"uid":"9535f882ac69cd65","reportUrl":"https://pagopa.github.io/rtp-platform-qa/188//#testresult/9535f882ac69cd65","status":"passed","time":{"start":1738765728020,"stop":1738765730877,"duration":2857}},{"uid":"c6093efa0f4cbfea","reportUrl":"https://pagopa.github.io/rtp-platform-qa/187//#testresult/c6093efa0f4cbfea","status":"passed","time":{"start":1738739211011,"stop":1738739214797,"duration":3786}},{"uid":"a9b2ecc609f1f14","reportUrl":"https://pagopa.github.io/rtp-platform-qa/186//#testresult/a9b2ecc609f1f14","status":"passed","time":{"start":1738663048383,"stop":1738663051186,"duration":2803}},{"uid":"ea04f2f6f15da06b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/185//#testresult/ea04f2f6f15da06b","status":"passed","time":{"start":1738652789792,"stop":1738652792695,"duration":2903}},{"uid":"430362c9bab4fa11","reportUrl":"https://pagopa.github.io/rtp-platform-qa/184//#testresult/430362c9bab4fa11","status":"passed","time":{"start":1738566413462,"stop":1738566415997,"duration":2535}},{"uid":"d7c7713672bbfa44","reportUrl":"https://pagopa.github.io/rtp-platform-qa/183//#testresult/d7c7713672bbfa44","status":"passed","time":{"start":1738479980911,"stop":1738479983807,"duration":2896}},{"uid":"2a16ffd668d97271","reportUrl":"https://pagopa.github.io/rtp-platform-qa/182//#testresult/2a16ffd668d97271","status":"passed","time":{"start":1738393566616,"stop":1738393569351,"duration":2735}}]},"tags":["send","happy_path"]},"source":"210bf2ada92e6eca.json","parameterValues":[]}