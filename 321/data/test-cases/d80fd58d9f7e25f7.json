{"uid":"d80fd58d9f7e25f7","name":"Cannot send RTP with invalid amount","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi_invalid_amount","historyId":"3a2d68c98ccbf254d83aa6a209f2af2f","time":{"start":1746774442389,"stop":1746774444204,"duration":1815},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with invalid amount')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_invalid_amount():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['amount'] = -1\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:54: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1746774414998,"stop":1746774415053,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az791-527"},{"name":"thread","value":"2403-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":80,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":81},"items":[{"uid":"17847d96a2f60c68","reportUrl":"https://pagopa.github.io/rtp-platform-qa/320//#testresult/17847d96a2f60c68","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746688023652,"stop":1746688024732,"duration":1080}},{"uid":"626ad89e642387a7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/319//#testresult/626ad89e642387a7","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746601642061,"stop":1746601643239,"duration":1178}},{"uid":"8d69e40b363482b0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/318//#testresult/8d69e40b363482b0","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746515236930,"stop":1746515238732,"duration":1802}},{"uid":"8c94dc9584804c65","reportUrl":"https://pagopa.github.io/rtp-platform-qa/317//#testresult/8c94dc9584804c65","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746428868633,"stop":1746428869831,"duration":1198}},{"uid":"6911ba2118554679","reportUrl":"https://pagopa.github.io/rtp-platform-qa/316//#testresult/6911ba2118554679","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746342424054,"stop":1746342425386,"duration":1332}},{"uid":"88085d61960baed3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/315//#testresult/88085d61960baed3","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746256000639,"stop":1746256002313,"duration":1674}},{"uid":"f3d11367871ae733","reportUrl":"https://pagopa.github.io/rtp-platform-qa/314//#testresult/f3d11367871ae733","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746169632645,"stop":1746169634338,"duration":1693}},{"uid":"d5b73e751ab9d8df","reportUrl":"https://pagopa.github.io/rtp-platform-qa/313//#testresult/d5b73e751ab9d8df","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746083256878,"stop":1746083258051,"duration":1173}},{"uid":"2a668a9edb3000fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/312//#testresult/2a668a9edb3000fe","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745996837513,"stop":1745996838501,"duration":988}},{"uid":"ec0ff01ea20d9531","reportUrl":"https://pagopa.github.io/rtp-platform-qa/311//#testresult/ec0ff01ea20d9531","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745910441662,"stop":1745910442970,"duration":1308}},{"uid":"20b08b13feacdac","reportUrl":"https://pagopa.github.io/rtp-platform-qa/310//#testresult/20b08b13feacdac","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745824817610,"stop":1745824818836,"duration":1226}},{"uid":"4bd629a74ac5f90a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/309//#testresult/4bd629a74ac5f90a","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745737596490,"stop":1745737597925,"duration":1435}},{"uid":"d42179680e16ccf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/308//#testresult/d42179680e16ccf","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745651197940,"stop":1745651199098,"duration":1158}},{"uid":"66092c4fa83aeca3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/307//#testresult/66092c4fa83aeca3","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745564825843,"stop":1745564827301,"duration":1458}},{"uid":"412fbc5f7d01fa17","reportUrl":"https://pagopa.github.io/rtp-platform-qa/306//#testresult/412fbc5f7d01fa17","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745491302990,"stop":1745491304410,"duration":1420}},{"uid":"6482d58d1c23b1c0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/305//#testresult/6482d58d1c23b1c0","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745478445538,"stop":1745478447008,"duration":1470}},{"uid":"a646ec447dc39db3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/304//#testresult/a646ec447dc39db3","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745392049806,"stop":1745392051669,"duration":1863}},{"uid":"789a8b6d4500e272","reportUrl":"https://pagopa.github.io/rtp-platform-qa/303//#testresult/789a8b6d4500e272","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745305628495,"stop":1745305629829,"duration":1334}},{"uid":"ad3b579009f397d7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/302//#testresult/ad3b579009f397d7","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745219268820,"stop":1745219270557,"duration":1737}},{"uid":"83a0b3d257741f64","reportUrl":"https://pagopa.github.io/rtp-platform-qa/301//#testresult/83a0b3d257741f64","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745132798702,"stop":1745132800261,"duration":1559}}]},"tags":["cbi","unhappy_path","send"]},"source":"d80fd58d9f7e25f7.json","parameterValues":[]}