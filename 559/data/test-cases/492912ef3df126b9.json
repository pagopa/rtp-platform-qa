{"uid":"492912ef3df126b9","name":"Unauthorized callback due to wrong certificate serial","fullName":"tests.test_callback#test_fail_send_rtp_callback_wrong_certificate_serial_DS_04b_compliant","historyId":"2cc2abb0fda2edeacf4f957d8bb07347","time":{"start":1759919594574,"stop":1759919595117,"duration":543},"status":"failed","statusMessage":"AssertionError: Expecting error from callback, expected 403 got 500\nassert 500 == 403\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('Unauthorized callback due to wrong certificate serial')\n    @pytest.mark.callback\n    @pytest.mark.unhappy_path\n    def test_fail_send_rtp_callback_wrong_certificate_serial_DS_04b_compliant():\n        callback_data = generate_callback_data_DS_04b_compliant(BIC='MOCKSP01')\n    \n        cert, key = pfx_to_pem(\n            secrets.debtor_service_provider_mock_PFX_base64,\n            secrets.debtor_service_provider_mock_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n    \n        callback_response = srtp_callback(\n            rtp_payload=callback_data, cert_path=cert, key_path=key\n        )\n>       assert (\n            callback_response.status_code == 403\n        ), f\"Expecting error from callback, expected 403 got {callback_response.status_code}\"\nE       AssertionError: Expecting error from callback, expected 403 got 500\nE       assert 500 == 403\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_callback.py:241: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759919573541,"stop":1759919573602,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2509-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":228,"unknown":0,"total":233},"items":[{"uid":"d7f6cb4f91b42939","reportUrl":"https://pagopa.github.io/rtp-platform-qa/558//#testresult/d7f6cb4f91b42939","status":"failed","statusDetails":"AssertionError: Expecting error from callback, expected 403 got 500\nassert 500 == 403\n +  where 500 = <Response [500]>.status_code","time":{"start":1759908052839,"stop":1759908053423,"duration":584}},{"uid":"dc3d99ac7c2dcc7c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/557//#testresult/dc3d99ac7c2dcc7c","status":"passed","time":{"start":1759821687651,"stop":1759821688052,"duration":401}},{"uid":"ed0e25aef1d2f36e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/556//#testresult/ed0e25aef1d2f36e","status":"passed","time":{"start":1759735339003,"stop":1759735339677,"duration":674}},{"uid":"f3dec20071f611f8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/555//#testresult/f3dec20071f611f8","status":"passed","time":{"start":1759648716288,"stop":1759648716734,"duration":446}},{"uid":"7d97fd62013ccf9a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/554//#testresult/7d97fd62013ccf9a","status":"passed","time":{"start":1759562356881,"stop":1759562357557,"duration":676}},{"uid":"bc3a2c4a031eead3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/553//#testresult/bc3a2c4a031eead3","status":"passed","time":{"start":1759483558371,"stop":1759483559059,"duration":688}},{"uid":"15e2a3043114c1f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/552//#testresult/15e2a3043114c1f","status":"passed","time":{"start":1759476036127,"stop":1759476036847,"duration":720}},{"uid":"5fc0758a0727b10","reportUrl":"https://pagopa.github.io/rtp-platform-qa/551//#testresult/5fc0758a0727b10","status":"passed","time":{"start":1759389611524,"stop":1759389611947,"duration":423}},{"uid":"aa6f118405fd3e95","reportUrl":"https://pagopa.github.io/rtp-platform-qa/550//#testresult/aa6f118405fd3e95","status":"passed","time":{"start":1759315765578,"stop":1759315766062,"duration":484}},{"uid":"ed9013c5dc732a68","reportUrl":"https://pagopa.github.io/rtp-platform-qa/549//#testresult/ed9013c5dc732a68","status":"passed","time":{"start":1759303341512,"stop":1759303341939,"duration":427}},{"uid":"b49139b7cadf455f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/548//#testresult/b49139b7cadf455f","status":"passed","time":{"start":1759216949307,"stop":1759216949816,"duration":509}},{"uid":"60532cf88f981f7d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/547//#testresult/60532cf88f981f7d","status":"passed","time":{"start":1759130562729,"stop":1759130563187,"duration":458}},{"uid":"3fa559624c19c37a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/546//#testresult/3fa559624c19c37a","status":"passed","time":{"start":1759043964726,"stop":1759043965365,"duration":639}},{"uid":"f4b21e97099c6db9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/545//#testresult/f4b21e97099c6db9","status":"passed","time":{"start":1758957529924,"stop":1758957530369,"duration":445}},{"uid":"3c39cd96871ff09b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/544//#testresult/3c39cd96871ff09b","status":"passed","time":{"start":1758871287233,"stop":1758871287902,"duration":669}},{"uid":"54f626168aa25a64","reportUrl":"https://pagopa.github.io/rtp-platform-qa/543//#testresult/54f626168aa25a64","status":"passed","time":{"start":1758784901958,"stop":1758784902379,"duration":421}},{"uid":"5090de0ba9168e15","reportUrl":"https://pagopa.github.io/rtp-platform-qa/542//#testresult/5090de0ba9168e15","status":"passed","time":{"start":1758698496904,"stop":1758698501494,"duration":4590}},{"uid":"7f71dba37c97557e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/541//#testresult/7f71dba37c97557e","status":"passed","time":{"start":1758612127572,"stop":1758612128203,"duration":631}},{"uid":"9d399f1d02d54a0d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/540//#testresult/9d399f1d02d54a0d","status":"passed","time":{"start":1758525790921,"stop":1758525791648,"duration":727}},{"uid":"bb5760b3ccd65b2f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/539//#testresult/bb5760b3ccd65b2f","status":"passed","time":{"start":1758439136741,"stop":1758439137363,"duration":622}}]},"tags":["callback","unhappy_path"]},"source":"492912ef3df126b9.json","parameterValues":[]}