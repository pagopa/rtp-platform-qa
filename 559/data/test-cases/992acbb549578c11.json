{"uid":"992acbb549578c11","name":"RTP is successfully retrieved","fullName":"tests.test_get_rtp#test_get_rtp_success","historyId":"caeb9610ab96a7a077f09cf26a913a9a","time":{"start":1759920027845,"stop":1759920029780,"duration":1935},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Get')\n    @allure.story('Service provider retrieves an RTP')\n    @allure.title('RTP is successfully retrieved')\n    @pytest.mark.get\n    @pytest.mark.happy_path\n    def test_get_rtp_success():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        rtp_reader_access_token = get_valid_access_token(\n            client_id=secrets.rtp_reader.client_id,\n            client_secret=secrets.rtp_reader.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        activation_response = activate(\n            debtor_service_provider_access_token,\n            rtp_data['payer']['payerId'],\n            secrets.debtor_service_provider.service_provider_id,\n        )\n    \n        assert activation_response.status_code == 201, 'Error activating debtor'\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_get_rtp.py:52: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759919573541,"stop":1759919573602,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider retrieves an RTP"},{"name":"feature","value":"RTP Get"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2509-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":53,"broken":20,"skipped":0,"passed":92,"unknown":0,"total":165},"items":[{"uid":"4ae4e433042a0268","reportUrl":"https://pagopa.github.io/rtp-platform-qa/558//#testresult/4ae4e433042a0268","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1759908345162,"stop":1759908345677,"duration":515}},{"uid":"200df976e4b678b6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/557//#testresult/200df976e4b678b6","status":"passed","time":{"start":1759822120029,"stop":1759822122323,"duration":2294}},{"uid":"4117a843e0cb60b5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/556//#testresult/4117a843e0cb60b5","status":"passed","time":{"start":1759735699789,"stop":1759735703852,"duration":4063}},{"uid":"62795208e793c36","reportUrl":"https://pagopa.github.io/rtp-platform-qa/555//#testresult/62795208e793c36","status":"passed","time":{"start":1759649961184,"stop":1759649964724,"duration":3540}},{"uid":"5a4ffd50da6e676f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/554//#testresult/5a4ffd50da6e676f","status":"passed","time":{"start":1759563614853,"stop":1759563619173,"duration":4320}},{"uid":"5d628230cbac9bae","reportUrl":"https://pagopa.github.io/rtp-platform-qa/553//#testresult/5d628230cbac9bae","status":"passed","time":{"start":1759484821160,"stop":1759484825608,"duration":4448}},{"uid":"7c3bd1c9a7044088","reportUrl":"https://pagopa.github.io/rtp-platform-qa/552//#testresult/7c3bd1c9a7044088","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1759476820363,"stop":1759476820952,"duration":589}},{"uid":"333bf4f12d4c622f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/551//#testresult/333bf4f12d4c622f","status":"passed","time":{"start":1759390805456,"stop":1759390808275,"duration":2819}},{"uid":"d056923f12ab4d49","reportUrl":"https://pagopa.github.io/rtp-platform-qa/550//#testresult/d056923f12ab4d49","status":"passed","time":{"start":1759316205951,"stop":1759316208637,"duration":2686}},{"uid":"cbc1f304b7a30389","reportUrl":"https://pagopa.github.io/rtp-platform-qa/549//#testresult/cbc1f304b7a30389","status":"passed","time":{"start":1759303776919,"stop":1759303779392,"duration":2473}},{"uid":"aa63bf78e8b56498","reportUrl":"https://pagopa.github.io/rtp-platform-qa/548//#testresult/aa63bf78e8b56498","status":"passed","time":{"start":1759217361058,"stop":1759217364033,"duration":2975}},{"uid":"5e15f523a9148abd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/547//#testresult/5e15f523a9148abd","status":"passed","time":{"start":1759130905914,"stop":1759130908520,"duration":2606}},{"uid":"8bf64fb734433046","reportUrl":"https://pagopa.github.io/rtp-platform-qa/546//#testresult/8bf64fb734433046","status":"passed","time":{"start":1759044353938,"stop":1759044357725,"duration":3787}},{"uid":"68fd85a5ab04a4ad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/545//#testresult/68fd85a5ab04a4ad","status":"passed","time":{"start":1758957723029,"stop":1758957725491,"duration":2462}},{"uid":"6178b700a505daa5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/544//#testresult/6178b700a505daa5","status":"passed","time":{"start":1758872004210,"stop":1758872008144,"duration":3934}},{"uid":"eae7108be28232d3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/543//#testresult/eae7108be28232d3","status":"passed","time":{"start":1758786150046,"stop":1758786152867,"duration":2821}},{"uid":"e04de06c8fce0dc8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/542//#testresult/e04de06c8fce0dc8","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1758699754216,"stop":1758699757496,"duration":3280}},{"uid":"e28a4ee1d8227de3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/541//#testresult/e28a4ee1d8227de3","status":"passed","time":{"start":1758612577178,"stop":1758612580766,"duration":3588}},{"uid":"45f47d589f75c844","reportUrl":"https://pagopa.github.io/rtp-platform-qa/540//#testresult/45f47d589f75c844","status":"passed","time":{"start":1758526241697,"stop":1758526245689,"duration":3992}},{"uid":"a9c05b3bf7dfb18a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/539//#testresult/a9c05b3bf7dfb18a","status":"passed","time":{"start":1758439584568,"stop":1758439588098,"duration":3530}}]},"tags":["get","happy_path"]},"source":"992acbb549578c11.json","parameterValues":[]}