{"uid":"2a496ce4f0f6a3c1","name":"An RTP is sent to ICCREA service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_iccrea","historyId":"43c6e6f1884b3efb611eee04b5b6eb0c","time":{"start":1756537655384,"stop":1756537658366,"duration":2982},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider')\n    @allure.title('An RTP is sent to ICCREA service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.iccrea\n    def test_send_rtp_to_iccrea():\n        rtp_data = generate_rtp_data(payer_id=secrets.iccrea_activated_fiscal_code)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:143: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1756537570746,"stop":1756537570804,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"iccrea"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmccyg1gnepe"},{"name":"thread","value":"2552-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":50,"broken":16,"skipped":0,"passed":19,"unknown":0,"total":85},"items":[{"uid":"5785fb4c0f6bc25b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/510//#testresult/5785fb4c0f6bc25b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756451311507,"stop":1756451314739,"duration":3232}},{"uid":"7c8d44d44b1c5356","reportUrl":"https://pagopa.github.io/rtp-platform-qa/509//#testresult/7c8d44d44b1c5356","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756385976956,"stop":1756385980490,"duration":3534}},{"uid":"c56fb5f63f63bdbb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/508//#testresult/c56fb5f63f63bdbb","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756364945481,"stop":1756364948804,"duration":3323}},{"uid":"4bef4277df8d82a3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/507//#testresult/4bef4277df8d82a3","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756278532208,"stop":1756278535805,"duration":3597}},{"uid":"77aca6df8fe73dca","reportUrl":"https://pagopa.github.io/rtp-platform-qa/506//#testresult/77aca6df8fe73dca","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756192121711,"stop":1756192124158,"duration":2447}},{"uid":"456de907a39b7155","reportUrl":"https://pagopa.github.io/rtp-platform-qa/505//#testresult/456de907a39b7155","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756105767835,"stop":1756105770452,"duration":2617}},{"uid":"543f86789ec7bc27","reportUrl":"https://pagopa.github.io/rtp-platform-qa/504//#testresult/543f86789ec7bc27","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756019255639,"stop":1756019258317,"duration":2678}},{"uid":"b6f37c2dcbfafd0e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/503//#testresult/b6f37c2dcbfafd0e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755932850097,"stop":1755932853490,"duration":3393}},{"uid":"8968bb60f7d304e8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/502//#testresult/8968bb60f7d304e8","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755847723107,"stop":1755847726329,"duration":3222}},{"uid":"a813c02f4362194a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/501//#testresult/a813c02f4362194a","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755846505816,"stop":1755846508966,"duration":3150}},{"uid":"bedf338f3ff64310","reportUrl":"https://pagopa.github.io/rtp-platform-qa/500//#testresult/bedf338f3ff64310","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755843971586,"stop":1755843974301,"duration":2715}},{"uid":"b8a0a6a6909cbc58","reportUrl":"https://pagopa.github.io/rtp-platform-qa/499//#testresult/b8a0a6a6909cbc58","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755760238948,"stop":1755760241654,"duration":2706}},{"uid":"de3e279d5fbc9d2d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/498//#testresult/de3e279d5fbc9d2d","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755673761620,"stop":1755673765335,"duration":3715}},{"uid":"e95b4261c1517dc1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/497//#testresult/e95b4261c1517dc1","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755613357038,"stop":1755613359717,"duration":2679}},{"uid":"deee5c1b0f0d45de","reportUrl":"https://pagopa.github.io/rtp-platform-qa/496//#testresult/deee5c1b0f0d45de","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755588537905,"stop":1755588540469,"duration":2564}},{"uid":"db87502b452c176e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/495//#testresult/db87502b452c176e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755587328219,"stop":1755587330742,"duration":2523}},{"uid":"8c6419277702ace3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/494//#testresult/8c6419277702ace3","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755501075823,"stop":1755501079494,"duration":3671}},{"uid":"3f7856acbd7fb474","reportUrl":"https://pagopa.github.io/rtp-platform-qa/493//#testresult/3f7856acbd7fb474","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755414465314,"stop":1755414468322,"duration":3008}},{"uid":"a19369d2f2adaa2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/492//#testresult/a19369d2f2adaa2","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755328056790,"stop":1755328059578,"duration":2788}},{"uid":"d7faf30499290697","reportUrl":"https://pagopa.github.io/rtp-platform-qa/491//#testresult/d7faf30499290697","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755241742360,"stop":1755241745323,"duration":2963}}]},"tags":["iccrea","real_integration","send","happy_path"]},"source":"2a496ce4f0f6a3c1.json","parameterValues":[]}