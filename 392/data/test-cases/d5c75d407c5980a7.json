{"uid":"d5c75d407c5980a7","name":"An RTP is sent through CBI API","fullName":"tests.test_debtor_service_provider_availability#test_send_rtp_to_cbi","historyId":"f80da3262bf8ce0e665c096b1873cbf4","time":{"start":1750230491351,"stop":1750230492820,"duration":1469},"status":"failed","statusMessage":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI directly')\n    @allure.title('An RTP is sent through CBI API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        rtp_data = generate_rtp_data()\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id, secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(\n            secrets.CBI_client_PFX_base64,\n            secrets.CBI_client_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 201\nE       assert 400 == 201\nE        +  where 400 = <Response [400]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider_availability.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750230458492,"stop":1750230458547,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to CBI directly"},{"name":"tag","value":"cbi"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider_availability"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2513-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":28,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":28},"items":[{"uid":"be1df18b31a15999","reportUrl":"https://pagopa.github.io/rtp-platform-qa/390//#testresult/be1df18b31a15999","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1750170137555,"stop":1750170139032,"duration":1477}},{"uid":"b28ba5220210ce14","reportUrl":"https://pagopa.github.io/rtp-platform-qa/389//#testresult/b28ba5220210ce14","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1750144055998,"stop":1750144057526,"duration":1528}},{"uid":"b97013aa30f76f0e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/388//#testresult/b97013aa30f76f0e","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1750069037593,"stop":1750069038842,"duration":1249}},{"uid":"a4c34c1042614ba3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/387//#testresult/a4c34c1042614ba3","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1750057718472,"stop":1750057719714,"duration":1242}},{"uid":"e8795f191f881002","reportUrl":"https://pagopa.github.io/rtp-platform-qa/386//#testresult/e8795f191f881002","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1749971255836,"stop":1749971256996,"duration":1160}},{"uid":"a292724f71e4f2f7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/385//#testresult/a292724f71e4f2f7","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749884861911,"stop":1749884862955,"duration":1044}},{"uid":"97b374201ee3da7b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/384//#testresult/97b374201ee3da7b","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749810128459,"stop":1749810129560,"duration":1101}},{"uid":"f79854c18310080a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/380//#testresult/f79854c18310080a","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749801538096,"stop":1749801539099,"duration":1003}},{"uid":"f98a4afb96a53713","reportUrl":"https://pagopa.github.io/rtp-platform-qa/376//#testresult/f98a4afb96a53713","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749798441341,"stop":1749798442452,"duration":1111}},{"uid":"d2de462e53fe0466","reportUrl":"https://pagopa.github.io/rtp-platform-qa/375//#testresult/d2de462e53fe0466","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1749712053706,"stop":1749712055460,"duration":1754}},{"uid":"503f240fa507838f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/374//#testresult/503f240fa507838f","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749625644179,"stop":1749625645554,"duration":1375}},{"uid":"91e5422df5f4be35","reportUrl":"https://pagopa.github.io/rtp-platform-qa/373//#testresult/91e5422df5f4be35","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749539234464,"stop":1749539235549,"duration":1085}},{"uid":"7458ec784ce80ac0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/365//#testresult/7458ec784ce80ac0","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749482106733,"stop":1749482107907,"duration":1174}},{"uid":"1b0e646b61636b9f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/363//#testresult/1b0e646b61636b9f","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749452891115,"stop":1749452892114,"duration":999}},{"uid":"a14889d0cc688276","reportUrl":"https://pagopa.github.io/rtp-platform-qa/362//#testresult/a14889d0cc688276","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749366439921,"stop":1749366441792,"duration":1871}},{"uid":"ad4cefaf8a33eb62","reportUrl":"https://pagopa.github.io/rtp-platform-qa/361//#testresult/ad4cefaf8a33eb62","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1749280020598,"stop":1749280021564,"duration":966}},{"uid":"821581cca1ca5876","reportUrl":"https://pagopa.github.io/rtp-platform-qa/360//#testresult/821581cca1ca5876","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749193628287,"stop":1749193629273,"duration":986}},{"uid":"ab72939e5219b8d0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/359//#testresult/ab72939e5219b8d0","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749107258512,"stop":1749107260556,"duration":2044}},{"uid":"e6b0765f7fe12b8e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/358//#testresult/e6b0765f7fe12b8e","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749020838883,"stop":1749020839944,"duration":1061}},{"uid":"fd1a12daf4e4a975","reportUrl":"https://pagopa.github.io/rtp-platform-qa/357//#testresult/fd1a12daf4e4a975","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1748956574248,"stop":1748956575104,"duration":856}}]},"tags":["cbi","send","happy_path"]},"source":"d5c75d407c5980a7.json","parameterValues":[]}