{"uid":"fd2172312e130fc0","name":"inexistent RTP -> empty body","fullName":"tests.test_get_rtp#test_get_rtp_not_found","historyId":"f374baeb8e6aa77fbe08e6036a22e13b","time":{"start":1756798023255,"stop":1756798024030,"duration":775},"status":"failed","statusMessage":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","statusTrace":"@allure.feature('RTP Get')\n    @allure.story('Service provider retrieves an RTP')\n    @allure.title('inexistent RTP -> empty body')\n    @pytest.mark.get\n    @pytest.mark.unhappy_path\n    def test_get_rtp_not_found():\n        fake_rtp_id = str(uuid.uuid4())\n    \n        token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        resp = get_rtp(access_token=token, rtp_id=fake_rtp_id)\n    \n>       assert resp.status_code in (\n            404,\n            204,\n        ), f\"Status code: {resp.status_code}, body: {resp.text}\"\nE       AssertionError: Status code: 403, body: \nE       assert 403 in (404, 204)\nE        +  where 403 = <Response [403]>.status_code\n\nfunctional-tests/tests/test_get_rtp.py:75: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1756797954122,"stop":1756797954178,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Get"},{"name":"story","value":"Service provider retrieves an RTP"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"pkrvmccyg1gnepe"},{"name":"thread","value":"2477-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":40,"broken":16,"skipped":0,"passed":66,"unknown":0,"total":122},"items":[{"uid":"74b25a513b37d2f4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/515//#testresult/74b25a513b37d2f4","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1756796897927,"stop":1756796898714,"duration":787}},{"uid":"a175a744db3d6fd2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/514//#testresult/a175a744db3d6fd2","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1756719632559,"stop":1756719633841,"duration":1282}},{"uid":"23bcd1401bc1f0d1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/513//#testresult/23bcd1401bc1f0d1","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1756710580986,"stop":1756710582161,"duration":1175}},{"uid":"3d9ba9dc6fd0ccc1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/512//#testresult/3d9ba9dc6fd0ccc1","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1756624052823,"stop":1756624053584,"duration":761}},{"uid":"91da6b84fdca5b47","reportUrl":"https://pagopa.github.io/rtp-platform-qa/511//#testresult/91da6b84fdca5b47","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1756537644210,"stop":1756537645022,"duration":812}},{"uid":"57247fff0040d2d2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/510//#testresult/57247fff0040d2d2","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1756451300780,"stop":1756451301669,"duration":889}},{"uid":"baf40efb737f4351","reportUrl":"https://pagopa.github.io/rtp-platform-qa/509//#testresult/baf40efb737f4351","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1756385961712,"stop":1756385963007,"duration":1295}},{"uid":"8354b49f5d059755","reportUrl":"https://pagopa.github.io/rtp-platform-qa/508//#testresult/8354b49f5d059755","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1756364929742,"stop":1756364931006,"duration":1264}},{"uid":"89e80ba78ac3b8a4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/507//#testresult/89e80ba78ac3b8a4","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1756278516244,"stop":1756278517567,"duration":1323}},{"uid":"74cac80af77c1b62","reportUrl":"https://pagopa.github.io/rtp-platform-qa/506//#testresult/74cac80af77c1b62","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1756192109941,"stop":1756192110746,"duration":805}},{"uid":"1a70e8752ec83e6b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/505//#testresult/1a70e8752ec83e6b","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1756105757464,"stop":1756105758256,"duration":792}},{"uid":"d0481783e80c20f8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/504//#testresult/d0481783e80c20f8","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1756019245074,"stop":1756019245830,"duration":756}},{"uid":"ed294c2fb1a90282","reportUrl":"https://pagopa.github.io/rtp-platform-qa/503//#testresult/ed294c2fb1a90282","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755932837638,"stop":1755932838535,"duration":897}},{"uid":"92d1dee35311a28c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/502//#testresult/92d1dee35311a28c","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755847704601,"stop":1755847705779,"duration":1178}},{"uid":"4edb457a24fdd4d5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/501//#testresult/4edb457a24fdd4d5","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755846493690,"stop":1755846494609,"duration":919}},{"uid":"34ee3b5d388ea259","reportUrl":"https://pagopa.github.io/rtp-platform-qa/500//#testresult/34ee3b5d388ea259","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755843958914,"stop":1755843959801,"duration":887}},{"uid":"d37bbda970faf81d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/499//#testresult/d37bbda970faf81d","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755760226893,"stop":1755760227657,"duration":764}},{"uid":"a6a91f1435cd8c43","reportUrl":"https://pagopa.github.io/rtp-platform-qa/498//#testresult/a6a91f1435cd8c43","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755673747155,"stop":1755673748401,"duration":1246}},{"uid":"17389ad17d97089c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/497//#testresult/17389ad17d97089c","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755613346461,"stop":1755613347251,"duration":790}},{"uid":"8b2739bd53bcb393","reportUrl":"https://pagopa.github.io/rtp-platform-qa/496//#testresult/8b2739bd53bcb393","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755588527640,"stop":1755588528415,"duration":775}}]},"tags":["get","unhappy_path"]},"source":"fd2172312e130fc0.json","parameterValues":[]}