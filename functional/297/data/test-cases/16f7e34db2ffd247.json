{"uid":"16f7e34db2ffd247","name":"Cannot send RTP with invalid amount","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi_invalid_amount","historyId":"3a2d68c98ccbf254d83aa6a209f2af2f","time":{"start":1744873645464,"stop":1744873646532,"duration":1068},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with invalid amount')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_invalid_amount():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['amount'] = -1\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:54: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1744873628988,"stop":1744873629049,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1369-50"},{"name":"thread","value":"2325-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":62,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":63},"items":[{"uid":"3579d2bd2ade0982","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/296//#testresult/3579d2bd2ade0982","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744799606737,"stop":1744799607896,"duration":1159}},{"uid":"c5a181cbdd0d55e8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/295//#testresult/c5a181cbdd0d55e8","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744787231707,"stop":1744787233107,"duration":1400}},{"uid":"abf5927503635d5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/294//#testresult/abf5927503635d5","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744727118445,"stop":1744727120592,"duration":2147}},{"uid":"3d7c9d6fe3f53330","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/293//#testresult/3d7c9d6fe3f53330","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744726255139,"stop":1744726256688,"duration":1549}},{"uid":"8a2154246093f5ca","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/292//#testresult/8a2154246093f5ca","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744725398559,"stop":1744725399890,"duration":1331}},{"uid":"4612783c268bc030","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/291//#testresult/4612783c268bc030","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744700827604,"stop":1744700828858,"duration":1254}},{"uid":"9c0a98487ccdd12b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/290//#testresult/9c0a98487ccdd12b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744640112294,"stop":1744640113671,"duration":1377}},{"uid":"1c79cc8f2b1f0738","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/289//#testresult/1c79cc8f2b1f0738","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744614442208,"stop":1744614443434,"duration":1226}},{"uid":"5d96776fe7748696","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/288//#testresult/5d96776fe7748696","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744528020118,"stop":1744528022339,"duration":2221}},{"uid":"707e8eefecf40c22","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/287//#testresult/707e8eefecf40c22","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744441592776,"stop":1744441594024,"duration":1248}},{"uid":"d73dbe63fb3420b7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/285//#testresult/d73dbe63fb3420b7","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744355224435,"stop":1744355226414,"duration":1979}},{"uid":"d1013ae59c40dded","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/284//#testresult/d1013ae59c40dded","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744296846185,"stop":1744296847469,"duration":1284}},{"uid":"49013fb2236d154b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/283//#testresult/49013fb2236d154b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744268809332,"stop":1744268810793,"duration":1461}},{"uid":"621ddd8122e2704b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/282//#testresult/621ddd8122e2704b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744215119976,"stop":1744215121302,"duration":1326}},{"uid":"2bbc530d41e35be6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/275//#testresult/2bbc530d41e35be6","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744182413885,"stop":1744182415074,"duration":1189}},{"uid":"880c1527bcf4cbdc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/273//#testresult/880c1527bcf4cbdc","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744096033811,"stop":1744096035265,"duration":1454}},{"uid":"f2d57055d0705b01","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/272//#testresult/f2d57055d0705b01","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744009628992,"stop":1744009630258,"duration":1266}},{"uid":"f1090e5379095659","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/271//#testresult/f1090e5379095659","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743923190972,"stop":1743923192735,"duration":1763}},{"uid":"3f82ae0b7b9e685a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/270//#testresult/3f82ae0b7b9e685a","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743836808104,"stop":1743836809568,"duration":1464}},{"uid":"fb7c68f35c5b44c4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/269//#testresult/fb7c68f35c5b44c4","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743755303445,"stop":1743755304641,"duration":1196}}]},"tags":["cbi","unhappy_path","send"]},"source":"16f7e34db2ffd247.json","parameterValues":[]}