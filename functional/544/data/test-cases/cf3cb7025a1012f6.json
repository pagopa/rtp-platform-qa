{"uid":"cf3cb7025a1012f6","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1758872018579,"stop":1758872022242,"duration":3663},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758871250632,"stop":1758871250690,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2495-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":125,"broken":29,"skipped":0,"passed":32,"unknown":0,"total":186},"items":[{"uid":"944c55e5d80c23a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/543//#testresult/944c55e5d80c23a","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758786159562,"stop":1758786162636,"duration":3074}},{"uid":"f97d05091d2bfe9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/542//#testresult/f97d05091d2bfe9","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1758699766821,"stop":1758699767939,"duration":1118}},{"uid":"efdd53fc0ec77249","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/541//#testresult/efdd53fc0ec77249","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758612590296,"stop":1758612593947,"duration":3651}},{"uid":"ab1333c4799c303b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/540//#testresult/ab1333c4799c303b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758526255544,"stop":1758526259302,"duration":3758}},{"uid":"92addbc9796f8c5f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/539//#testresult/92addbc9796f8c5f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758439597602,"stop":1758439600907,"duration":3305}},{"uid":"83df0c915af9fa58","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/538//#testresult/83df0c915af9fa58","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758353256922,"stop":1758353260053,"duration":3131}},{"uid":"a802e897dbf08a76","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/537//#testresult/a802e897dbf08a76","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1758271093398,"stop":1758271093947,"duration":549}},{"uid":"8d6e981bef246e9f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/536//#testresult/8d6e981bef246e9f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758267117107,"stop":1758267120036,"duration":2929}},{"uid":"c6c5e0d85e2c2ea7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/535//#testresult/c6c5e0d85e2c2ea7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758180722703,"stop":1758180725924,"duration":3221}},{"uid":"ed785bec2c2655d1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/534//#testresult/ed785bec2c2655d1","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758094300513,"stop":1758094303720,"duration":3207}},{"uid":"a83005ee670ed058","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/533//#testresult/a83005ee670ed058","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758007969965,"stop":1758007973635,"duration":3670}},{"uid":"fb1c503dd5ce246","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/532//#testresult/fb1c503dd5ce246","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757921595579,"stop":1757921598632,"duration":3053}},{"uid":"1980dfc285bc2c95","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/531//#testresult/1980dfc285bc2c95","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757835157070,"stop":1757835160173,"duration":3103}},{"uid":"9dd0a121efef13ee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/530//#testresult/9dd0a121efef13ee","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757748800366,"stop":1757748803530,"duration":3164}},{"uid":"fb496bd7cbcd7566","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/529//#testresult/fb496bd7cbcd7566","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757666509426,"stop":1757666514850,"duration":5424}},{"uid":"ff688638463489e7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/528//#testresult/ff688638463489e7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757661701409,"stop":1757661704542,"duration":3133}},{"uid":"3f1b8b8c6e020c00","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/527//#testresult/3f1b8b8c6e020c00","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757598402871,"stop":1757598406067,"duration":3196}},{"uid":"73b388b2b295f29e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/526//#testresult/73b388b2b295f29e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757575330975,"stop":1757575333902,"duration":2927}},{"uid":"4419d355510622ec","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/525//#testresult/4419d355510622ec","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757489083748,"stop":1757489087201,"duration":3453}},{"uid":"de3100387570a421","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/524//#testresult/de3100387570a421","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757402560005,"stop":1757402562817,"duration":2812}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"cf3cb7025a1012f6.json","parameterValues":[]}