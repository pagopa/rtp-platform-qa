{"uid":"9281251783542107","name":"RTP is successfully retrieved","fullName":"tests.test_get_rtp#test_get_rtp_success","historyId":"caeb9610ab96a7a077f09cf26a913a9a","time":{"start":1759476820363,"stop":1759476820952,"duration":589},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Get')\n    @allure.story('Service provider retrieves an RTP')\n    @allure.title('RTP is successfully retrieved')\n    @pytest.mark.get\n    @pytest.mark.happy_path\n    def test_get_rtp_success():\n        rtp_data = generate_rtp_data()\n    \n>       debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_get_rtp.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759476000591,"stop":1759476000649,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Get"},{"name":"story","value":"Service provider retrieves an RTP"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2538-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":52,"broken":21,"skipped":0,"passed":91,"unknown":0,"total":164},"items":[{"uid":"1df025a384021f02","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/551//#testresult/1df025a384021f02","status":"passed","time":{"start":1759390805456,"stop":1759390808275,"duration":2819}},{"uid":"a2b698d33d09ae6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/550//#testresult/a2b698d33d09ae6","status":"passed","time":{"start":1759316205951,"stop":1759316208637,"duration":2686}},{"uid":"75441fa1323307e6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/549//#testresult/75441fa1323307e6","status":"passed","time":{"start":1759303776919,"stop":1759303779392,"duration":2473}},{"uid":"86b061fbcfe65d66","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/548//#testresult/86b061fbcfe65d66","status":"passed","time":{"start":1759217361058,"stop":1759217364033,"duration":2975}},{"uid":"418e7e3173d01dde","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/547//#testresult/418e7e3173d01dde","status":"passed","time":{"start":1759130905914,"stop":1759130908520,"duration":2606}},{"uid":"eee513a1af72f8bf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/546//#testresult/eee513a1af72f8bf","status":"passed","time":{"start":1759044353938,"stop":1759044357725,"duration":3787}},{"uid":"a800b543155d71d6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/545//#testresult/a800b543155d71d6","status":"passed","time":{"start":1758957723029,"stop":1758957725491,"duration":2462}},{"uid":"5cbf29d57def15a1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/544//#testresult/5cbf29d57def15a1","status":"passed","time":{"start":1758872004210,"stop":1758872008144,"duration":3934}},{"uid":"5f1361752efdd12b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/543//#testresult/5f1361752efdd12b","status":"passed","time":{"start":1758786150046,"stop":1758786152867,"duration":2821}},{"uid":"37526ca5ce7bc806","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/542//#testresult/37526ca5ce7bc806","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1758699754216,"stop":1758699757496,"duration":3280}},{"uid":"713c2cd36f802e00","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/541//#testresult/713c2cd36f802e00","status":"passed","time":{"start":1758612577178,"stop":1758612580766,"duration":3588}},{"uid":"e3949d4bc06524a8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/540//#testresult/e3949d4bc06524a8","status":"passed","time":{"start":1758526241697,"stop":1758526245689,"duration":3992}},{"uid":"7b73e41a502947f3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/539//#testresult/7b73e41a502947f3","status":"passed","time":{"start":1758439584568,"stop":1758439588098,"duration":3530}},{"uid":"fe01a81110acb7ad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/538//#testresult/fe01a81110acb7ad","status":"passed","time":{"start":1758353243272,"stop":1758353246988,"duration":3716}},{"uid":"4668aaebd6a806e3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/537//#testresult/4668aaebd6a806e3","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1758271087774,"stop":1758271088312,"duration":538}},{"uid":"327d942e37899a98","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/536//#testresult/327d942e37899a98","status":"passed","time":{"start":1758267106631,"stop":1758267109602,"duration":2971}},{"uid":"d7da2471fe9c426c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/535//#testresult/d7da2471fe9c426c","status":"passed","time":{"start":1758180709065,"stop":1758180713118,"duration":4053}},{"uid":"b885019f170f18f8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/534//#testresult/b885019f170f18f8","status":"passed","time":{"start":1758094290408,"stop":1758094293530,"duration":3122}},{"uid":"626bbc6bbaa587a9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/533//#testresult/626bbc6bbaa587a9","status":"passed","time":{"start":1758007958923,"stop":1758007962185,"duration":3262}},{"uid":"3ad66b26f05c92b9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/532//#testresult/3ad66b26f05c92b9","status":"passed","time":{"start":1757921585847,"stop":1757921588806,"duration":2959}}]},"tags":["get","happy_path"]},"source":"9281251783542107.json","parameterValues":[]}