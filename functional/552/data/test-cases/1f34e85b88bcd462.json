{"uid":"1f34e85b88bcd462","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1759476836156,"stop":1759476836752,"duration":596},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n>       creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_send_rtp.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759476000591,"stop":1759476000649,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2538-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":132,"broken":30,"skipped":0,"passed":32,"unknown":0,"total":194},"items":[{"uid":"cf710b6a637a0265","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/551//#testresult/cf710b6a637a0265","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759390825207,"stop":1759390828593,"duration":3386}},{"uid":"b435c20412e025f1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/550//#testresult/b435c20412e025f1","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759316225993,"stop":1759316229108,"duration":3115}},{"uid":"fd273dfa2c3af665","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/549//#testresult/fd273dfa2c3af665","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759303785636,"stop":1759303788974,"duration":3338}},{"uid":"6597c2d14e078665","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/548//#testresult/6597c2d14e078665","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759217371486,"stop":1759217374653,"duration":3167}},{"uid":"29a9df9246fe61da","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/547//#testresult/29a9df9246fe61da","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759130914875,"stop":1759130917905,"duration":3030}},{"uid":"912f896681cc0439","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/546//#testresult/912f896681cc0439","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759044366978,"stop":1759044370437,"duration":3459}},{"uid":"c25774a215cba7aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/545//#testresult/c25774a215cba7aa","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758957732098,"stop":1758957735557,"duration":3459}},{"uid":"cf3cb7025a1012f6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/544//#testresult/cf3cb7025a1012f6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758872018579,"stop":1758872022242,"duration":3663}},{"uid":"944c55e5d80c23a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/543//#testresult/944c55e5d80c23a","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758786159562,"stop":1758786162636,"duration":3074}},{"uid":"f97d05091d2bfe9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/542//#testresult/f97d05091d2bfe9","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1758699766821,"stop":1758699767939,"duration":1118}},{"uid":"efdd53fc0ec77249","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/541//#testresult/efdd53fc0ec77249","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758612590296,"stop":1758612593947,"duration":3651}},{"uid":"ab1333c4799c303b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/540//#testresult/ab1333c4799c303b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758526255544,"stop":1758526259302,"duration":3758}},{"uid":"92addbc9796f8c5f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/539//#testresult/92addbc9796f8c5f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758439597602,"stop":1758439600907,"duration":3305}},{"uid":"83df0c915af9fa58","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/538//#testresult/83df0c915af9fa58","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758353256922,"stop":1758353260053,"duration":3131}},{"uid":"a802e897dbf08a76","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/537//#testresult/a802e897dbf08a76","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1758271093398,"stop":1758271093947,"duration":549}},{"uid":"8d6e981bef246e9f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/536//#testresult/8d6e981bef246e9f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758267117107,"stop":1758267120036,"duration":2929}},{"uid":"c6c5e0d85e2c2ea7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/535//#testresult/c6c5e0d85e2c2ea7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758180722703,"stop":1758180725924,"duration":3221}},{"uid":"ed785bec2c2655d1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/534//#testresult/ed785bec2c2655d1","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758094300513,"stop":1758094303720,"duration":3207}},{"uid":"a83005ee670ed058","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/533//#testresult/a83005ee670ed058","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758007969965,"stop":1758007973635,"duration":3670}},{"uid":"fb1c503dd5ce246","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/532//#testresult/fb1c503dd5ce246","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757921595579,"stop":1757921598632,"duration":3053}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"1f34e85b88bcd462.json","parameterValues":[]}