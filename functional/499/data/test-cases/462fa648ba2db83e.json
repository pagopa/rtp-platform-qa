{"uid":"462fa648ba2db83e","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1755760233455,"stop":1755760237610,"duration":4155},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755760147712,"stop":1755760147769,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2516-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":82,"broken":27,"skipped":0,"passed":32,"unknown":0,"total":141},"items":[{"uid":"a2242fc6b267fc95","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/498//#testresult/a2242fc6b267fc95","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755673756823,"stop":1755673760097,"duration":3274}},{"uid":"2281c4d3670b4ba7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/497//#testresult/2281c4d3670b4ba7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755613353321,"stop":1755613356048,"duration":2727}},{"uid":"439693fea08baee8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/496//#testresult/439693fea08baee8","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755588533579,"stop":1755588536879,"duration":3300}},{"uid":"2364a5b1bbe9b10","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/495//#testresult/2364a5b1bbe9b10","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755587323851,"stop":1755587327061,"duration":3210}},{"uid":"314cf2b2508ca967","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/494//#testresult/314cf2b2508ca967","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755501070318,"stop":1755501074272,"duration":3954}},{"uid":"bf19614f616c5403","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/493//#testresult/bf19614f616c5403","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755414460974,"stop":1755414464285,"duration":3311}},{"uid":"d955bdafd4ff16bc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/492//#testresult/d955bdafd4ff16bc","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755328052662,"stop":1755328055790,"duration":3128}},{"uid":"42a1437d30d00598","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/491//#testresult/42a1437d30d00598","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755241737960,"stop":1755241741330,"duration":3370}},{"uid":"6c13b37f91cbbb67","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/490//#testresult/6c13b37f91cbbb67","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755166851314,"stop":1755166854874,"duration":3560}},{"uid":"4313a2546011a027","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/489//#testresult/4313a2546011a027","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755158355000,"stop":1755158358016,"duration":3016}},{"uid":"5364e9a1b8427890","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/488//#testresult/5364e9a1b8427890","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755155400596,"stop":1755155404462,"duration":3866}},{"uid":"f0c449e05205366b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/487//#testresult/f0c449e05205366b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755068971756,"stop":1755068974865,"duration":3109}},{"uid":"2df52d1413549a26","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/486//#testresult/2df52d1413549a26","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754982585201,"stop":1754982588732,"duration":3531}},{"uid":"2341e661093f81b8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/485//#testresult/2341e661093f81b8","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1754907896290,"stop":1754907897349,"duration":1059}},{"uid":"8ffbe46841ba500","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/483//#testresult/8ffbe46841ba500","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754896343518,"stop":1754896347116,"duration":3598}},{"uid":"c7cff80d2dd2a37b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/482//#testresult/c7cff80d2dd2a37b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754809671326,"stop":1754809674353,"duration":3027}},{"uid":"6b7424670f079f9c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/481//#testresult/6b7424670f079f9c","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754723280768,"stop":1754723283835,"duration":3067}},{"uid":"ab6a43634c93115f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/480//#testresult/ab6a43634c93115f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754637189171,"stop":1754637193065,"duration":3894}},{"uid":"64b27839ec7b9862","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/479//#testresult/64b27839ec7b9862","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754550760104,"stop":1754550763328,"duration":3224}},{"uid":"35cb3839893e0550","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/478//#testresult/35cb3839893e0550","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754464850362,"stop":1754464853861,"duration":3499}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"462fa648ba2db83e.json","parameterValues":[]}