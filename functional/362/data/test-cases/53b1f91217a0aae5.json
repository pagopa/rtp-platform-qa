{"uid":"53b1f91217a0aae5","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1749366588871,"stop":1749366592754,"duration":3883},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        rtp_data = generate_rtp_data(payer_id=fiscal_code)\n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        send_response = send_rtp(access_token=creditor_service_provider_access_token, rtp_payload=rtp_data)\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:61: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749366383573,"stop":1749366383629,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2564-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":13},"items":[{"uid":"e939779fff95774a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/361//#testresult/e939779fff95774a","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749280162175,"stop":1749280166017,"duration":3842}},{"uid":"90bb5c7f44c38a60","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/90bb5c7f44c38a60","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749193771642,"stop":1749193775023,"duration":3381}},{"uid":"f6892c61a5f4d78f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/359//#testresult/f6892c61a5f4d78f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749107405855,"stop":1749107410212,"duration":4357}},{"uid":"f80a2529faa89521","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/358//#testresult/f80a2529faa89521","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749020982836,"stop":1749020986164,"duration":3328}},{"uid":"d1166869fa69688","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/357//#testresult/d1166869fa69688","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1748956715681,"stop":1748956718606,"duration":2925}},{"uid":"5e05a1ae268c4bc2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/356//#testresult/5e05a1ae268c4bc2","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1748953282207,"stop":1748953285330,"duration":3123}},{"uid":"51be84687cddea62","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/355//#testresult/51be84687cddea62","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1748934623433,"stop":1748934627179,"duration":3746}},{"uid":"46e84a5996ea193e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/354//#testresult/46e84a5996ea193e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1748848223567,"stop":1748848227248,"duration":3681}},{"uid":"b1f2493ee56877a3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/353//#testresult/b1f2493ee56877a3","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1748761787142,"stop":1748761791342,"duration":4200}},{"uid":"5f2b4e826881b010","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/352//#testresult/5f2b4e826881b010","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1748675369475,"stop":1748675372626,"duration":3151}},{"uid":"a7d220ce05aab956","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/351//#testresult/a7d220ce05aab956","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1748588992668,"stop":1748588996041,"duration":3373}},{"uid":"3612cda191a283ed","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/350//#testresult/3612cda191a283ed","status":"broken","statusDetails":"dynaconf.vendor.box.exceptions.BoxKeyError: \"'DynaBox' object has no attribute 'cbi_activated_fiscal_code'\"","time":{"start":1748534183153,"stop":1748534183153,"duration":0}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"53b1f91217a0aae5.json","parameterValues":[]}