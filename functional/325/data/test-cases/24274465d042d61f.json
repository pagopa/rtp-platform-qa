{"uid":"24274465d042d61f","name":"Cannot send RTP with expired date","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi_expired_date","historyId":"af763254cdd5d120d914e8ce75139912","time":{"start":1747120062095,"stop":1747120063227,"duration":1132},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with expired date')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_expired_date():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['expiryDate'] = '2020-01-01'\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:76: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1747120040270,"stop":1747120040325,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1934-885"},{"name":"thread","value":"2377-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":90,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":91},"items":[{"uid":"fa82047c85835a9f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/324//#testresult/fa82047c85835a9f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1747033660204,"stop":1747033661220,"duration":1016}},{"uid":"7f0c3b5b83e888c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/323//#testresult/7f0c3b5b83e888c","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746947223819,"stop":1746947225020,"duration":1201}},{"uid":"ed3df27af24eef9b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/322//#testresult/ed3df27af24eef9b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746860813739,"stop":1746860815127,"duration":1388}},{"uid":"5357a59762a95119","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/321//#testresult/5357a59762a95119","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746774444208,"stop":1746774445707,"duration":1499}},{"uid":"9b8d817516e9cb2b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/320//#testresult/9b8d817516e9cb2b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746688024736,"stop":1746688025510,"duration":774}},{"uid":"17bfc1f6b9643a8d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/319//#testresult/17bfc1f6b9643a8d","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746601643243,"stop":1746601644149,"duration":906}},{"uid":"4cf848da77ce8b1c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/318//#testresult/4cf848da77ce8b1c","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746515238736,"stop":1746515240552,"duration":1816}},{"uid":"f4c461a1e64f57b2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/317//#testresult/f4c461a1e64f57b2","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746428869834,"stop":1746428870774,"duration":940}},{"uid":"ef6ae3d1c142c4d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/316//#testresult/ef6ae3d1c142c4d","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746342425390,"stop":1746342427092,"duration":1702}},{"uid":"1b41c1e45a245ee4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/315//#testresult/1b41c1e45a245ee4","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746256002316,"stop":1746256003801,"duration":1485}},{"uid":"f74368365fe5507","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/314//#testresult/f74368365fe5507","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746169634341,"stop":1746169635818,"duration":1477}},{"uid":"40e84626ffd44068","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/313//#testresult/40e84626ffd44068","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746083258054,"stop":1746083259264,"duration":1210}},{"uid":"fb3068372b031a44","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/312//#testresult/fb3068372b031a44","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745996838504,"stop":1745996839517,"duration":1013}},{"uid":"3d8bfe619ea878e2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/311//#testresult/3d8bfe619ea878e2","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745910442974,"stop":1745910444417,"duration":1443}},{"uid":"9dc41560176d6d95","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/310//#testresult/9dc41560176d6d95","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745824818839,"stop":1745824820091,"duration":1252}},{"uid":"8ae195783a01fba1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/309//#testresult/8ae195783a01fba1","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745737597928,"stop":1745737599271,"duration":1343}},{"uid":"d2da24f1549e30bf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/308//#testresult/d2da24f1549e30bf","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745651199102,"stop":1745651200470,"duration":1368}},{"uid":"dac6f5233a8c9a05","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/307//#testresult/dac6f5233a8c9a05","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745564827306,"stop":1745564828645,"duration":1339}},{"uid":"cc36f1aacb012aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/306//#testresult/cc36f1aacb012aa","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745491304413,"stop":1745491305822,"duration":1409}},{"uid":"fb95d08e7401bcb3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/305//#testresult/fb95d08e7401bcb3","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745478447012,"stop":1745478448480,"duration":1468}}]},"tags":["cbi","unhappy_path","send"]},"source":"24274465d042d61f.json","parameterValues":[]}