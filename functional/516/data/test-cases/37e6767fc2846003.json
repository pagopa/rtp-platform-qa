{"uid":"37e6767fc2846003","name":"A debtor is activated and retrieved by activation id","fullName":"tests.test_activation#test_get_activation_by_id","historyId":"5802a301b59e0c151ffcd2948b2fd364","time":{"start":1756797957424,"stop":1756797958514,"duration":1090},"status":"failed","statusMessage":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('Activation')\n    @allure.story('Get Debtor activation by ID')\n    @allure.title('A debtor is activated and retrieved by activation id')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.happy_path\n    def test_get_activation_by_id():\n        access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n        debtor_fc = fake_fc()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, 'Error activating debtor'\n    \n        location = res.headers['Location']\n        activation_id = location.split('/')[-1]\n        assert bool(uuidv4_pattern.fullmatch(activation_id))\n    \n        res = get_activation_by_id(access_token, activation_id)\n>       assert res.status_code == 200, f'Expected 200 but got {res.status_code}'\nE       AssertionError: Expected 200 but got 500\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_activation.py:91: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1756797954122,"stop":1756797954178,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Get Debtor activation by ID"},{"name":"feature","value":"Activation"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"pkrvmccyg1gnepe"},{"name":"thread","value":"2477-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":39,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":79},"items":[{"uid":"a2a392b9ab652f7a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/515//#testresult/a2a392b9ab652f7a","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756796824135,"stop":1756796825374,"duration":1239}},{"uid":"853f1de1b2505095","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/514//#testresult/853f1de1b2505095","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756719539087,"stop":1756719541093,"duration":2006}},{"uid":"61a1f656894d5043","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/513//#testresult/61a1f656894d5043","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756710489028,"stop":1756710491089,"duration":2061}},{"uid":"85fe0bda1411cbb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/512//#testresult/85fe0bda1411cbb","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756623977729,"stop":1756623979276,"duration":1547}},{"uid":"74f85f7dd4640257","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/511//#testresult/74f85f7dd4640257","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756537574848,"stop":1756537576197,"duration":1349}},{"uid":"5fee4047c478cf57","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/510//#testresult/5fee4047c478cf57","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756451215381,"stop":1756451216694,"duration":1313}},{"uid":"eef96c22944b95fa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/509//#testresult/eef96c22944b95fa","status":"passed","time":{"start":1756385859374,"stop":1756385861483,"duration":2109}},{"uid":"a33b2dc946e5a79","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/508//#testresult/a33b2dc946e5a79","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756364824060,"stop":1756364826315,"duration":2255}},{"uid":"ad32cfa7c947cedb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/507//#testresult/ad32cfa7c947cedb","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756278415120,"stop":1756278417453,"duration":2333}},{"uid":"5f1b47f26f953803","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/506//#testresult/5f1b47f26f953803","status":"passed","time":{"start":1756192037266,"stop":1756192038805,"duration":1539}},{"uid":"7a65519e196dccf7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/505//#testresult/7a65519e196dccf7","status":"passed","time":{"start":1756105669884,"stop":1756105671057,"duration":1173}},{"uid":"1fd508e578fa75d6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/504//#testresult/1fd508e578fa75d6","status":"passed","time":{"start":1756019174368,"stop":1756019175563,"duration":1195}},{"uid":"30a8059a68e372bf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/503//#testresult/30a8059a68e372bf","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755932760928,"stop":1755932762520,"duration":1592}},{"uid":"4c135881f3a502e0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/502//#testresult/4c135881f3a502e0","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755847618425,"stop":1755847620297,"duration":1872}},{"uid":"2c4435b304bbbc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/501//#testresult/2c4435b304bbbc","status":"passed","time":{"start":1755846423082,"stop":1755846424497,"duration":1415}},{"uid":"6be96995e91c6ce8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/500//#testresult/6be96995e91c6ce8","status":"passed","time":{"start":1755843875613,"stop":1755843877057,"duration":1444}},{"uid":"3a8c840cc367478a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/499//#testresult/3a8c840cc367478a","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755760151532,"stop":1755760152736,"duration":1204}},{"uid":"fc432375c639bf44","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/498//#testresult/fc432375c639bf44","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755673645855,"stop":1755673648314,"duration":2459}},{"uid":"857bf709900907f5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/497//#testresult/857bf709900907f5","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755613276670,"stop":1755613277931,"duration":1261}},{"uid":"d5f24059c9fae83e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/496//#testresult/d5f24059c9fae83e","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755588463449,"stop":1755588464845,"duration":1396}}]},"tags":["auth","activation","happy_path"]},"source":"37e6767fc2846003.json","parameterValues":[]}