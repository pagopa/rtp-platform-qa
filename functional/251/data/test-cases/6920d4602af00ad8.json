{"uid":"6920d4602af00ad8","name":"An RTP is sent through CBI API","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi","historyId":"b7843ec0a9572280c9663808e1141c5c","time":{"start":1742576847793,"stop":1742576849242,"duration":1449},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('An RTP is sent through CBI API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        rtp_data = generate_rtp_data()\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1742576810175,"stop":1742576810235,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1712-60"},{"name":"thread","value":"2329-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":25,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":25},"items":[{"uid":"4f3e0f8652f4f73d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/250//#testresult/4f3e0f8652f4f73d","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742540796541,"stop":1742540798122,"duration":1581}},{"uid":"e34260b6d22f1913","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/249//#testresult/e34260b6d22f1913","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742454393923,"stop":1742454395340,"duration":1417}},{"uid":"3dba183dfa37c977","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/248//#testresult/3dba183dfa37c977","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742368011458,"stop":1742368013578,"duration":2120}},{"uid":"233e87e20350f7d0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/247//#testresult/233e87e20350f7d0","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742290394720,"stop":1742290396419,"duration":1699}},{"uid":"f9c1002320c3ae9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/246//#testresult/f9c1002320c3ae9","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742281610883,"stop":1742281613347,"duration":2464}},{"uid":"ff998103ff3b6b44","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/245//#testresult/ff998103ff3b6b44","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742200608583,"stop":1742200610107,"duration":1524}},{"uid":"2f6df21d60b390e6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/244//#testresult/2f6df21d60b390e6","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742195217874,"stop":1742195220560,"duration":2686}},{"uid":"27e6d8b4a80cd3cd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/243//#testresult/27e6d8b4a80cd3cd","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742108779906,"stop":1742108781285,"duration":1379}},{"uid":"50a91e7a16d9ee45","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/242//#testresult/50a91e7a16d9ee45","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742022371140,"stop":1742022372575,"duration":1435}},{"uid":"46127170987a10bf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/241//#testresult/46127170987a10bf","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741935996743,"stop":1741935998216,"duration":1473}},{"uid":"723bdd03f51b312f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/240//#testresult/723bdd03f51b312f","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741849602562,"stop":1741849604541,"duration":1979}},{"uid":"892afa70b0b71f0d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/239//#testresult/892afa70b0b71f0d","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741763213592,"stop":1741763215205,"duration":1613}},{"uid":"8901b0816286cae2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/238//#testresult/8901b0816286cae2","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741705695287,"stop":1741705696852,"duration":1565}},{"uid":"48099f1125e14c4e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/237//#testresult/48099f1125e14c4e","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741676809032,"stop":1741676811470,"duration":2438}},{"uid":"8a7d58a84961e9df","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/236//#testresult/8a7d58a84961e9df","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741631448294,"stop":1741631449517,"duration":1223}},{"uid":"9025251075af39df","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/235//#testresult/9025251075af39df","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741628100313,"stop":1741628102420,"duration":2107}},{"uid":"2107789a13f673af","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/234//#testresult/2107789a13f673af","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741624722709,"stop":1741624724278,"duration":1569}},{"uid":"aafa24bd2527c1e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/233//#testresult/aafa24bd2527c1e","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741603691086,"stop":1741603692690,"duration":1604}},{"uid":"ca7f555cb02a2e7b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/232//#testresult/ca7f555cb02a2e7b","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741590413085,"stop":1741590414930,"duration":1845}},{"uid":"5b0ba2bdbede4995","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/231//#testresult/5b0ba2bdbede4995","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741503950618,"stop":1741503953474,"duration":2856}}]},"tags":["cbi","send","happy_path"]},"source":"6920d4602af00ad8.json","parameterValues":[]}