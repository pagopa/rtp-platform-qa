{"uid":"d1ad20997c5a8afc","name":"An RTP is sent through API","fullName":"tests.test_send_rtp#test_send_rtp_api","historyId":"6c14d2fbb180e49a106680915fe95577","time":{"start":1741705699721,"stop":1741705762774,"duration":63053},"status":"failed","statusMessage":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('An RTP is sent through API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    def test_send_rtp_api():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        activation_response = activate(debtor_service_provider_access_token, rtp_data['payer']['payerId'],\n                                       secrets.debtor_service_provider.service_provider_id)\n        assert activation_response.status_code == 201, 'Error activating debtor'\n    \n        send_response = send_rtp(access_token=creditor_service_provider_access_token, rtp_payload=rtp_data)\n>       assert send_response.status_code == 201\nE       assert 504 == 201\nE        +  where 504 = <Response [504]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:37: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1741705685259,"stop":1741705685324,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"fv-az1068-926"},{"name":"thread","value":"2284-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":23,"broken":0,"skipped":0,"passed":49,"unknown":0,"total":72},"items":[{"uid":"96e320c04f018bb8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/237//#testresult/96e320c04f018bb8","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741676815611,"stop":1741676881348,"duration":65737}},{"uid":"e9a1ee1b71ec2f1e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/236//#testresult/e9a1ee1b71ec2f1e","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741631452329,"stop":1741631515392,"duration":63063}},{"uid":"339645a811253b71","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/235//#testresult/339645a811253b71","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741628106505,"stop":1741628171570,"duration":65065}},{"uid":"bad3d9dedbd02722","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/234//#testresult/bad3d9dedbd02722","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741624727789,"stop":1741624791113,"duration":63324}},{"uid":"ae4e404379175fea","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/233//#testresult/ae4e404379175fea","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741603696204,"stop":1741603759474,"duration":63270}},{"uid":"eef68d86217c0277","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/232//#testresult/eef68d86217c0277","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741590418231,"stop":1741590423309,"duration":5078}},{"uid":"86adaa2a7cf33037","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/231//#testresult/86adaa2a7cf33037","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741503958081,"stop":1741503963563,"duration":5482}},{"uid":"7a6caf09e81a5372","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/230//#testresult/7a6caf09e81a5372","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741417536444,"stop":1741417539991,"duration":3547}},{"uid":"2f8c13289a6f9664","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/229//#testresult/2f8c13289a6f9664","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741368333998,"stop":1741368337155,"duration":3157}},{"uid":"3e85ccacadb2a3f6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/228//#testresult/3e85ccacadb2a3f6","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741365933629,"stop":1741365942760,"duration":9131}},{"uid":"f0ca780dc8327b2e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/227//#testresult/f0ca780dc8327b2e","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741364150277,"stop":1741364154273,"duration":3996}},{"uid":"512169bc42c24345","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/225//#testresult/512169bc42c24345","status":"passed","time":{"start":1741331208156,"stop":1741331217671,"duration":9515}},{"uid":"80e0092a519cd8c8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/224//#testresult/80e0092a519cd8c8","status":"passed","time":{"start":1741244802149,"stop":1741244807749,"duration":5600}},{"uid":"fd6bc115ccbe68e8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/223//#testresult/fd6bc115ccbe68e8","status":"passed","time":{"start":1741158389116,"stop":1741158394021,"duration":4905}},{"uid":"4ab49aa839efdf05","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/222//#testresult/4ab49aa839efdf05","status":"passed","time":{"start":1741072005839,"stop":1741072010021,"duration":4182}},{"uid":"7396ca6d0b9453cb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/221//#testresult/7396ca6d0b9453cb","status":"passed","time":{"start":1740985611038,"stop":1740985616158,"duration":5120}},{"uid":"cfb327582d9b7a1a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/220//#testresult/cfb327582d9b7a1a","status":"passed","time":{"start":1740899145677,"stop":1740899149313,"duration":3636}},{"uid":"77da5a1526f1d99b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/219//#testresult/77da5a1526f1d99b","status":"passed","time":{"start":1740812743047,"stop":1740812750901,"duration":7854}},{"uid":"ecf3646fef1eac0c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/218//#testresult/ecf3646fef1eac0c","status":"passed","time":{"start":1740726402765,"stop":1740726407646,"duration":4881}},{"uid":"1ae4992e8f02fbd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/217//#testresult/1ae4992e8f02fbd","status":"passed","time":{"start":1740639990724,"stop":1740639994525,"duration":3801}}]},"tags":["send","happy_path"]},"source":"d1ad20997c5a8afc.json","parameterValues":[]}