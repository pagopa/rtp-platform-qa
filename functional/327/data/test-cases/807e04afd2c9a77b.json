{"uid":"807e04afd2c9a77b","name":"A debtor cannot be activated more than once","fullName":"tests.test_activation#test_fail_activate_debtor_two_times","historyId":"8704b37d564cbbe926da79ebe6202dbe","time":{"start":1747292832085,"stop":1747292833384,"duration":1299},"status":"failed","statusMessage":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","statusTrace":"@allure.feature('Activation')\n    @allure.story('Debtor activation')\n    @allure.title('A debtor cannot be activated more than once')\n    @pytest.mark.activation\n    @pytest.mark.unhappy_path\n    def test_fail_activate_debtor_two_times():\n        access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                              client_secret=secrets.debtor_service_provider.client_secret,\n                                              access_token_function=get_access_token)\n        debtor_fc = fake_fc()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, f'Error activating debtor, expected 201 but got {res.status_code}'\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 409, f'Error activating debtor, expected 409 but got {res.status_code}'\n>       assert res.json()['errors'][0]['code'] == '01031000F'\nE       AssertionError: assert '01031000E' == '01031000F'\nE         \nE         - 01031000F\nE         ?         ^\nE         + 01031000E\nE         ?         ^\n\nfunctional-tests/tests/test_activation.py:115: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1747292821151,"stop":1747292821212,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Activation"},{"name":"story","value":"Debtor activation"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"activation"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"pkrvmberfyhpb9w"},{"name":"thread","value":"2423-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":22,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":22},"items":[{"uid":"d0d3e942184fe4e4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/326//#testresult/d0d3e942184fe4e4","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747206433531,"stop":1747206435574,"duration":2043}},{"uid":"5ac593a3d760d753","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/325//#testresult/5ac593a3d760d753","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747120051382,"stop":1747120052669,"duration":1287}},{"uid":"ca010e74b9f869f7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/324//#testresult/ca010e74b9f869f7","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747033648855,"stop":1747033650204,"duration":1349}},{"uid":"943bb845b8d3e07e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/323//#testresult/943bb845b8d3e07e","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746947212966,"stop":1746947214258,"duration":1292}},{"uid":"a8fd1c1a31dab1fc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/322//#testresult/a8fd1c1a31dab1fc","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746860798654,"stop":1746860800324,"duration":1670}},{"uid":"6b35d71ae8089d78","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/321//#testresult/6b35d71ae8089d78","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746774422901,"stop":1746774424932,"duration":2031}},{"uid":"3d43ccbd559feaf0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/320//#testresult/3d43ccbd559feaf0","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746688013450,"stop":1746688014698,"duration":1248}},{"uid":"e59fd80426ad1dbd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/319//#testresult/e59fd80426ad1dbd","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746601627578,"stop":1746601628680,"duration":1102}},{"uid":"ff4cfa1821fc510c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/318//#testresult/ff4cfa1821fc510c","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746515221538,"stop":1746515223756,"duration":2218}},{"uid":"376d1d34feacdd09","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/317//#testresult/376d1d34feacdd09","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746428857989,"stop":1746428859686,"duration":1697}},{"uid":"b20d1364f667d3b3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/316//#testresult/b20d1364f667d3b3","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746342408627,"stop":1746342410807,"duration":2180}},{"uid":"68323baaecae2a4f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/315//#testresult/68323baaecae2a4f","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746255985234,"stop":1746255987263,"duration":2029}},{"uid":"a348d32ab83dfd1b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/314//#testresult/a348d32ab83dfd1b","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746169617136,"stop":1746169619348,"duration":2212}},{"uid":"3aa478a67cd4e2ef","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/313//#testresult/3aa478a67cd4e2ef","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746083241708,"stop":1746083242895,"duration":1187}},{"uid":"f543fd2f63cca2e5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/312//#testresult/f543fd2f63cca2e5","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1745996827213,"stop":1745996828499,"duration":1286}},{"uid":"b85a504d9c672a1f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/311//#testresult/b85a504d9c672a1f","status":"failed","statusDetails":"AssertionError: assert '01000000F' == '01031000F'\n  \n  - 01031000F\n  + 01000000F","time":{"start":1745910432189,"stop":1745910433256,"duration":1067}},{"uid":"e308e3a3cac33d13","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/310//#testresult/e308e3a3cac33d13","status":"failed","statusDetails":"AssertionError: assert '01000000F' == '01031000F'\n  \n  - 01031000F\n  + 01000000F","time":{"start":1745824805980,"stop":1745824807172,"duration":1192}},{"uid":"2957a411beae6bf1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/309//#testresult/2957a411beae6bf1","status":"failed","statusDetails":"AssertionError: assert '01000000F' == '01031000F'\n  \n  - 01031000F\n  + 01000000F","time":{"start":1745737586431,"stop":1745737587639,"duration":1208}},{"uid":"f65a6af116947b6f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/308//#testresult/f65a6af116947b6f","status":"failed","statusDetails":"AssertionError: assert '01000000F' == '01031000F'\n  \n  - 01031000F\n  + 01000000F","time":{"start":1745651188118,"stop":1745651189340,"duration":1222}},{"uid":"d076cda4fa74dcca","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/307//#testresult/d076cda4fa74dcca","status":"failed","statusDetails":"AssertionError: assert '01000000F' == '01031000F'\n  \n  - 01031000F\n  + 01000000F","time":{"start":1745564814425,"stop":1745564815830,"duration":1405}}]},"tags":["activation","unhappy_path"]},"source":"807e04afd2c9a77b.json","parameterValues":[]}