{"uid":"7b07a93eecd49b45","name":"RTP is successfully retrieved","fullName":"tests.test_get_rtp#test_get_rtp_success","historyId":"caeb9610ab96a7a077f09cf26a913a9a","time":{"start":1750777965719,"stop":1750777966190,"duration":471},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature(\"RTP Get\")\n    @allure.story(\"Service provider retrieves an RTP\")\n    @allure.title(\"RTP is successfully retrieved\")\n    @pytest.mark.get\n    @pytest.mark.happy_path\n    def test_get_rtp_success():\n        rtp_data = generate_rtp_data()\n    \n>       debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_get_rtp.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750777957420,"stop":1750777957482,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Get"},{"name":"story","value":"Service provider retrieves an RTP"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":21,"unknown":0,"total":22},"items":[{"uid":"53dc269dbe7805b0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/404//#testresult/53dc269dbe7805b0","status":"passed","time":{"start":1750756860304,"stop":1750756863169,"duration":2865}},{"uid":"d3f171353c261bac","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/403//#testresult/d3f171353c261bac","status":"passed","time":{"start":1750749009743,"stop":1750749012191,"duration":2448}},{"uid":"ede553c9f9f9b5fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/402//#testresult/ede553c9f9f9b5fe","status":"passed","time":{"start":1750685007682,"stop":1750685010205,"duration":2523}},{"uid":"69a7c8cbb52e6062","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/401//#testresult/69a7c8cbb52e6062","status":"passed","time":{"start":1750662646389,"stop":1750662650191,"duration":3802}},{"uid":"1385580a8191b760","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/400//#testresult/1385580a8191b760","status":"passed","time":{"start":1750576220916,"stop":1750576223788,"duration":2872}},{"uid":"8c788b55b8423509","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/399//#testresult/8c788b55b8423509","status":"passed","time":{"start":1750489787222,"stop":1750489790919,"duration":3697}},{"uid":"4d526bda5bc4e61e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/398//#testresult/4d526bda5bc4e61e","status":"passed","time":{"start":1750403382051,"stop":1750403385318,"duration":3267}},{"uid":"4dcd4aab6d5c138e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/397//#testresult/4dcd4aab6d5c138e","status":"passed","time":{"start":1750335154103,"stop":1750335157616,"duration":3513}},{"uid":"faff25323b10b03b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/396//#testresult/faff25323b10b03b","status":"passed","time":{"start":1750329794645,"stop":1750329798577,"duration":3932}},{"uid":"59a14752047aca4e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/395//#testresult/59a14752047aca4e","status":"passed","time":{"start":1750328728666,"stop":1750328731195,"duration":2529}},{"uid":"2205eb0549c37d22","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/394//#testresult/2205eb0549c37d22","status":"passed","time":{"start":1750317689473,"stop":1750317691899,"duration":2426}},{"uid":"e2c6399b40866937","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/393//#testresult/e2c6399b40866937","status":"passed","time":{"start":1750317015858,"stop":1750317019943,"duration":4085}},{"uid":"c7195c4550cb4be6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/392//#testresult/c7195c4550cb4be6","status":"passed","time":{"start":1750230630115,"stop":1750230633744,"duration":3629}},{"uid":"7d51e3865319546d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/391//#testresult/7d51e3865319546d","status":"passed","time":{"start":1750170281432,"stop":1750170283315,"duration":1883}},{"uid":"9cbf351d59e6301e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/389//#testresult/9cbf351d59e6301e","status":"passed","time":{"start":1750144194690,"stop":1750144198617,"duration":3927}},{"uid":"4fe50d66f4f788dd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/388//#testresult/4fe50d66f4f788dd","status":"passed","time":{"start":1750069176488,"stop":1750069179442,"duration":2954}},{"uid":"c077aa729498b11d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/387//#testresult/c077aa729498b11d","status":"passed","time":{"start":1750057858148,"stop":1750057861148,"duration":3000}},{"uid":"44df9f100760e740","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/386//#testresult/44df9f100760e740","status":"passed","time":{"start":1749971395981,"stop":1749971399055,"duration":3074}},{"uid":"86a6c2ebaac41f84","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/385//#testresult/86a6c2ebaac41f84","status":"passed","time":{"start":1749885001025,"stop":1749885003873,"duration":2848}},{"uid":"963b47ad71a6c980","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/384//#testresult/963b47ad71a6c980","status":"passed","time":{"start":1749810264919,"stop":1749810267678,"duration":2759}}]},"tags":["get","happy_path"]},"source":"7b07a93eecd49b45.json","parameterValues":[]}