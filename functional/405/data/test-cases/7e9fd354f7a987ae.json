{"uid":"7e9fd354f7a987ae","name":"An RTP callback is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback_DS_04b_compliant","historyId":"475e3c0708b05c2b7bfae9db8dc283af","time":{"start":1750777961969,"stop":1750777962440,"duration":471},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature(\"RTP Callback\")\n    @allure.story(\"Service provider sends a callback referred to an RTP\")\n    @allure.title(\"An RTP callback is successfully received\")\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback_DS_04b_compliant():\n    \n        rtp_data = generate_rtp_data()\n    \n>       debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_callback.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":true,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750777957420,"stop":1750777957482,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":41,"broken":10,"skipped":0,"passed":53,"unknown":0,"total":104},"items":[{"uid":"89104e93c454c0b6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/404//#testresult/89104e93c454c0b6","status":"passed","time":{"start":1750756709660,"stop":1750756712322,"duration":2662}},{"uid":"f40bb48b338055ee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/403//#testresult/f40bb48b338055ee","status":"passed","time":{"start":1750748859488,"stop":1750748862455,"duration":2967}},{"uid":"78ad486a7a290917","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/402//#testresult/78ad486a7a290917","status":"passed","time":{"start":1750684855212,"stop":1750684857703,"duration":2491}},{"uid":"c6617685e407c811","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/401//#testresult/c6617685e407c811","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750662488919,"stop":1750662490692,"duration":1773}},{"uid":"25306c214a5cd779","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/400//#testresult/25306c214a5cd779","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750576068993,"stop":1750576069582,"duration":589}},{"uid":"fe00c251e745895a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/399//#testresult/fe00c251e745895a","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750489632384,"stop":1750489633016,"duration":632}},{"uid":"5cb209d1abab4acd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/398//#testresult/5cb209d1abab4acd","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750403231770,"stop":1750403232304,"duration":534}},{"uid":"b6e21e2f7bed446c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/397//#testresult/b6e21e2f7bed446c","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750334997692,"stop":1750334998849,"duration":1157}},{"uid":"b71d62c73990b310","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/396//#testresult/b71d62c73990b310","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750329637394,"stop":1750329638042,"duration":648}},{"uid":"8baacb036068096b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/395//#testresult/8baacb036068096b","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750328580866,"stop":1750328581352,"duration":486}},{"uid":"77f2ad9cab84fa03","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/394//#testresult/77f2ad9cab84fa03","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750317540509,"stop":1750317540910,"duration":401}},{"uid":"51c18c5ba1a8c486","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/393//#testresult/51c18c5ba1a8c486","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750316857890,"stop":1750316858728,"duration":838}},{"uid":"729e4f528b27600c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/392//#testresult/729e4f528b27600c","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750230471416,"stop":1750230472914,"duration":1498}},{"uid":"9e1280efe87a54a1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/391//#testresult/9e1280efe87a54a1","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750170132946,"stop":1750170133362,"duration":416}},{"uid":"50127c01f10f273f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/389//#testresult/50127c01f10f273f","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750144039853,"stop":1750144040582,"duration":729}},{"uid":"c536aaa08759629a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/388//#testresult/c536aaa08759629a","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750069024538,"stop":1750069025105,"duration":567}},{"uid":"72f779edfbac31f4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/387//#testresult/72f779edfbac31f4","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750057705500,"stop":1750057707115,"duration":1615}},{"uid":"791f332ccab3c474","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/386//#testresult/791f332ccab3c474","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749971241768,"stop":1749971243534,"duration":1766}},{"uid":"74b6246310dd74df","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/385//#testresult/74b6246310dd74df","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749884849913,"stop":1749884851251,"duration":1338}},{"uid":"2ce1cbf1398e5edc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/384//#testresult/2ce1cbf1398e5edc","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749810118229,"stop":1749810118727,"duration":498}}]},"tags":["callback","happy_path"]},"source":"7e9fd354f7a987ae.json","parameterValues":[]}