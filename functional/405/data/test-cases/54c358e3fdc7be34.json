{"uid":"54c358e3fdc7be34","name":"An RTP is sent through API","fullName":"tests.test_send_rtp#test_send_rtp_api","historyId":"6c14d2fbb180e49a106680915fe95577","time":{"start":1750777970504,"stop":1750777971083,"duration":579},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('An RTP is sent through API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    def test_send_rtp_api():\n        rtp_data = generate_rtp_data()\n    \n>       debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token)\n\nfunctional-tests/tests/test_send_rtp.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750777957420,"stop":1750777957482,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":39,"broken":10,"skipped":0,"passed":178,"unknown":0,"total":227},"items":[{"uid":"e30d104704c13e05","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/404//#testresult/e30d104704c13e05","status":"passed","time":{"start":1750756869341,"stop":1750756870795,"duration":1454}},{"uid":"bbb9c124f79873f4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/403//#testresult/bbb9c124f79873f4","status":"passed","time":{"start":1750749016672,"stop":1750749018095,"duration":1423}},{"uid":"8b046baeb79fa354","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/402//#testresult/8b046baeb79fa354","status":"passed","time":{"start":1750685015308,"stop":1750685016841,"duration":1533}},{"uid":"b0a3e2b8a5e99cba","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/401//#testresult/b0a3e2b8a5e99cba","status":"passed","time":{"start":1750662657949,"stop":1750662660423,"duration":2474}},{"uid":"9fd00d9bbe5e9ca3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/400//#testresult/9fd00d9bbe5e9ca3","status":"passed","time":{"start":1750576229806,"stop":1750576231505,"duration":1699}},{"uid":"46cb245e11e6d158","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/399//#testresult/46cb245e11e6d158","status":"passed","time":{"start":1750489798520,"stop":1750489800843,"duration":2323}},{"uid":"74b2e7dbdb7a72b2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/398//#testresult/74b2e7dbdb7a72b2","status":"passed","time":{"start":1750403391066,"stop":1750403392497,"duration":1431}},{"uid":"564195d8cd09222e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/397//#testresult/564195d8cd09222e","status":"passed","time":{"start":1750335165471,"stop":1750335167750,"duration":2279}},{"uid":"30cf90e1ffeabc29","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/396//#testresult/30cf90e1ffeabc29","status":"passed","time":{"start":1750329806059,"stop":1750329808571,"duration":2512}},{"uid":"68e36e0da9f68233","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/395//#testresult/68e36e0da9f68233","status":"passed","time":{"start":1750328735662,"stop":1750328737184,"duration":1522}},{"uid":"8602f562b1cca1d9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/394//#testresult/8602f562b1cca1d9","status":"passed","time":{"start":1750317696074,"stop":1750317697569,"duration":1495}},{"uid":"2a501dd229e5ea6a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/393//#testresult/2a501dd229e5ea6a","status":"passed","time":{"start":1750317027243,"stop":1750317029794,"duration":2551}},{"uid":"51c8167657f8bed6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/392//#testresult/51c8167657f8bed6","status":"passed","time":{"start":1750230642344,"stop":1750230644769,"duration":2425}},{"uid":"c517052b926cfca1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/391//#testresult/c517052b926cfca1","status":"passed","time":{"start":1750170288151,"stop":1750170289768,"duration":1617}},{"uid":"a40a3d9f49340068","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/389//#testresult/a40a3d9f49340068","status":"passed","time":{"start":1750144207039,"stop":1750144209525,"duration":2486}},{"uid":"8f996ccd094ad739","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/388//#testresult/8f996ccd094ad739","status":"passed","time":{"start":1750069185104,"stop":1750069187022,"duration":1918}},{"uid":"95dfe998e153b41b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/387//#testresult/95dfe998e153b41b","status":"passed","time":{"start":1750057866802,"stop":1750057868529,"duration":1727}},{"uid":"8f4d99545ee145a3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/386//#testresult/8f4d99545ee145a3","status":"passed","time":{"start":1749971404780,"stop":1749971406666,"duration":1886}},{"uid":"24a5350796bc7df5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/385//#testresult/24a5350796bc7df5","status":"passed","time":{"start":1749885009772,"stop":1749885011506,"duration":1734}},{"uid":"b2a211652b69ad63","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/384//#testresult/b2a211652b69ad63","status":"passed","time":{"start":1749810272834,"stop":1749810275062,"duration":2228}}]},"tags":["send","happy_path"]},"source":"54c358e3fdc7be34.json","parameterValues":[]}