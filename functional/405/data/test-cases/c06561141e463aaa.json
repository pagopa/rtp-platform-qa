{"uid":"c06561141e463aaa","name":"inexistent RTP -> empty body","fullName":"tests.test_get_rtp#test_get_rtp_not_found","historyId":"f374baeb8e6aa77fbe08e6036a22e13b","time":{"start":1750777966205,"stop":1750777966832,"duration":627},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature(\"RTP Get\")\n    @allure.story(\"Service provider retrieves an RTP\")\n    @allure.title(\"inexistent RTP -> empty body\")\n    @pytest.mark.get\n    @pytest.mark.unhappy_path\n    def test_get_rtp_not_found():\n        fake_rtp_id = str(uuid.uuid4())\n    \n>       token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_get_rtp.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750777957420,"stop":1750777957482,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Get"},{"name":"story","value":"Service provider retrieves an RTP"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":21,"unknown":0,"total":22},"items":[{"uid":"6a83ac3e7506033a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/404//#testresult/6a83ac3e7506033a","status":"passed","time":{"start":1750756863170,"stop":1750756863880,"duration":710}},{"uid":"45c56476634bcd4f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/403//#testresult/45c56476634bcd4f","status":"passed","time":{"start":1750749012193,"stop":1750749012966,"duration":773}},{"uid":"8fc7b06492b813bf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/402//#testresult/8fc7b06492b813bf","status":"passed","time":{"start":1750685010207,"stop":1750685011124,"duration":917}},{"uid":"7ed96e7df633ded9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/401//#testresult/7ed96e7df633ded9","status":"passed","time":{"start":1750662650193,"stop":1750662651397,"duration":1204}},{"uid":"f2b2049be1e49486","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/400//#testresult/f2b2049be1e49486","status":"passed","time":{"start":1750576223790,"stop":1750576224625,"duration":835}},{"uid":"6468f18866bd2691","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/399//#testresult/6468f18866bd2691","status":"passed","time":{"start":1750489790920,"stop":1750489792053,"duration":1133}},{"uid":"e0584b052d8bf88a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/398//#testresult/e0584b052d8bf88a","status":"passed","time":{"start":1750403385319,"stop":1750403385993,"duration":674}},{"uid":"22a6688a07259561","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/397//#testresult/22a6688a07259561","status":"passed","time":{"start":1750335157617,"stop":1750335158734,"duration":1117}},{"uid":"546c5a8458d22c05","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/396//#testresult/546c5a8458d22c05","status":"passed","time":{"start":1750329798578,"stop":1750329799819,"duration":1241}},{"uid":"3d691807de4659d0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/395//#testresult/3d691807de4659d0","status":"passed","time":{"start":1750328731197,"stop":1750328731874,"duration":677}},{"uid":"b34504bdb587150a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/394//#testresult/b34504bdb587150a","status":"passed","time":{"start":1750317691901,"stop":1750317692589,"duration":688}},{"uid":"e8814cc146dadfc5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/393//#testresult/e8814cc146dadfc5","status":"passed","time":{"start":1750317019945,"stop":1750317021198,"duration":1253}},{"uid":"e880d687c7f6621d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/392//#testresult/e880d687c7f6621d","status":"passed","time":{"start":1750230633745,"stop":1750230634948,"duration":1203}},{"uid":"7aa08276e4c027c2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/391//#testresult/7aa08276e4c027c2","status":"passed","time":{"start":1750170283316,"stop":1750170284043,"duration":727}},{"uid":"cb17cc6505cdcb50","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/389//#testresult/cb17cc6505cdcb50","status":"passed","time":{"start":1750144198619,"stop":1750144199862,"duration":1243}},{"uid":"ca606a00ff410c51","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/388//#testresult/ca606a00ff410c51","status":"passed","time":{"start":1750069179443,"stop":1750069180377,"duration":934}},{"uid":"c5ad040b5725b9f0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/387//#testresult/c5ad040b5725b9f0","status":"passed","time":{"start":1750057861150,"stop":1750057861992,"duration":842}},{"uid":"14085838b28bf8f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/386//#testresult/14085838b28bf8f","status":"passed","time":{"start":1749971399056,"stop":1749971399981,"duration":925}},{"uid":"bc4495c873a37f7c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/385//#testresult/bc4495c873a37f7c","status":"passed","time":{"start":1749885003875,"stop":1749885004712,"duration":837}},{"uid":"5bfc6d92041fe3ef","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/384//#testresult/5bfc6d92041fe3ef","status":"passed","time":{"start":1749810267679,"stop":1749810268386,"duration":707}}]},"tags":["get","unhappy_path"]},"source":"c06561141e463aaa.json","parameterValues":[]}