{"uid":"6dc196da7303ae74","name":"The response body contains a comprehensible error message","fullName":"tests.test_send_rtp#test_field_error_in_body","historyId":"dd6ce34dc9b4737f86cbefdca52b3610","time":{"start":1750777972527,"stop":1750777973137,"duration":610},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('The response body contains a comprehensible error message')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_field_error_in_body():\n        rtp_data = generate_rtp_data()\n    \n>       debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token)\n\nfunctional-tests/tests/test_send_rtp.py:155: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750777957420,"stop":1750777957482,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":10,"skipped":0,"passed":176,"unknown":0,"total":190},"items":[{"uid":"820e2e3584241107","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/404//#testresult/820e2e3584241107","status":"passed","time":{"start":1750756876865,"stop":1750756878254,"duration":1389}},{"uid":"12478ae7854f6990","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/403//#testresult/12478ae7854f6990","status":"passed","time":{"start":1750749024586,"stop":1750749025951,"duration":1365}},{"uid":"13a7519170f74971","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/402//#testresult/13a7519170f74971","status":"passed","time":{"start":1750685025140,"stop":1750685026568,"duration":1428}},{"uid":"35211a797959057c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/401//#testresult/35211a797959057c","status":"passed","time":{"start":1750662675405,"stop":1750662677836,"duration":2431}},{"uid":"ce259cc36792e86b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/400//#testresult/ce259cc36792e86b","status":"passed","time":{"start":1750576239417,"stop":1750576241910,"duration":2493}},{"uid":"e557518634d232f7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/399//#testresult/e557518634d232f7","status":"passed","time":{"start":1750489811286,"stop":1750489813536,"duration":2250}},{"uid":"a616325c8110d281","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/398//#testresult/a616325c8110d281","status":"passed","time":{"start":1750403399396,"stop":1750403400776,"duration":1380}},{"uid":"ec7a1128dc8c7a19","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/397//#testresult/ec7a1128dc8c7a19","status":"passed","time":{"start":1750335176409,"stop":1750335178637,"duration":2228}},{"uid":"f7829e286efe0a69","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/396//#testresult/f7829e286efe0a69","status":"passed","time":{"start":1750329819221,"stop":1750329821685,"duration":2464}},{"uid":"bc462308049fc48e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/395//#testresult/bc462308049fc48e","status":"passed","time":{"start":1750328744615,"stop":1750328745968,"duration":1353}},{"uid":"95a8440aa0950cf4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/394//#testresult/95a8440aa0950cf4","status":"passed","time":{"start":1750317709682,"stop":1750317711143,"duration":1461}},{"uid":"ea0a5a58fbdf8eda","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/393//#testresult/ea0a5a58fbdf8eda","status":"passed","time":{"start":1750317041924,"stop":1750317044385,"duration":2461}},{"uid":"a25763874f8cea86","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/392//#testresult/a25763874f8cea86","status":"passed","time":{"start":1750230717532,"stop":1750230719855,"duration":2323}},{"uid":"baaa6ce71f00bfd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/391//#testresult/baaa6ce71f00bfd","status":"passed","time":{"start":1750170357355,"stop":1750170358920,"duration":1565}},{"uid":"aefaa5a62a9cb5b7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/389//#testresult/aefaa5a62a9cb5b7","status":"passed","time":{"start":1750144277211,"stop":1750144279659,"duration":2448}},{"uid":"40f38bbda38a5cb6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/388//#testresult/40f38bbda38a5cb6","status":"passed","time":{"start":1750069253321,"stop":1750069255196,"duration":1875}},{"uid":"64092a63b98ae11a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/387//#testresult/64092a63b98ae11a","status":"passed","time":{"start":1750057935146,"stop":1750057936792,"duration":1646}},{"uid":"7b7536b0b8a1bd53","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/386//#testresult/7b7536b0b8a1bd53","status":"passed","time":{"start":1749971474255,"stop":1749971476094,"duration":1839}},{"uid":"fb57c92614a33249","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/385//#testresult/fb57c92614a33249","status":"passed","time":{"start":1749885077641,"stop":1749885079279,"duration":1638}},{"uid":"ec5844bcfa541b07","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/384//#testresult/ec5844bcfa541b07","status":"passed","time":{"start":1749810340386,"stop":1749810341763,"duration":1377}}]},"tags":["unhappy_path","send"]},"source":"6dc196da7303ae74.json","parameterValues":[]}