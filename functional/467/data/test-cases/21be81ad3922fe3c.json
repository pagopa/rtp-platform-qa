{"uid":"21be81ad3922fe3c","name":"inexistent RTP -> empty body","fullName":"tests.test_get_rtp#test_get_rtp_not_found","historyId":"f374baeb8e6aa77fbe08e6036a22e13b","time":{"start":1754051913727,"stop":1754051914170,"duration":443},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Get')\n    @allure.story('Service provider retrieves an RTP')\n    @allure.title('inexistent RTP -> empty body')\n    @pytest.mark.get\n    @pytest.mark.unhappy_path\n    def test_get_rtp_not_found():\n        fake_rtp_id = str(uuid.uuid4())\n    \n>       token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_get_rtp.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1754051865887,"stop":1754051865942,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider retrieves an RTP"},{"name":"feature","value":"RTP Get"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"pkrvmjbmru5nbw0"},{"name":"thread","value":"2538-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":11,"skipped":0,"passed":70,"unknown":0,"total":81},"items":[{"uid":"651084217771dc3a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/466//#testresult/651084217771dc3a","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754032281190,"stop":1754032281564,"duration":374}},{"uid":"66f06de6ba957562","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/465//#testresult/66f06de6ba957562","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753974033999,"stop":1753974034377,"duration":378}},{"uid":"b75474c5f11687dd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/464//#testresult/b75474c5f11687dd","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753945846615,"stop":1753945847245,"duration":630}},{"uid":"6d88b1b90566092a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/463//#testresult/6d88b1b90566092a","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753878281954,"stop":1753878282593,"duration":639}},{"uid":"cf8da03a717050ac","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/462//#testresult/cf8da03a717050ac","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753859494549,"stop":1753859495236,"duration":687}},{"uid":"435bba5659aa86d4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/461//#testresult/435bba5659aa86d4","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753773053168,"stop":1753773053812,"duration":644}},{"uid":"367efd94fd6c6dd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/460//#testresult/367efd94fd6c6dd","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753686727644,"stop":1753686728124,"duration":480}},{"uid":"3c2a1c98702c1216","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/459//#testresult/3c2a1c98702c1216","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753600065335,"stop":1753600065702,"duration":367}},{"uid":"fc54dd8c4d3d1395","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/458//#testresult/fc54dd8c4d3d1395","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753513677085,"stop":1753513678332,"duration":1247}},{"uid":"b4fd29d0d7922156","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/457//#testresult/b4fd29d0d7922156","status":"passed","time":{"start":1753433583089,"stop":1753433584359,"duration":1270}},{"uid":"aab84699da1d6d9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/456//#testresult/aab84699da1d6d9","status":"passed","time":{"start":1753427402310,"stop":1753427403154,"duration":844}},{"uid":"c18d1f4175fa815","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/455//#testresult/c18d1f4175fa815","status":"passed","time":{"start":1753367001914,"stop":1753367003060,"duration":1146}},{"uid":"58082e780ebe9bea","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/454//#testresult/58082e780ebe9bea","status":"passed","time":{"start":1753351362787,"stop":1753351363644,"duration":857}},{"uid":"f36196b3dcb7c8dc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/453//#testresult/f36196b3dcb7c8dc","status":"passed","time":{"start":1753341013076,"stop":1753341014036,"duration":960}},{"uid":"efa657a22dc36d4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/452//#testresult/efa657a22dc36d4","status":"passed","time":{"start":1753254631873,"stop":1753254632602,"duration":729}},{"uid":"b78c899e3e0da2c7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/451//#testresult/b78c899e3e0da2c7","status":"passed","time":{"start":1753168190790,"stop":1753168191503,"duration":713}},{"uid":"6ff9fc8eb5788f89","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/450//#testresult/6ff9fc8eb5788f89","status":"passed","time":{"start":1753081911688,"stop":1753081912398,"duration":710}},{"uid":"71b99cd9953d504f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/449//#testresult/71b99cd9953d504f","status":"passed","time":{"start":1752995276944,"stop":1752995277641,"duration":697}},{"uid":"2f19b6518d655684","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/448//#testresult/2f19b6518d655684","status":"passed","time":{"start":1752908916857,"stop":1752908918106,"duration":1249}},{"uid":"593018743cb9bfd0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/447//#testresult/593018743cb9bfd0","status":"passed","time":{"start":1752822641446,"stop":1752822642697,"duration":1251}}]},"tags":["get","unhappy_path"]},"source":"21be81ad3922fe3c.json","parameterValues":[]}