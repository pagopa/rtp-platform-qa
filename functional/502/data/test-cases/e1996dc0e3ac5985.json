{"uid":"e1996dc0e3ac5985","name":"An RTP is sent to ICCREA service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_iccrea","historyId":"43c6e6f1884b3efb611eee04b5b6eb0c","time":{"start":1755847723107,"stop":1755847726329,"duration":3222},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider')\n    @allure.title('An RTP is sent to ICCREA service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.iccrea\n    def test_send_rtp_to_iccrea():\n        rtp_data = generate_rtp_data(payer_id=secrets.iccrea_activated_fiscal_code)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:143: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755847614004,"stop":1755847614062,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"iccrea"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2475-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":42,"broken":17,"skipped":0,"passed":20,"unknown":0,"total":79},"items":[{"uid":"7a285f4dbef5dafd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/501//#testresult/7a285f4dbef5dafd","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755846505816,"stop":1755846508966,"duration":3150}},{"uid":"a35d991ef4d05230","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/500//#testresult/a35d991ef4d05230","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755843971586,"stop":1755843974301,"duration":2715}},{"uid":"644e37fb984fce90","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/499//#testresult/644e37fb984fce90","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755760238948,"stop":1755760241654,"duration":2706}},{"uid":"2ae7a9613756f663","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/498//#testresult/2ae7a9613756f663","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755673761620,"stop":1755673765335,"duration":3715}},{"uid":"5d455b8c145c836","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/497//#testresult/5d455b8c145c836","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755613357038,"stop":1755613359717,"duration":2679}},{"uid":"808c1cd4435bab5a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/496//#testresult/808c1cd4435bab5a","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755588537905,"stop":1755588540469,"duration":2564}},{"uid":"de1425a93357bbe4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/495//#testresult/de1425a93357bbe4","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755587328219,"stop":1755587330742,"duration":2523}},{"uid":"77eb6be0e9bffbf7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/494//#testresult/77eb6be0e9bffbf7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755501075823,"stop":1755501079494,"duration":3671}},{"uid":"2dca013af42d4ca8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/493//#testresult/2dca013af42d4ca8","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755414465314,"stop":1755414468322,"duration":3008}},{"uid":"ba59d1782ae3372c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/492//#testresult/ba59d1782ae3372c","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755328056790,"stop":1755328059578,"duration":2788}},{"uid":"2509f04de3e01402","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/491//#testresult/2509f04de3e01402","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755241742360,"stop":1755241745323,"duration":2963}},{"uid":"c787ff91cbe12723","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/490//#testresult/c787ff91cbe12723","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755166856090,"stop":1755166858916,"duration":2826}},{"uid":"812cf4adef4f8fea","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/489//#testresult/812cf4adef4f8fea","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755158359042,"stop":1755158362212,"duration":3170}},{"uid":"bae7e7637cc68127","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/488//#testresult/bae7e7637cc68127","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755155406030,"stop":1755155409531,"duration":3501}},{"uid":"3586577b054db25f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/487//#testresult/3586577b054db25f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755068976128,"stop":1755068978940,"duration":2812}},{"uid":"3d38856ea59a4dbf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/486//#testresult/3d38856ea59a4dbf","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754982590296,"stop":1754982593961,"duration":3665}},{"uid":"8d497e73a925a909","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/485//#testresult/8d497e73a925a909","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754907899068,"stop":1754907902277,"duration":3209}},{"uid":"a644dd12f3111163","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/483//#testresult/a644dd12f3111163","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754896349188,"stop":1754896353033,"duration":3845}},{"uid":"bb5b9a3900a7a3e7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/482//#testresult/bb5b9a3900a7a3e7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754809675526,"stop":1754809678289,"duration":2763}},{"uid":"88e666576b78d2ee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/481//#testresult/88e666576b78d2ee","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754723284880,"stop":1754723287536,"duration":2656}}]},"tags":["iccrea","real_integration","send","happy_path"]},"source":"e1996dc0e3ac5985.json","parameterValues":[]}