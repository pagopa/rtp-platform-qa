{"uid":"7ff076a0b835a0ef","name":"Happy path: a newly published debt position with VALID status is updated","fullName":"tests.test_debt_position_update#test_update_valid_newly_published_debt_position","historyId":"679ff7081714ee69d34bdd290b398cfd","time":{"start":1758180094681,"stop":1758180393546,"duration":298865},"description":"\nVerify that a newly published debt position with VALID status\ncan be updated and changes are reflected in RTP lookups.\n","descriptionHtml":"<p>Verify that a newly published debt position with VALID status<br />\ncan be updated and changes are reflected in RTP lookups.</p>\n","status":"failed","statusMessage":"Failed: Timeout (>300.0s) from pytest-timeout.","statusTrace":"setup_data = {'debtor_fc': 'BRSRBT52S44X000F', 'iupd': '7d9ceaa87ca748e2a', 'iuv': '360975404592151333', 'organization_id': '02438750586', ...}\n\n    @allure.feature('Debt Positions')\n    @allure.story('Update Valid Newly Published Debt Position')\n    @pytest.mark.debt_positions\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.timeout(TEST_TIMEOUT_SEC)\n    def test_update_valid_newly_published_debt_position(setup_data: dict[str, Any]) -> None:\n        \"\"\"\n        Verify that a newly published debt position with VALID status\n        can be updated and changes are reflected in RTP lookups.\n        \"\"\"\n        allure.dynamic.title('Happy path: a newly published debt position with VALID status is updated')\n    \n        update_data = _setup_update_test(setup_data, 'VALID', to_publish=False)\n        access_token = _get_rtp_reader_access_token()\n        expected_status = 'SENT'\n    \n        while True:\n            response = get_rtp_by_notice_number(access_token, update_data.nav)\n    \n            if response.status_code != 200:\n                raise RuntimeError(\n                    f\"Error calling find_rtp_by_notice_number API. \"\n                    f\"Response {response.status_code}. Notice number: {update_data.nav}\"\n                )\n    \n            data = response.json()\n            assert isinstance(data, list), 'Invalid response body.'\n    \n            if len(data) == 0:\n>               time.sleep(POLLING_RATE_SEC)\nE               Failed: Timeout (>300.0s) from pytest-timeout.\n\nfunctional-tests/tests/test_debt_position_update.py:128: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758180014497,"stop":1758180014554,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_data","time":{"start":1758180093546,"stop":1758180094681,"duration":1135},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Debt Positions"},{"name":"story","value":"Update Valid Newly Published Debt Position"},{"name":"tag","value":"timeout(300)"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"tag","value":"debt_positions"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debt_position_update"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2483-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debt_position_update"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"7fee5691b4d37aad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/534//#testresult/7fee5691b4d37aad","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1758093681016,"stop":1758093980198,"duration":299182}},{"uid":"eae142450345823a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/533//#testresult/eae142450345823a","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1758007344394,"stop":1758007643488,"duration":299094}},{"uid":"2b1902f2150cefe8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/532//#testresult/2b1902f2150cefe8","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1757920970355,"stop":1757921269598,"duration":299243}},{"uid":"4ce2105306e4a424","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/531//#testresult/4ce2105306e4a424","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1757834479163,"stop":1757834778008,"duration":298845}},{"uid":"697613f1aee615da","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/530//#testresult/697613f1aee615da","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1757748005417,"stop":1757748304590,"duration":299173}},{"uid":"edb259144e594bc1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/529//#testresult/edb259144e594bc1","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1757665880618,"stop":1757666179359,"duration":298741}}]},"tags":["debt_positions","timeout(300)","send","happy_path"]},"source":"7ff076a0b835a0ef.json","parameterValues":[]}