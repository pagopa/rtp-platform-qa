{"uid":"a959c02a22f2c2f7","name":"Get list of service providers successfully","fullName":"tests.test_service_providers_registry.TestServiceProvidersRegistry#test_get_service_providers_success","historyId":"672313a90fcd5952f4d0a6c4b0a65474","time":{"start":1749799861862,"stop":1749799861862,"duration":0},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"self = <tests.test_service_providers_registry.TestServiceProvidersRegistry object at 0x7f6e55851950>\n\n    @pytest.fixture(autouse=True)\n    def setup(self):\n>       self.access_token = get_valid_access_token(\n            client_id=secrets.pagopa_integration_service_registry.client_id,\n            client_secret=secrets.pagopa_integration_service_registry.client_secret,\n            access_token_function=get_access_token\n        )\n\nfunctional-tests/tests/test_service_providers_registry.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749799844265,"stop":1749799844322,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1749799861863,"stop":1749799862474,"duration":611},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/rtp-platform-qa/rtp-platform-qa/functional-tests/tests/test_service_providers_registry.py\", line 16, in setup\n    self.access_token = get_valid_access_token(\n                        ~~~~~~~~~~~~~~~~~~~~~~^\n        client_id=secrets.pagopa_integration_service_registry.client_id,\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        client_secret=secrets.pagopa_integration_service_registry.client_secret,\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        access_token_function=get_access_token\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/home/runner/work/rtp-platform-qa/rtp-platform-qa/api/auth.py\", line 8, in get_valid_access_token\n    token_response.raise_for_status()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/requests/models.py\", line 1024, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"pagoPA retrieves service providers registry"},{"name":"feature","value":"Service Providers Registry"},{"name":"tag","value":"happy_path"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_service_providers_registry"},{"name":"subSuite","value":"TestServiceProvidersRegistry"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2460-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_service_providers_registry"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":18,"skipped":0,"passed":23,"unknown":0,"total":41},"items":[{"uid":"ba3fd21eeb03a5a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/376//#testresult/ba3fd21eeb03a5a","status":"passed","time":{"start":1749798657156,"stop":1749798658143,"duration":987}},{"uid":"d0e560b7475ecd7a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/375//#testresult/d0e560b7475ecd7a","status":"passed","time":{"start":1749712274064,"stop":1749712274674,"duration":610}},{"uid":"62788bc7e43407aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/374//#testresult/62788bc7e43407aa","status":"passed","time":{"start":1749625859140,"stop":1749625859593,"duration":453}},{"uid":"3315ce7441af877d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/373//#testresult/3315ce7441af877d","status":"passed","time":{"start":1749539452679,"stop":1749539453115,"duration":436}},{"uid":"8b8187750a406758","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/372//#testresult/8b8187750a406758","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749485093701,"stop":1749485093701,"duration":0}},{"uid":"63fce90e222b9a63","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/371//#testresult/63fce90e222b9a63","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484935166,"stop":1749484935166,"duration":0}},{"uid":"fe975b4df99bb537","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/370//#testresult/fe975b4df99bb537","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484611048,"stop":1749484611048,"duration":0}},{"uid":"e423b7fb4a37d2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/369//#testresult/e423b7fb4a37d2","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484268650,"stop":1749484268650,"duration":0}},{"uid":"df9ed53b07ab917f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/368//#testresult/df9ed53b07ab917f","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749483925769,"stop":1749483925769,"duration":0}},{"uid":"dbfa790e63471ff5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/365//#testresult/dbfa790e63471ff5","status":"passed","time":{"start":1749482317593,"stop":1749482318839,"duration":1246}},{"uid":"4622e5a4651b1933","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/367//#testresult/4622e5a4651b1933","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749482234324,"stop":1749482234324,"duration":0}},{"uid":"b6b4a4954cf05a61","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/b6b4a4954cf05a61","status":"passed","time":{"start":1749453104527,"stop":1749453104974,"duration":447}},{"uid":"a832856ddfa77538","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/362//#testresult/a832856ddfa77538","status":"passed","time":{"start":1749366661138,"stop":1749366661774,"duration":636}},{"uid":"457f8892563cd47d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/361//#testresult/457f8892563cd47d","status":"passed","time":{"start":1749280231804,"stop":1749280232242,"duration":438}},{"uid":"505773e4355ec6d5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/505773e4355ec6d5","status":"passed","time":{"start":1749193840125,"stop":1749193840483,"duration":358}},{"uid":"47299dd98006713f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/359//#testresult/47299dd98006713f","status":"passed","time":{"start":1749107478510,"stop":1749107479151,"duration":641}},{"uid":"d9f21467bba8608a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/358//#testresult/d9f21467bba8608a","status":"passed","time":{"start":1749021051797,"stop":1749021052211,"duration":414}},{"uid":"c2b42b1780ffafe4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/357//#testresult/c2b42b1780ffafe4","status":"passed","time":{"start":1748956783727,"stop":1748956784077,"duration":350}},{"uid":"a60eb25a8f8236d1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/356//#testresult/a60eb25a8f8236d1","status":"passed","time":{"start":1748953350304,"stop":1748953350682,"duration":378}},{"uid":"e3ce9f5f059568b0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/355//#testresult/e3ce9f5f059568b0","status":"passed","time":{"start":1748934692052,"stop":1748934692930,"duration":878}}]},"tags":["happy_path"]},"source":"a959c02a22f2c2f7.json","parameterValues":[]}