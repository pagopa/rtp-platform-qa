{"uid":"d87ccef027feec8b","name":"The service returns the mocked server error","fullName":"tests.test_send_rtp#test_receive_server_error_from_mock","historyId":"df79497008225556c6105188e0be1c16","time":{"start":1741603762497,"stop":1741603825367,"duration":62870},"status":"failed","statusMessage":"AssertionError: assert 504 == 500\n +  where 504 = <Response [504]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('The service returns the mocked server error')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_receive_server_error_from_mock():\n        mock_fiscal_code = 'RSSMRA85T10X000D'\n        expected_mocked_failure_status_code = 500\n    \n        rtp_data = generate_rtp_data()\n    \n        rtp_data['payer']['payerId'] = mock_fiscal_code\n    \n        debtor_service_provider_access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                                                      client_secret=secrets.debtor_service_provider.client_secret,\n                                                                      access_token_function=get_access_token)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        activate(debtor_service_provider_access_token, rtp_data['payer']['payerId'],\n                 secrets.debtor_service_provider.service_provider_id)\n    \n        response = send_rtp(access_token=creditor_service_provider_access_token, rtp_payload=rtp_data)\n>       assert response.status_code == expected_mocked_failure_status_code\nE       assert 504 == 500\nE        +  where 504 = <Response [504]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:97: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1741603680711,"stop":1741603680773,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"fv-az798-221"},{"name":"thread","value":"2269-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":57,"unknown":0,"total":59},"items":[{"uid":"a1cc3712ee1806c9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/232//#testresult/a1cc3712ee1806c9","status":"passed","time":{"start":1741590426573,"stop":1741590429899,"duration":3326}},{"uid":"ae2823ea5c0ebe86","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/231//#testresult/ae2823ea5c0ebe86","status":"passed","time":{"start":1741503967709,"stop":1741503971523,"duration":3814}},{"uid":"44c3a6bd7f2c8ea1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/230//#testresult/44c3a6bd7f2c8ea1","status":"passed","time":{"start":1741417542942,"stop":1741417546045,"duration":3103}},{"uid":"18234799a9250aee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/229//#testresult/18234799a9250aee","status":"passed","time":{"start":1741368340237,"stop":1741368343280,"duration":3043}},{"uid":"34ef5552f1748851","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/228//#testresult/34ef5552f1748851","status":"passed","time":{"start":1741365946612,"stop":1741365954600,"duration":7988}},{"uid":"a618700c06386fe0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/227//#testresult/a618700c06386fe0","status":"passed","time":{"start":1741364158457,"stop":1741364162296,"duration":3839}},{"uid":"f46bab855f7e693","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/225//#testresult/f46bab855f7e693","status":"passed","time":{"start":1741331221506,"stop":1741331226820,"duration":5314}},{"uid":"a2210498402ade50","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/224//#testresult/a2210498402ade50","status":"passed","time":{"start":1741244810960,"stop":1741244815653,"duration":4693}},{"uid":"802351843223e4d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/223//#testresult/802351843223e4d","status":"passed","time":{"start":1741158397199,"stop":1741158401788,"duration":4589}},{"uid":"a240e08b90b8b39d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/222//#testresult/a240e08b90b8b39d","status":"passed","time":{"start":1741072013469,"stop":1741072018091,"duration":4622}},{"uid":"1ce995e6b7846dc5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/221//#testresult/1ce995e6b7846dc5","status":"passed","time":{"start":1740985619435,"stop":1740985624076,"duration":4641}},{"uid":"cf24f70c61176c78","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/220//#testresult/cf24f70c61176c78","status":"passed","time":{"start":1740899152450,"stop":1740899158152,"duration":5702}},{"uid":"7296f8fc28c1aa9a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/219//#testresult/7296f8fc28c1aa9a","status":"passed","time":{"start":1740812753920,"stop":1740812758309,"duration":4389}},{"uid":"e1fffaca94f8f8ae","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/218//#testresult/e1fffaca94f8f8ae","status":"passed","time":{"start":1740726410987,"stop":1740726415969,"duration":4982}},{"uid":"83e3cbbd5e6cc220","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/217//#testresult/83e3cbbd5e6cc220","status":"passed","time":{"start":1740639997650,"stop":1740640007268,"duration":9618}},{"uid":"71c0222a79026b3a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/216//#testresult/71c0222a79026b3a","status":"passed","time":{"start":1740577987189,"stop":1740577992739,"duration":5550}},{"uid":"f9cac773e9ced65e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/215//#testresult/f9cac773e9ced65e","status":"failed","statusDetails":"AssertionError: assert 504 == 500\n +  where 504 = <Response [504]>.status_code","time":{"start":1740553603519,"stop":1740553667323,"duration":63804}},{"uid":"4b53edc07ce5fd15","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/214//#testresult/4b53edc07ce5fd15","status":"passed","time":{"start":1740467198628,"stop":1740467203950,"duration":5322}},{"uid":"3f8e7dd7fe6b1ec1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/213//#testresult/3f8e7dd7fe6b1ec1","status":"passed","time":{"start":1740391822617,"stop":1740391827235,"duration":4618}},{"uid":"27e6095f5cf21033","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/212//#testresult/27e6095f5cf21033","status":"passed","time":{"start":1740380823026,"stop":1740380828118,"duration":5092}}]},"tags":["unhappy_path","send"]},"source":"d87ccef027feec8b.json","parameterValues":[]}