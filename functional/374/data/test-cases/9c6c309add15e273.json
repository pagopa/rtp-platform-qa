{"uid":"9c6c309add15e273","name":"An RTP callback is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback_DS_08P_compliant","historyId":"e98ff8a1e43c45b6eec2e1ce025e4cfc","time":{"start":1749625632778,"stop":1749625633229,"duration":451},"status":"failed","statusMessage":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('An RTP callback is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback_DS_08P_compliant():\n        callback_data = generate_callback_data_DS_08P_compliant()\n    \n        cert, key = pfx_to_pem(secrets.debtor_service_provider_mock_PFX_base64,\n                               secrets.debtor_service_provider_mock_PFX_password_base64,\n                               config.cert_path,\n                               config.key_path)\n    \n        callback_response = srtp_callback(rtp_payload=callback_data,\n                                          cert_path=cert,\n                                          key_path=key)\n>       assert callback_response.status_code == 200, f'Error from callback, expected 200 got {callback_response.status_code}'\nE       AssertionError: Error from callback, expected 200 got 400\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\nfunctional-tests/tests/test_callback.py:47: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749625622094,"stop":1749625622151,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Callback"},{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2497-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":18,"broken":7,"skipped":0,"passed":50,"unknown":0,"total":75},"items":[{"uid":"6d4630b1ab0609ce","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/373//#testresult/6d4630b1ab0609ce","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749539223986,"stop":1749539224438,"duration":452}},{"uid":"69caec59916da775","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/372//#testresult/69caec59916da775","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749485083162,"stop":1749485083163,"duration":1}},{"uid":"75af0491d10f786c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/371//#testresult/75af0491d10f786c","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749484925340,"stop":1749484925341,"duration":1}},{"uid":"5c31a9cf3e3d157c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/370//#testresult/5c31a9cf3e3d157c","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749484603838,"stop":1749484603838,"duration":0}},{"uid":"39fd5ebd6e0d381f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/369//#testresult/39fd5ebd6e0d381f","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749484257531,"stop":1749484257531,"duration":0}},{"uid":"2d533f42e8aac445","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/368//#testresult/2d533f42e8aac445","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749483915668,"stop":1749483915669,"duration":1}},{"uid":"140e09b8bc057b0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/365//#testresult/140e09b8bc057b0","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749482097040,"stop":1749482097447,"duration":407}},{"uid":"a6a074647ca07d12","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/367//#testresult/a6a074647ca07d12","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749482223385,"stop":1749482223386,"duration":1}},{"uid":"4f6b05731bafaa86","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/4f6b05731bafaa86","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749452880327,"stop":1749452880789,"duration":462}},{"uid":"a8ec5de4fd7a9201","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/362//#testresult/a8ec5de4fd7a9201","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749366423787,"stop":1749366424448,"duration":661}},{"uid":"507a66ef301ec85c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/361//#testresult/507a66ef301ec85c","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749280009310,"stop":1749280009821,"duration":511}},{"uid":"775d2dfbb4d2417f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/775d2dfbb4d2417f","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749193618381,"stop":1749193618763,"duration":382}},{"uid":"9600ce8525e0ccef","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/359//#testresult/9600ce8525e0ccef","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749107243056,"stop":1749107243871,"duration":815}},{"uid":"dd9ee987d591f16e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/358//#testresult/dd9ee987d591f16e","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749020828080,"stop":1749020828533,"duration":453}},{"uid":"e0328b7b944d9996","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/357//#testresult/e0328b7b944d9996","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748956563814,"stop":1748956564202,"duration":388}},{"uid":"5e73600d8622b26c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/356//#testresult/5e73600d8622b26c","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748953129697,"stop":1748953130191,"duration":494}},{"uid":"3737fe2825e9c593","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/355//#testresult/3737fe2825e9c593","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748934472589,"stop":1748934472983,"duration":394}},{"uid":"e4318af5edc22951","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/354//#testresult/e4318af5edc22951","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748848069954,"stop":1748848070454,"duration":500}},{"uid":"81e3e4d8776ad425","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/353//#testresult/81e3e4d8776ad425","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748761623861,"stop":1748761624512,"duration":651}},{"uid":"a91dbfeca101794","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/352//#testresult/a91dbfeca101794","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748675215909,"stop":1748675216366,"duration":457}}]},"tags":["callback","happy_path"]},"source":"9c6c309add15e273.json","parameterValues":[]}