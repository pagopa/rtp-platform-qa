{"uid":"eb60bdd35875e99f","name":"Happy path: an already published debt position with VALID status is updated","fullName":"tests.test_debt_position_update#test_update_valid_already_published_debt_position","historyId":"0b7c62c7454094d3206fd6273e9965e0","time":{"start":1759920001057,"stop":1759920012612,"duration":11555},"description":"\nVerify that an already published debt position with VALID status\ncan be updated and changes are reflected in RTP lookups.\n","descriptionHtml":"<p>Verify that an already published debt position with VALID status<br />\ncan be updated and changes are reflected in RTP lookups.</p>\n","status":"failed","statusMessage":"AssertionError: assert 1 == 2\n +  where 1 = len([{'amount': 10000.0, 'description': 'Canone Unico Patrimoniale - CORPORATE - TEST', 'events': [{'precStatus': None, 't...CREATED', 'timestamp': '2025-10-08T10:40:02.332', 'triggerEvent': 'ERROR_SEND_RTP'}], 'expiryDate': '2025-10-08', ...}])","statusTrace":"setup_data = {'debtor_fc': 'GVNLSS69B50X000R', 'iupd': 'c6f5f6a2b1794d61a', 'iuv': '76885142288613130', 'organization_id': '02438750586', ...}\n\n    @allure.feature('Debt Positions')\n    @allure.story('Update Valid Already Published Debt Position')\n    @pytest.mark.debt_positions\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.timeout(TEST_TIMEOUT_SEC)\n    def test_update_valid_already_published_debt_position(setup_data: dict[str, Any]) -> None:\n        \"\"\"\n        Verify that an already published debt position with VALID status\n        can be updated and changes are reflected in RTP lookups.\n        \"\"\"\n        allure.dynamic.title('Happy path: an already published debt position with VALID status is updated')\n    \n        update_data = _setup_update_test(setup_data, 'VALID')\n        access_token = _get_rtp_reader_access_token()\n        expected_status = 'SENT'\n    \n        while True:\n            response = get_rtp_by_notice_number(access_token, update_data.nav)\n    \n            if response.status_code != 200:\n                raise RuntimeError(\n                    f\"Error calling find_rtp_by_notice_number API. \"\n                    f\"Response {response.status_code}. Notice number: {update_data.nav}\"\n                )\n    \n            data = response.json()\n            assert isinstance(data, list), 'Invalid response body.'\n    \n            if len(data) == 0:\n                time.sleep(POLLING_RATE_SEC)\n                continue\n    \n>           assert len(data) == 2\nE           AssertionError: assert 1 == 2\nE            +  where 1 = len([{'amount': 10000.0, 'description': 'Canone Unico Patrimoniale - CORPORATE - TEST', 'events': [{'precStatus': None, 't...CREATED', 'timestamp': '2025-10-08T10:40:02.332', 'triggerEvent': 'ERROR_SEND_RTP'}], 'expiryDate': '2025-10-08', ...}])\n\nfunctional-tests/tests/test_debt_position_update.py:177: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759919573541,"stop":1759919573602,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_data","time":{"start":1759920000328,"stop":1759920001057,"duration":729},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Update Valid Already Published Debt Position"},{"name":"feature","value":"Debt Positions"},{"name":"tag","value":"timeout(300)"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"tag","value":"debt_positions"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debt_position_update"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2509-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debt_position_update"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":17,"broken":3,"skipped":0,"passed":11,"unknown":0,"total":31},"items":[{"uid":"1f12b3dc5978b67f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/558//#testresult/1f12b3dc5978b67f","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1759908325194,"stop":1759908325194,"duration":0}},{"uid":"8dd7a022b013a14","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/557//#testresult/8dd7a022b013a14","status":"passed","time":{"start":1759822094729,"stop":1759822107148,"duration":12419}},{"uid":"d109beaa6fda9227","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/556//#testresult/d109beaa6fda9227","status":"failed","statusDetails":"AssertionError: assert 403 == 201\n +  where 403 = <Response [403]>.status_code","time":{"start":1759735675850,"stop":1759735676476,"duration":626}},{"uid":"9b64b97180defd01","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/555//#testresult/9b64b97180defd01","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1759649647624,"stop":1759649946625,"duration":299001}},{"uid":"64686f517f23a15f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/554//#testresult/64686f517f23a15f","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1759563298327,"stop":1759563596837,"duration":298510}},{"uid":"98926a06443ccdf2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/553//#testresult/98926a06443ccdf2","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1759484500190,"stop":1759484798471,"duration":298281}},{"uid":"a164ed187190eba1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/552//#testresult/a164ed187190eba1","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1759476793906,"stop":1759476793906,"duration":0}},{"uid":"4e0e7bd65d55863f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/551//#testresult/4e0e7bd65d55863f","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1759390490508,"stop":1759390789469,"duration":298961}},{"uid":"de545b0fc4441c28","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/550//#testresult/de545b0fc4441c28","status":"passed","time":{"start":1759316173860,"stop":1759316185925,"duration":12065}},{"uid":"1878201f93918c17","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/549//#testresult/1878201f93918c17","status":"passed","time":{"start":1759303748254,"stop":1759303759855,"duration":11601}},{"uid":"78ec1710cd0f1c54","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/548//#testresult/78ec1710cd0f1c54","status":"passed","time":{"start":1759217330544,"stop":1759217342498,"duration":11954}},{"uid":"dd16528ada05a8b7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/547//#testresult/dd16528ada05a8b7","status":"failed","statusDetails":"AssertionError: assert 502 == 201\n +  where 502 = <Response [502]>.status_code","time":{"start":1759130887928,"stop":1759130888290,"duration":362}},{"uid":"2fd1299660dc09a4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/546//#testresult/2fd1299660dc09a4","status":"passed","time":{"start":1759044322613,"stop":1759044335152,"duration":12539}},{"uid":"d1f284f165285890","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/545//#testresult/d1f284f165285890","status":"passed","time":{"start":1758957697355,"stop":1758957709336,"duration":11981}},{"uid":"4665184770fb78ad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/544//#testresult/4665184770fb78ad","status":"passed","time":{"start":1758871974352,"stop":1758871986894,"duration":12542}},{"uid":"7dca9d8e63250418","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/543//#testresult/7dca9d8e63250418","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1758785834431,"stop":1758786133451,"duration":299020}},{"uid":"11e83257f0869b2a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/542//#testresult/11e83257f0869b2a","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1758699439743,"stop":1758699738319,"duration":298576}},{"uid":"67b0f3527a35531e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/541//#testresult/67b0f3527a35531e","status":"passed","time":{"start":1758612544959,"stop":1758612557399,"duration":12440}},{"uid":"9959e48f3d27cd87","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/540//#testresult/9959e48f3d27cd87","status":"passed","time":{"start":1758526212167,"stop":1758526224726,"duration":12559}},{"uid":"46cc2c159f447576","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/539//#testresult/46cc2c159f447576","status":"passed","time":{"start":1758439554635,"stop":1758439568051,"duration":13416}}]},"tags":["debt_positions","timeout(300)","send","happy_path"]},"source":"eb60bdd35875e99f.json","parameterValues":[]}