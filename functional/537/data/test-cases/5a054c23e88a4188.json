{"uid":"5a054c23e88a4188","name":"Unauthorized callback due to wrong certificate serial","fullName":"tests.test_callback#test_fail_send_rtp_callback_wrong_certificate_serial_DS_04b_compliant","historyId":"2cc2abb0fda2edeacf4f957d8bb07347","time":{"start":1758270991272,"stop":1758270992020,"duration":748},"status":"failed","statusMessage":"AssertionError: Expecting error from callback, expected 403 got 502\nassert 502 == 403\n +  where 502 = <Response [502]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('Unauthorized callback due to wrong certificate serial')\n    @pytest.mark.callback\n    @pytest.mark.unhappy_path\n    def test_fail_send_rtp_callback_wrong_certificate_serial_DS_04b_compliant():\n        callback_data = generate_callback_data_DS_04b_compliant(BIC='MOCKSP01')\n    \n        cert, key = pfx_to_pem(\n            secrets.debtor_service_provider_mock_PFX_base64,\n            secrets.debtor_service_provider_mock_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n    \n        callback_response = srtp_callback(\n            rtp_payload=callback_data, cert_path=cert, key_path=key\n        )\n>       assert (\n            callback_response.status_code == 403\n        ), f\"Expecting error from callback, expected 403 got {callback_response.status_code}\"\nE       AssertionError: Expecting error from callback, expected 403 got 502\nE       assert 502 == 403\nE        +  where 502 = <Response [502]>.status_code\n\nfunctional-tests/tests/test_callback.py:241: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758270979519,"stop":1758270979579,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2488-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":10,"skipped":0,"passed":218,"unknown":0,"total":231},"items":[{"uid":"5ca1739b2d4bed55","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/536//#testresult/5ca1739b2d4bed55","status":"passed","time":{"start":1758266459540,"stop":1758266460005,"duration":465}},{"uid":"58b3c8ea96d72c5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/535//#testresult/58b3c8ea96d72c5","status":"passed","time":{"start":1758180050092,"stop":1758180050706,"duration":614}},{"uid":"745f343b462edc20","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/534//#testresult/745f343b462edc20","status":"passed","time":{"start":1758093643845,"stop":1758093644304,"duration":459}},{"uid":"ab863cbbb5eb2c27","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/533//#testresult/ab863cbbb5eb2c27","status":"passed","time":{"start":1758007305633,"stop":1758007306143,"duration":510}},{"uid":"96616bebc74520b7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/532//#testresult/96616bebc74520b7","status":"passed","time":{"start":1757920933569,"stop":1757920934092,"duration":523}},{"uid":"10113d619ffd381f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/531//#testresult/10113d619ffd381f","status":"passed","time":{"start":1757834375103,"stop":1757834375731,"duration":628}},{"uid":"bf8e601dd760bdd4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/530//#testresult/bf8e601dd760bdd4","status":"passed","time":{"start":1757747920146,"stop":1757747920619,"duration":473}},{"uid":"3bc4270cdd3d267","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/529//#testresult/3bc4270cdd3d267","status":"passed","time":{"start":1757665832957,"stop":1757665833642,"duration":685}},{"uid":"1a950e8670c41a67","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/528//#testresult/1a950e8670c41a67","status":"passed","time":{"start":1757661621839,"stop":1757661622524,"duration":685}},{"uid":"9e93d4a92cb90857","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/527//#testresult/9e93d4a92cb90857","status":"passed","time":{"start":1757598322341,"stop":1757598322899,"duration":558}},{"uid":"3752031157adef41","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/526//#testresult/3752031157adef41","status":"passed","time":{"start":1757575269517,"stop":1757575270044,"duration":527}},{"uid":"7e4bb874ec57b83b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/525//#testresult/7e4bb874ec57b83b","status":"passed","time":{"start":1757489022899,"stop":1757489023443,"duration":544}},{"uid":"48cef303410f3acb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/524//#testresult/48cef303410f3acb","status":"passed","time":{"start":1757402500471,"stop":1757402501033,"duration":562}},{"uid":"5495bb3a72caacb6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/523//#testresult/5495bb3a72caacb6","status":"passed","time":{"start":1757316097585,"stop":1757316098097,"duration":512}},{"uid":"bf072e9d33e19761","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/522//#testresult/bf072e9d33e19761","status":"passed","time":{"start":1757229585972,"stop":1757229586474,"duration":502}},{"uid":"233385b923071be1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/521//#testresult/233385b923071be1","status":"passed","time":{"start":1757143120370,"stop":1757143121148,"duration":778}},{"uid":"8633c1758999258f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/520//#testresult/8633c1758999258f","status":"failed","statusDetails":"AssertionError: Expecting error from callback, expected 403 got 502\nassert 502 == 403\n +  where 502 = <Response [502]>.status_code","time":{"start":1757057091485,"stop":1757057092143,"duration":658}},{"uid":"e57462d672878694","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/519//#testresult/e57462d672878694","status":"passed","time":{"start":1756969626930,"stop":1756969627510,"duration":580}},{"uid":"8a8b20b6c7469aa2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/518//#testresult/8a8b20b6c7469aa2","status":"passed","time":{"start":1756910839629,"stop":1756910840407,"duration":778}},{"uid":"7d3383d8d69fe0b5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/517//#testresult/7d3383d8d69fe0b5","status":"passed","time":{"start":1756883248287,"stop":1756883248887,"duration":600}}]},"tags":["callback","unhappy_path"]},"source":"5a054c23e88a4188.json","parameterValues":[]}