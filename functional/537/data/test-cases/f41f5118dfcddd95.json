{"uid":"f41f5118dfcddd95","name":"Unauthorized callback due to wrong certificate serial","fullName":"tests.test_callback#test_fail_send_rtp_callback_wrong_certificate_serial_DS_08N_compliant","historyId":"dfa46c341096617c052b3d5ac3a2d656","time":{"start":1758270992026,"stop":1758270992619,"duration":593},"status":"failed","statusMessage":"AssertionError: Expecting error from callback, expected 403 got 502\nassert 502 == 403\n +  where 502 = <Response [502]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('Unauthorized callback due to wrong certificate serial')\n    @pytest.mark.callback\n    @pytest.mark.unhappy_path\n    def test_fail_send_rtp_callback_wrong_certificate_serial_DS_08N_compliant():\n        callback_data = generate_callback_data_DS_08N_compliant(BIC='MOCKSP01')\n    \n        cert, key = pfx_to_pem(\n            secrets.debtor_service_provider_mock_PFX_base64,\n            secrets.debtor_service_provider_mock_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n    \n        callback_response = srtp_callback(\n            rtp_payload=callback_data, cert_path=cert, key_path=key\n        )\n>       assert (\n            callback_response.status_code == 403\n        ), f\"Expecting error from callback, expected 403 got {callback_response.status_code}\"\nE       AssertionError: Expecting error from callback, expected 403 got 502\nE       assert 502 == 403\nE        +  where 502 = <Response [502]>.status_code\n\nfunctional-tests/tests/test_callback.py:264: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758270979519,"stop":1758270979579,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2488-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":57,"unknown":0,"total":59},"items":[{"uid":"7000749a74d885ce","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/536//#testresult/7000749a74d885ce","status":"passed","time":{"start":1758266460006,"stop":1758266460549,"duration":543}},{"uid":"763462b903a29e00","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/535//#testresult/763462b903a29e00","status":"passed","time":{"start":1758180050707,"stop":1758180051375,"duration":668}},{"uid":"9ede8e32183afa03","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/534//#testresult/9ede8e32183afa03","status":"passed","time":{"start":1758093644305,"stop":1758093644809,"duration":504}},{"uid":"18df9c3f68cdedb9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/533//#testresult/18df9c3f68cdedb9","status":"passed","time":{"start":1758007306144,"stop":1758007306699,"duration":555}},{"uid":"78c868f21cd2e2ce","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/532//#testresult/78c868f21cd2e2ce","status":"passed","time":{"start":1757920934093,"stop":1757920934557,"duration":464}},{"uid":"b0f1b5d34d8b2fdb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/531//#testresult/b0f1b5d34d8b2fdb","status":"passed","time":{"start":1757834375732,"stop":1757834376401,"duration":669}},{"uid":"a92a767f6dd78120","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/530//#testresult/a92a767f6dd78120","status":"passed","time":{"start":1757747920620,"stop":1757747921136,"duration":516}},{"uid":"1970848b33d9018b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/529//#testresult/1970848b33d9018b","status":"passed","time":{"start":1757665833644,"stop":1757665834329,"duration":685}},{"uid":"60b8de4db455a279","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/528//#testresult/60b8de4db455a279","status":"passed","time":{"start":1757661622525,"stop":1757661623480,"duration":955}},{"uid":"68bc53e53bf17cbc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/527//#testresult/68bc53e53bf17cbc","status":"passed","time":{"start":1757598322901,"stop":1757598323439,"duration":538}},{"uid":"a556968809dd9f9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/526//#testresult/a556968809dd9f9","status":"passed","time":{"start":1757575270045,"stop":1757575270579,"duration":534}},{"uid":"15e9e927458edb61","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/525//#testresult/15e9e927458edb61","status":"passed","time":{"start":1757489023444,"stop":1757489023988,"duration":544}},{"uid":"4a977e0f0512f34f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/524//#testresult/4a977e0f0512f34f","status":"passed","time":{"start":1757402501035,"stop":1757402501559,"duration":524}},{"uid":"ae7d7eca907326ad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/523//#testresult/ae7d7eca907326ad","status":"passed","time":{"start":1757316098098,"stop":1757316098559,"duration":461}},{"uid":"958844be5a5ba6c7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/522//#testresult/958844be5a5ba6c7","status":"passed","time":{"start":1757229586476,"stop":1757229586956,"duration":480}},{"uid":"1d398219aa10fdab","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/521//#testresult/1d398219aa10fdab","status":"passed","time":{"start":1757143121149,"stop":1757143121872,"duration":723}},{"uid":"73a52e845fd9fd60","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/520//#testresult/73a52e845fd9fd60","status":"failed","statusDetails":"AssertionError: Expecting error from callback, expected 403 got 502\nassert 502 == 403\n +  where 502 = <Response [502]>.status_code","time":{"start":1757057092149,"stop":1757057092978,"duration":829}},{"uid":"880b52fa45600611","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/519//#testresult/880b52fa45600611","status":"passed","time":{"start":1756969627511,"stop":1756969628003,"duration":492}},{"uid":"9ad9685cdfdbd2c1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/518//#testresult/9ad9685cdfdbd2c1","status":"passed","time":{"start":1756910840408,"stop":1756910841170,"duration":762}},{"uid":"6a4d71949761509d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/517//#testresult/6a4d71949761509d","status":"passed","time":{"start":1756883248888,"stop":1756883249439,"duration":551}}]},"tags":["callback","unhappy_path"]},"source":"f41f5118dfcddd95.json","parameterValues":[]}