{"uid":"b1ecc128184717bb","name":"Get a page of activations","fullName":"tests.test_activation#test_get_all_activations","historyId":"e8f95bed089a208721ec39e642cc49a5","time":{"start":1758270980304,"stop":1758270981006,"duration":702},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('Activation')\n    @allure.story('List Activations')\n    @allure.title('Get a page of activations')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.happy_path\n    def test_get_all_activations():\n>       access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n\nfunctional-tests/tests/test_activation.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758270979519,"stop":1758270979579,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Activation"},{"name":"story","value":"List Activations"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2488-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":72,"broken":2,"skipped":0,"passed":25,"unknown":0,"total":99},"items":[{"uid":"9cb717338532648d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/536//#testresult/9cb717338532648d","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1758266436646,"stop":1758266438032,"duration":1386}},{"uid":"1b54cd6c059911a1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/535//#testresult/1b54cd6c059911a1","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1758180016924,"stop":1758180019290,"duration":2366}},{"uid":"efc4c25bfa55925f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/534//#testresult/efc4c25bfa55925f","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758093621653,"stop":1758093623264,"duration":1611}},{"uid":"76ecded70d20b082","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/533//#testresult/76ecded70d20b082","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758007279651,"stop":1758007281439,"duration":1788}},{"uid":"9f19731b9b58c0e3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/532//#testresult/9f19731b9b58c0e3","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757920912094,"stop":1757920913729,"duration":1635}},{"uid":"e7363d72ece2c077","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/531//#testresult/e7363d72ece2c077","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757834343466,"stop":1757834346796,"duration":3330}},{"uid":"393591d832d5d1fd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/530//#testresult/393591d832d5d1fd","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757747897047,"stop":1757747898546,"duration":1499}},{"uid":"6755aa8b71867ece","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/529//#testresult/6755aa8b71867ece","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757665799968,"stop":1757665802051,"duration":2083}},{"uid":"3ba2ada08a561834","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/528//#testresult/3ba2ada08a561834","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757661592696,"stop":1757661594479,"duration":1783}},{"uid":"268f02cdce22efa1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/527//#testresult/268f02cdce22efa1","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757598301208,"stop":1757598302748,"duration":1540}},{"uid":"46c8a8bb78356d0c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/526//#testresult/46c8a8bb78356d0c","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757575247286,"stop":1757575248924,"duration":1638}},{"uid":"e42706d5383caa40","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/525//#testresult/e42706d5383caa40","status":"failed","statusDetails":"AssertionError: Expected 200 but got 503\nassert 503 == 200\n +  where 503 = <Response [503]>.status_code","time":{"start":1757488876863,"stop":1757488884152,"duration":7289}},{"uid":"5d210b0af7008676","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/524//#testresult/5d210b0af7008676","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757402477531,"stop":1757402479074,"duration":1543}},{"uid":"97c51c3a6bf33629","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/523//#testresult/97c51c3a6bf33629","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757316076576,"stop":1757316077794,"duration":1218}},{"uid":"a65b0e51643f81be","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/522//#testresult/a65b0e51643f81be","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757229561900,"stop":1757229563299,"duration":1399}},{"uid":"2a82268484f04d8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/521//#testresult/2a82268484f04d8","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757143089142,"stop":1757143091179,"duration":2037}},{"uid":"c3bcd116c04c2e24","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/520//#testresult/c3bcd116c04c2e24","status":"broken","statusDetails":"requests.exceptions.HTTPError: 504 Server Error: Gateway Time-out for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1757056898932,"stop":1757056959717,"duration":60785}},{"uid":"23ee774e8482ed9e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/519//#testresult/23ee774e8482ed9e","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756969601714,"stop":1756969603191,"duration":1477}},{"uid":"7f38e25672dffc79","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/518//#testresult/7f38e25672dffc79","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756910806827,"stop":1756910808851,"duration":2024}},{"uid":"6112ba43880dde8d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/517//#testresult/6112ba43880dde8d","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756883225582,"stop":1756883227335,"duration":1753}}]},"tags":["auth","activation","happy_path"]},"source":"b1ecc128184717bb.json","parameterValues":[]}