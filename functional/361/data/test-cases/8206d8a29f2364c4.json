{"uid":"8206d8a29f2364c4","name":"Cannot send RTP with expired date","fullName":"tests.test_debtor_service_provider_availability#test_send_rtp_to_cbi_expired_date","historyId":"6908d8a096f06149222842bbb65d22a3","time":{"start":1749280022675,"stop":1749280023540,"duration":865},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with expired date')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_expired_date():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['expiryDate'] = '2020-01-01'\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id, secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(\n            secrets.CBI_client_PFX_base64,\n            secrets.CBI_client_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider_availability.py:107: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749279974096,"stop":1749279974156,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider_availability"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2483-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":9,"unknown":0,"total":12},"items":[{"uid":"e840ec1f89bbdf43","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/e840ec1f89bbdf43","status":"passed","time":{"start":1749193630248,"stop":1749193631425,"duration":1177}},{"uid":"bcfb864b41b3e48c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/359//#testresult/bcfb864b41b3e48c","status":"passed","time":{"start":1749107262146,"stop":1749107264090,"duration":1944}},{"uid":"24d5b0603ac82cd2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/358//#testresult/24d5b0603ac82cd2","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1749020841034,"stop":1749020842053,"duration":1019}},{"uid":"71a5135d2a8fa977","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/357//#testresult/71a5135d2a8fa977","status":"passed","time":{"start":1748956575834,"stop":1748956577072,"duration":1238}},{"uid":"ebda3d14940af7d3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/356//#testresult/ebda3d14940af7d3","status":"passed","time":{"start":1748953141124,"stop":1748953141971,"duration":847}},{"uid":"ae64d2db0078a5c7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/355//#testresult/ae64d2db0078a5c7","status":"passed","time":{"start":1748934484584,"stop":1748934485676,"duration":1092}},{"uid":"1ae777221a51a001","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/354//#testresult/1ae777221a51a001","status":"passed","time":{"start":1748848082076,"stop":1748848083039,"duration":963}},{"uid":"3488e5aac3d84d46","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/353//#testresult/3488e5aac3d84d46","status":"passed","time":{"start":1748761643027,"stop":1748761644519,"duration":1492}},{"uid":"41308921c68e82d4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/352//#testresult/41308921c68e82d4","status":"passed","time":{"start":1748675228372,"stop":1748675229647,"duration":1275}},{"uid":"b0c4732a4935827f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/351//#testresult/b0c4732a4935827f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1748588847539,"stop":1748588849355,"duration":1816}},{"uid":"95e8c3c0a35d6c88","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/350//#testresult/95e8c3c0a35d6c88","status":"passed","time":{"start":1748534041119,"stop":1748534042364,"duration":1245}}]},"tags":["cbi","unhappy_path","send"]},"source":"8206d8a29f2364c4.json","parameterValues":[]}