{"uid":"fe6b4997449c9b5e","name":"An RTP is sent through API","fullName":"tests.test_send_rtp#test_send_rtp_api","historyId":"6c14d2fbb180e49a106680915fe95577","time":{"start":1749482230210,"stop":1749482230990,"duration":780},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('An RTP is sent through API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    def test_send_rtp_api():\n        rtp_data = generate_rtp_data()\n    \n>       debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token)\n\nfunctional-tests/tests/test_send_rtp.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749482217347,"stop":1749482217403,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2494-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":39,"broken":2,"skipped":0,"passed":149,"unknown":0,"total":190},"items":[{"uid":"3e55cd96894381cd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/3e55cd96894381cd","status":"passed","time":{"start":1749453032447,"stop":1749453034868,"duration":2421}},{"uid":"997ee1e0cda7ea79","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/362//#testresult/997ee1e0cda7ea79","status":"passed","time":{"start":1749366585307,"stop":1749366588870,"duration":3563}},{"uid":"1f82d9ee4562c3c2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/361//#testresult/1f82d9ee4562c3c2","status":"passed","time":{"start":1749280159782,"stop":1749280162174,"duration":2392}},{"uid":"f256d16579af7ccb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/f256d16579af7ccb","status":"passed","time":{"start":1749193769539,"stop":1749193771641,"duration":2102}},{"uid":"f3ba1ef7f732e259","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/359//#testresult/f3ba1ef7f732e259","status":"passed","time":{"start":1749107402672,"stop":1749107405854,"duration":3182}},{"uid":"7d7423b2b3ea5f14","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/358//#testresult/7d7423b2b3ea5f14","status":"passed","time":{"start":1749020980512,"stop":1749020982834,"duration":2322}},{"uid":"da2711775b474fda","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/357//#testresult/da2711775b474fda","status":"passed","time":{"start":1748956713641,"stop":1748956715680,"duration":2039}},{"uid":"830f5e736bc943fc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/356//#testresult/830f5e736bc943fc","status":"passed","time":{"start":1748953280481,"stop":1748953282205,"duration":1724}},{"uid":"e5d8e31a33f62c42","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/355//#testresult/e5d8e31a33f62c42","status":"passed","time":{"start":1748934621237,"stop":1748934623431,"duration":2194}},{"uid":"ce92ab2391f0ef71","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/354//#testresult/ce92ab2391f0ef71","status":"passed","time":{"start":1748848221513,"stop":1748848223566,"duration":2053}},{"uid":"8de8f3b5f12ed2d8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/353//#testresult/8de8f3b5f12ed2d8","status":"passed","time":{"start":1748761784001,"stop":1748761787140,"duration":3139}},{"uid":"74ba74308a03623d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/352//#testresult/74ba74308a03623d","status":"passed","time":{"start":1748675367094,"stop":1748675369474,"duration":2380}},{"uid":"de97aff76fa5b3ee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/351//#testresult/de97aff76fa5b3ee","status":"passed","time":{"start":1748588989544,"stop":1748588992666,"duration":3122}},{"uid":"4f52ad95cdacc8d4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/350//#testresult/4f52ad95cdacc8d4","status":"passed","time":{"start":1748534180608,"stop":1748534183151,"duration":2543}},{"uid":"204371005bc2ad04","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/349//#testresult/204371005bc2ad04","status":"passed","time":{"start":1748502477907,"stop":1748502480577,"duration":2670}},{"uid":"9983f0961bf5be84","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/348//#testresult/9983f0961bf5be84","status":"passed","time":{"start":1748449669693,"stop":1748449671900,"duration":2207}},{"uid":"e0b3096d2b9a37b7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/347//#testresult/e0b3096d2b9a37b7","status":"passed","time":{"start":1748442457524,"stop":1748442459029,"duration":1505}},{"uid":"b80ad02b6752843b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/346//#testresult/b80ad02b6752843b","status":"passed","time":{"start":1748441513048,"stop":1748441514460,"duration":1412}},{"uid":"74c85e8ddde5c483","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/345//#testresult/74c85e8ddde5c483","status":"passed","time":{"start":1748436786416,"stop":1748436787929,"duration":1513}},{"uid":"f498db3dbf173cf5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/344//#testresult/f498db3dbf173cf5","status":"broken","statusDetails":"AttributeError: 'dict' object has no attribute 'debtor_service_provider'","time":{"start":1748417984216,"stop":1748417984217,"duration":1}}]},"tags":["send","happy_path"]},"source":"fe6b4997449c9b5e.json","parameterValues":[]}