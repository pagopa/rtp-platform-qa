{"uid":"5ba2f8f317655a6f","name":"An RTP callback is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback_DS_04b_compliant","historyId":"475e3c0708b05c2b7bfae9db8dc283af","time":{"start":1749482223356,"stop":1749482223356,"duration":0},"status":"broken","statusMessage":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('An RTP callback is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback_DS_04b_compliant():\n        callback_data = generate_callback_data_DS_04b_compliant()\n    \n>       cert, key = pfx_to_pem(secrets.debtor_service_provider_mock_PFX_base64,\n                               secrets.debtor_service_provider_mock_PFX_password_base64,\n                               config.cert_path,\n                               config.key_path)\n\nfunctional-tests/tests/test_callback.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/cryptography.py:20: in pfx_to_pem\n    pfx_data = base64.b64decode(base64_pfx)\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/base64.py:83: in b64decode\n    s = _bytes_from_decode_data(s)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = None\n\n    def _bytes_from_decode_data(s):\n        if isinstance(s, str):\n            try:\n                return s.encode('ascii')\n            except UnicodeEncodeError:\n                raise ValueError('string argument should contain only ASCII characters')\n        if isinstance(s, bytes_types):\n            return s\n        try:\n            return memoryview(s).tobytes()\n        except TypeError:\n>           raise TypeError(\"argument should be a bytes-like object or ASCII \"\n                            \"string, not %r\" % s.__class__.__name__) from None\nE           TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/base64.py:45: TypeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749482217347,"stop":1749482217403,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Callback"},{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2494-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":2,"skipped":0,"passed":50,"unknown":0,"total":67},"items":[{"uid":"3f3a539aeda09c41","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/3f3a539aeda09c41","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749452878633,"stop":1749452880317,"duration":1684}},{"uid":"a1673622c6aeffde","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/362//#testresult/a1673622c6aeffde","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749366421421,"stop":1749366423776,"duration":2355}},{"uid":"53cf76b7ab86fcfa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/361//#testresult/53cf76b7ab86fcfa","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749280008781,"stop":1749280009300,"duration":519}},{"uid":"a2007737f877da57","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/a2007737f877da57","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749193617849,"stop":1749193618370,"duration":521}},{"uid":"20e5de553d68d641","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/359//#testresult/20e5de553d68d641","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749107241987,"stop":1749107243046,"duration":1059}},{"uid":"317dcc0a8f5bbc6b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/358//#testresult/317dcc0a8f5bbc6b","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749020827514,"stop":1749020828069,"duration":555}},{"uid":"729dcd15595be28e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/357//#testresult/729dcd15595be28e","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748956563392,"stop":1748956563803,"duration":411}},{"uid":"4c572c7faf027ad4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/356//#testresult/4c572c7faf027ad4","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748953129189,"stop":1748953129687,"duration":498}},{"uid":"44f5489dc73f8013","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/355//#testresult/44f5489dc73f8013","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748934470114,"stop":1748934472578,"duration":2464}},{"uid":"18e5afe851c92906","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/354//#testresult/18e5afe851c92906","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748848067686,"stop":1748848069943,"duration":2257}},{"uid":"6018c6b682562de6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/353//#testresult/6018c6b682562de6","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748761621156,"stop":1748761623851,"duration":2695}},{"uid":"5d49afd8ecb858ad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/352//#testresult/5d49afd8ecb858ad","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748675215311,"stop":1748675215898,"duration":587}},{"uid":"53d9d485dcb4b881","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/351//#testresult/53d9d485dcb4b881","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748588827402,"stop":1748588828303,"duration":901}},{"uid":"7088ac15e68b8e5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/350//#testresult/7088ac15e68b8e5","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748534028006,"stop":1748534028622,"duration":616}},{"uid":"732b2f29e7424f8d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/349//#testresult/732b2f29e7424f8d","status":"passed","time":{"start":1748502447591,"stop":1748502452909,"duration":5318}},{"uid":"5f3c40e74620d713","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/348//#testresult/5f3c40e74620d713","status":"passed","time":{"start":1748449647589,"stop":1748449648193,"duration":604}},{"uid":"634efc2fba39ce45","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/347//#testresult/634efc2fba39ce45","status":"passed","time":{"start":1748442441863,"stop":1748442442536,"duration":673}},{"uid":"fce1b989e6a24015","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/346//#testresult/fce1b989e6a24015","status":"passed","time":{"start":1748441496059,"stop":1748441496567,"duration":508}},{"uid":"c86a8f8394c7616a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/345//#testresult/c86a8f8394c7616a","status":"passed","time":{"start":1748436773761,"stop":1748436774540,"duration":779}},{"uid":"2356dfd620042f6e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/344//#testresult/2356dfd620042f6e","status":"broken","statusDetails":"AttributeError: 'dict' object has no attribute 'debtor_service_provider_mock_PFX_base64'","time":{"start":1748417982639,"stop":1748417982639,"duration":0}}]},"tags":["callback","happy_path"]},"source":"5ba2f8f317655a6f.json","parameterValues":[]}