{"uid":"95f6f777b2620e16","name":"A debtor cannot be activated more than once","fullName":"tests.test_activation#test_fail_activate_debtor_two_times","historyId":"8704b37d564cbbe926da79ebe6202dbe","time":{"start":1748588822851,"stop":1748588825051,"duration":2200},"status":"failed","statusMessage":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","statusTrace":"@allure.feature('Activation')\n    @allure.story('Debtor activation')\n    @allure.title('A debtor cannot be activated more than once')\n    @pytest.mark.activation\n    @pytest.mark.unhappy_path\n    def test_fail_activate_debtor_two_times():\n        access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                              client_secret=secrets.debtor_service_provider.client_secret,\n                                              access_token_function=get_access_token)\n        debtor_fc = fake_fc()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, f'Error activating debtor, expected 201 but got {res.status_code}'\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 409, f'Error activating debtor, expected 409 but got {res.status_code}'\n>       assert res.json()['errors'][0]['code'] == '01031000F'\nE       AssertionError: assert '01031000E' == '01031000F'\nE         \nE         - 01031000F\nE         ?         ^\nE         + 01031000E\nE         ?         ^\n\nfunctional-tests/tests/test_activation.py:115: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748588815232,"stop":1748588815293,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Activation"},{"name":"story","value":"Debtor activation"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"activation"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2593-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":45,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":46},"items":[{"uid":"37f910955a04b04c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/350//#testresult/37f910955a04b04c","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748534025297,"stop":1748534026563,"duration":1266}},{"uid":"480799fe8aec5030","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/349//#testresult/480799fe8aec5030","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748502443136,"stop":1748502445315,"duration":2179}},{"uid":"97fb7ddce17af9da","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/348//#testresult/97fb7ddce17af9da","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748449643628,"stop":1748449645251,"duration":1623}},{"uid":"9cad45d34024ceb5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/347//#testresult/9cad45d34024ceb5","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748442439224,"stop":1748442440466,"duration":1242}},{"uid":"b192af101902cd9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/346//#testresult/b192af101902cd9","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748441493163,"stop":1748441494315,"duration":1152}},{"uid":"431a0cfcadf4e88d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/345//#testresult/431a0cfcadf4e88d","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748436770641,"stop":1748436771966,"duration":1325}},{"uid":"cf8c14a8a52d79","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/344//#testresult/cf8c14a8a52d79","status":"broken","statusDetails":"AttributeError: 'dict' object has no attribute 'debtor_service_provider'","time":{"start":1748417982620,"stop":1748417982620,"duration":0}},{"uid":"e4a1127761add052","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/343//#testresult/e4a1127761add052","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748416022338,"stop":1748416023760,"duration":1422}},{"uid":"3176919b1b44f6ce","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/342//#testresult/3176919b1b44f6ce","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748329635181,"stop":1748329637382,"duration":2201}},{"uid":"5b37fe6358dfb7f3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/341//#testresult/5b37fe6358dfb7f3","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748264260354,"stop":1748264261649,"duration":1295}},{"uid":"e18b0c9b9200bcc0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/340//#testresult/e18b0c9b9200bcc0","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748243381655,"stop":1748243383062,"duration":1407}},{"uid":"10c921b053753b8c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/339//#testresult/10c921b053753b8c","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748156829085,"stop":1748156830795,"duration":1710}},{"uid":"3d8b105bebbd8f1a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/338//#testresult/3d8b105bebbd8f1a","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748070402782,"stop":1748070404198,"duration":1416}},{"uid":"b7f5a303279b67b2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/337//#testresult/b7f5a303279b67b2","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747984028154,"stop":1747984029216,"duration":1062}},{"uid":"db0f22ea597f17ef","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/336//#testresult/db0f22ea597f17ef","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747897629137,"stop":1747897630748,"duration":1611}},{"uid":"152e33cf17db4d28","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/335//#testresult/152e33cf17db4d28","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747840412810,"stop":1747840414252,"duration":1442}},{"uid":"d28828d21d51046b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/334//#testresult/d28828d21d51046b","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747811220069,"stop":1747811221238,"duration":1169}},{"uid":"c9c0deb28428c26f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/333//#testresult/c9c0deb28428c26f","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747724831743,"stop":1747724832998,"duration":1255}},{"uid":"6753dc714b1d6eb0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/332//#testresult/6753dc714b1d6eb0","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747661441263,"stop":1747661442840,"duration":1577}},{"uid":"7a7f065efce0d9c7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/331//#testresult/7a7f065efce0d9c7","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747638461964,"stop":1747638463545,"duration":1581}}]},"tags":["activation","unhappy_path"]},"source":"95f6f777b2620e16.json","parameterValues":[]}