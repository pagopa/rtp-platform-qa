{"uid":"a4618e34d5424535","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1756624059154,"stop":1756624061911,"duration":2757},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1756623973660,"stop":1756623973717,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmccyg1gnepe"},{"name":"thread","value":"2583-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":95,"broken":27,"skipped":0,"passed":32,"unknown":0,"total":154},"items":[{"uid":"2f4854fbc302b932","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/511//#testresult/2f4854fbc302b932","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756537650606,"stop":1756537654162,"duration":3556}},{"uid":"49eed72b90987884","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/510//#testresult/49eed72b90987884","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756451307403,"stop":1756451310378,"duration":2975}},{"uid":"4cbd62f6d8122432","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/509//#testresult/4cbd62f6d8122432","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756385971779,"stop":1756385975447,"duration":3668}},{"uid":"a44f3dcb649fdd99","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/508//#testresult/a44f3dcb649fdd99","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756364940015,"stop":1756364943953,"duration":3938}},{"uid":"76c7ae6b06c0f78f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/507//#testresult/76c7ae6b06c0f78f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756278527045,"stop":1756278530609,"duration":3564}},{"uid":"d6b80ef7f8bd2680","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/506//#testresult/d6b80ef7f8bd2680","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756192117607,"stop":1756192120673,"duration":3066}},{"uid":"2211e737fb2a9fb2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/505//#testresult/2211e737fb2a9fb2","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756105763650,"stop":1756105766811,"duration":3161}},{"uid":"7f0bb3da85ec88f9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/504//#testresult/7f0bb3da85ec88f9","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756019251553,"stop":1756019254627,"duration":3074}},{"uid":"8dfdda1314251418","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/503//#testresult/8dfdda1314251418","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755932844296,"stop":1755932847282,"duration":2986}},{"uid":"f88c8f41e491dafa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/502//#testresult/f88c8f41e491dafa","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755847718406,"stop":1755847721679,"duration":3273}},{"uid":"670249f712e1cfdc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/501//#testresult/670249f712e1cfdc","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755846500368,"stop":1755846503678,"duration":3310}},{"uid":"3a2e00303c93dba1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/500//#testresult/3a2e00303c93dba1","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755843966847,"stop":1755843970459,"duration":3612}},{"uid":"462fa648ba2db83e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/499//#testresult/462fa648ba2db83e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755760233455,"stop":1755760237610,"duration":4155}},{"uid":"a2242fc6b267fc95","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/498//#testresult/a2242fc6b267fc95","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755673756823,"stop":1755673760097,"duration":3274}},{"uid":"2281c4d3670b4ba7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/497//#testresult/2281c4d3670b4ba7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755613353321,"stop":1755613356048,"duration":2727}},{"uid":"439693fea08baee8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/496//#testresult/439693fea08baee8","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755588533579,"stop":1755588536879,"duration":3300}},{"uid":"2364a5b1bbe9b10","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/495//#testresult/2364a5b1bbe9b10","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755587323851,"stop":1755587327061,"duration":3210}},{"uid":"314cf2b2508ca967","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/494//#testresult/314cf2b2508ca967","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755501070318,"stop":1755501074272,"duration":3954}},{"uid":"bf19614f616c5403","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/493//#testresult/bf19614f616c5403","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755414460974,"stop":1755414464285,"duration":3311}},{"uid":"d955bdafd4ff16bc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/492//#testresult/d955bdafd4ff16bc","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755328052662,"stop":1755328055790,"duration":3128}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"a4618e34d5424535.json","parameterValues":[]}