{"uid":"c611aebe101b0f75","name":"The service returns the mocked server error","fullName":"tests.test_mock#test_mock_reachability","historyId":"f2c03b008760b160f2e7c20a3e1161d9","time":{"start":1742886429833,"stop":1742886430425,"duration":592},"status":"failed","statusMessage":"AssertionError: assert 200 == 201\n +  where 200 = <Response [200]>.status_code","statusTrace":"@allure.feature('RTP Service Provider Mock')\n    @allure.story('Send an RTP to mocked Service Provider')\n    @allure.title('The service returns the mocked server error')\n    @pytest.mark.mock\n    @pytest.mark.happy_path\n    def test_mock_reachability():\n        rtp_data = generate_rtp_data()\n        response = send_rtp_to_mock(rtp_payload=rtp_data)\n>       assert response.status_code == 201\nE       assert 200 == 201\nE        +  where 200 = <Response [200]>.status_code\n\nfunctional-tests/tests/test_mock.py:16: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1742886407563,"stop":1742886407622,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Send an RTP to mocked Service Provider"},{"name":"feature","value":"RTP Service Provider Mock"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"mock"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_mock"},{"name":"host","value":"fv-az2236-384"},{"name":"thread","value":"2299-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_mock"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"72efade0c023541a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/254//#testresult/72efade0c023541a","status":"failed","statusDetails":"AssertionError: assert 200 == 201\n +  where 200 = <Response [200]>.status_code","time":{"start":1742800030435,"stop":1742800031043,"duration":608}},{"uid":"61da5ab1cd2fca1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/253//#testresult/61da5ab1cd2fca1","status":"failed","statusDetails":"AssertionError: assert 200 == 201\n +  where 200 = <Response [200]>.status_code","time":{"start":1742713602221,"stop":1742713602881,"duration":660}},{"uid":"2622211e0b6d6116","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/252//#testresult/2622211e0b6d6116","status":"failed","statusDetails":"AssertionError: assert 200 == 201\n +  where 200 = <Response [200]>.status_code","time":{"start":1742627184817,"stop":1742627185180,"duration":363}},{"uid":"4aa4dec3e252fa9f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/251//#testresult/4aa4dec3e252fa9f","status":"failed","statusDetails":"AssertionError: assert 200 == 201\n +  where 200 = <Response [200]>.status_code","time":{"start":1742576852621,"stop":1742576852960,"duration":339}}]},"tags":["mock","happy_path"]},"source":"c611aebe101b0f75.json","parameterValues":[]}