{"uid":"33797bd7409244cb","name":"Failed callback for non existing Service Provider - DS-04b compliant","fullName":"tests.test_callback#test_fail_send_rtp_callback_non_existing_service_provider_DS_04b_compliant","historyId":"0976199b3442c36a3644cccfb991668c","time":{"start":1759920835854,"stop":1759920836274,"duration":420},"status":"failed","statusMessage":"AssertionError: Expecting error from callback, expected 400 got 500\nassert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('Failed callback for non existing Service Provider - DS-04b compliant')\n    @pytest.mark.callback\n    @pytest.mark.unhappy_path\n    def test_fail_send_rtp_callback_non_existing_service_provider_DS_04b_compliant():\n        callback_data = generate_callback_data_DS_04b_compliant(BIC='MOCKSP99')\n    \n        cert, key = pfx_to_pem(\n            secrets.debtor_service_provider_mock_PFX_base64,\n            secrets.debtor_service_provider_mock_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n    \n        callback_response = srtp_callback(\n            rtp_payload=callback_data, cert_path=cert, key_path=key\n        )\n>       assert (\n            callback_response.status_code == 400\n        ), f\"Expecting error from callback, expected 400 got {callback_response.status_code}\"\nE       AssertionError: Expecting error from callback, expected 400 got 500\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_callback.py:287: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759920815183,"stop":1759920815241,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2485-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":10,"skipped":0,"passed":239,"unknown":0,"total":254},"items":[{"uid":"12476d7fdc5f6eab","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/559//#testresult/12476d7fdc5f6eab","status":"failed","statusDetails":"AssertionError: Expecting error from callback, expected 400 got 500\nassert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1759919595557,"stop":1759919596088,"duration":531}},{"uid":"61d1affcd02e79f5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/558//#testresult/61d1affcd02e79f5","status":"failed","statusDetails":"AssertionError: Expecting error from callback, expected 400 got 500\nassert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1759908053997,"stop":1759908054594,"duration":597}},{"uid":"937c776f9640c650","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/557//#testresult/937c776f9640c650","status":"passed","time":{"start":1759821688548,"stop":1759821689142,"duration":594}},{"uid":"ec56911c4fbcc1a2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/556//#testresult/ec56911c4fbcc1a2","status":"passed","time":{"start":1759735340434,"stop":1759735341168,"duration":734}},{"uid":"7705cc5945c9a501","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/555//#testresult/7705cc5945c9a501","status":"passed","time":{"start":1759648717240,"stop":1759648717712,"duration":472}},{"uid":"4700c9a311e52dce","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/554//#testresult/4700c9a311e52dce","status":"passed","time":{"start":1759562358278,"stop":1759562359013,"duration":735}},{"uid":"4bca1ea10d423004","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/553//#testresult/4bca1ea10d423004","status":"passed","time":{"start":1759483559716,"stop":1759483560440,"duration":724}},{"uid":"52315975357d51b7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/552//#testresult/52315975357d51b7","status":"passed","time":{"start":1759476037558,"stop":1759476038262,"duration":704}},{"uid":"eb52972613dd9f07","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/551//#testresult/eb52972613dd9f07","status":"passed","time":{"start":1759389612445,"stop":1759389612940,"duration":495}},{"uid":"4e2add14e38bf653","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/550//#testresult/4e2add14e38bf653","status":"passed","time":{"start":1759315766588,"stop":1759315767123,"duration":535}},{"uid":"493b288950a460b9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/549//#testresult/493b288950a460b9","status":"passed","time":{"start":1759303342426,"stop":1759303342933,"duration":507}},{"uid":"9d9896e858ea23ad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/548//#testresult/9d9896e858ea23ad","status":"passed","time":{"start":1759216950394,"stop":1759216950982,"duration":588}},{"uid":"2dd06be08b11b651","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/547//#testresult/2dd06be08b11b651","status":"passed","time":{"start":1759130563676,"stop":1759130564149,"duration":473}},{"uid":"173cb3546c0d8652","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/546//#testresult/173cb3546c0d8652","status":"passed","time":{"start":1759043966078,"stop":1759043966851,"duration":773}},{"uid":"7a801e9f6ad45f6b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/545//#testresult/7a801e9f6ad45f6b","status":"passed","time":{"start":1758957530873,"stop":1758957531432,"duration":559}},{"uid":"108688a09d902d07","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/544//#testresult/108688a09d902d07","status":"passed","time":{"start":1758871288606,"stop":1758871289340,"duration":734}},{"uid":"9ca7d6188c1f68f2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/543//#testresult/9ca7d6188c1f68f2","status":"passed","time":{"start":1758784902865,"stop":1758784903350,"duration":485}},{"uid":"9337db4559af06ab","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/542//#testresult/9337db4559af06ab","status":"passed","time":{"start":1758698502177,"stop":1758698502890,"duration":713}},{"uid":"8142fa32fcb54397","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/541//#testresult/8142fa32fcb54397","status":"passed","time":{"start":1758612128868,"stop":1758612129599,"duration":731}},{"uid":"2113f2b2a1627305","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/540//#testresult/2113f2b2a1627305","status":"passed","time":{"start":1758525792363,"stop":1758525793122,"duration":759}}]},"tags":["callback","unhappy_path"]},"source":"33797bd7409244cb.json","parameterValues":[]}