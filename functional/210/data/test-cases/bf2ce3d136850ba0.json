{"uid":"bf2ce3d136850ba0","name":"The activation request bust contain lower case fiscal code","fullName":"tests.test_activation#test_cannot_activate_debtor_lower_fiscal_code","historyId":"971059c719c6f6b5223e6fd267753e9e","time":{"start":1740207933574,"stop":1740207935320,"duration":1746},"status":"failed","statusMessage":"AssertionError: assert 401 == 400\n +  where 401 = <Response [401]>.status_code","statusTrace":"@allure.feature('Activation')\n    @allure.story('Debtor activation')\n    @allure.title('The activation request bust contain lower case fiscal code')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.unhappy_path\n    def test_cannot_activate_debtor_lower_fiscal_code():\n        access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                              client_secret=secrets.debtor_service_provider.client_secret)\n        debtor_fc = fake_fc().lower()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n>       assert res.status_code == 400\nE       assert 401 == 400\nE        +  where 401 = <Response [401]>.status_code\n\nfunctional-tests/tests/test_activation.py:59: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1740207924693,"stop":1740207924748,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Activation"},{"name":"story","value":"Debtor activation"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"fv-az1909-441"},{"name":"thread","value":"2312-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":30,"unknown":0,"total":42},"items":[{"uid":"b1ca9edea6075672","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/209//#testresult/b1ca9edea6075672","status":"failed","statusDetails":"AssertionError: assert 'Pattern.acti...er.fiscalCode' == 'Pattern'\n  \n  - Pattern\n  + Pattern.activationReqDtoMono.payer.fiscalCode","time":{"start":1740144044800,"stop":1740144046590,"duration":1790}},{"uid":"4545273f1e2839b6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/208//#testresult/4545273f1e2839b6","status":"failed","statusDetails":"AssertionError: assert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1740121603033,"stop":1740121604866,"duration":1833}},{"uid":"ba5368f36a733fa8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/207//#testresult/ba5368f36a733fa8","status":"failed","statusDetails":"AssertionError: assert 'Pattern.acti...er.fiscalCode' == 'Pattern'\n  \n  - Pattern\n  + Pattern.activationReqDtoMono.payer.fiscalCode","time":{"start":1740039470040,"stop":1740039471739,"duration":1699}},{"uid":"67bdfa71062f5da6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/206//#testresult/67bdfa71062f5da6","status":"failed","statusDetails":"AssertionError: assert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1740035188365,"stop":1740035191414,"duration":3049}},{"uid":"c261b7cf3fe144e2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/205//#testresult/c261b7cf3fe144e2","status":"failed","statusDetails":"AssertionError: assert 'Pattern.acti...er.fiscalCode' == 'Pattern'\n  \n  - Pattern\n  + Pattern.activationReqDtoMono.payer.fiscalCode","time":{"start":1739977923905,"stop":1739977925605,"duration":1700}},{"uid":"70434ca0e57006a0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/204//#testresult/70434ca0e57006a0","status":"failed","statusDetails":"AssertionError: assert 'Pattern.acti...er.fiscalCode' == 'Pattern'\n  \n  - Pattern\n  + Pattern.activationReqDtoMono.payer.fiscalCode","time":{"start":1739948768039,"stop":1739948769698,"duration":1659}},{"uid":"349d1df47608a950","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/203//#testresult/349d1df47608a950","status":"failed","statusDetails":"AssertionError: assert 'Pattern.acti...er.fiscalCode' == 'Pattern'\n  \n  - Pattern\n  + Pattern.activationReqDtoMono.payer.fiscalCode","time":{"start":1739909364163,"stop":1739909366027,"duration":1864}},{"uid":"9747ed53b44b747f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/202//#testresult/9747ed53b44b747f","status":"failed","statusDetails":"AssertionError: assert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1739862378816,"stop":1739862381427,"duration":2611}},{"uid":"c5be828148de6137","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/201//#testresult/c5be828148de6137","status":"failed","statusDetails":"AssertionError: assert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1739776001754,"stop":1739776003948,"duration":2194}},{"uid":"b5b6383a8fad9538","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/200//#testresult/b5b6383a8fad9538","status":"failed","statusDetails":"AssertionError: assert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1739689529095,"stop":1739689530758,"duration":1663}},{"uid":"9b3edd495c333e3f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/199//#testresult/9b3edd495c333e3f","status":"failed","statusDetails":"AssertionError: assert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1739603133705,"stop":1739603135613,"duration":1908}},{"uid":"27179991a163decd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/198//#testresult/27179991a163decd","status":"passed","time":{"start":1739516763004,"stop":1739516765064,"duration":2060}},{"uid":"b70c537810de3908","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/197//#testresult/b70c537810de3908","status":"passed","time":{"start":1739430405185,"stop":1739430406581,"duration":1396}},{"uid":"7258e7900cc26c9b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/196//#testresult/7258e7900cc26c9b","status":"passed","time":{"start":1739343971290,"stop":1739343972697,"duration":1407}},{"uid":"1eec4fce7c7e16e7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/195//#testresult/1eec4fce7c7e16e7","status":"passed","time":{"start":1739257575489,"stop":1739257577210,"duration":1721}},{"uid":"996b876efd0fc06","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/194//#testresult/996b876efd0fc06","status":"passed","time":{"start":1739171222995,"stop":1739171224202,"duration":1207}},{"uid":"ec9210a7d9eaaa5f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/193//#testresult/ec9210a7d9eaaa5f","status":"passed","time":{"start":1739084762186,"stop":1739084763435,"duration":1249}},{"uid":"5c04154b4b9ae3a4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/192//#testresult/5c04154b4b9ae3a4","status":"passed","time":{"start":1738998368586,"stop":1738998370118,"duration":1532}},{"uid":"8f3a37f817c1716f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/191//#testresult/8f3a37f817c1716f","status":"passed","time":{"start":1738911996873,"stop":1738911998323,"duration":1450}},{"uid":"80e7e006e2c642a5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/190//#testresult/80e7e006e2c642a5","status":"passed","time":{"start":1738829709089,"stop":1738829710481,"duration":1392}}]},"tags":["auth","activation","unhappy_path"]},"source":"bf2ce3d136850ba0.json","parameterValues":[]}