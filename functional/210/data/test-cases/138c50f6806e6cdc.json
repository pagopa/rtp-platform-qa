{"uid":"138c50f6806e6cdc","name":"An RTP is sent through API","fullName":"tests.test_send_rtp#test_send_rtp_api","historyId":"6c14d2fbb180e49a106680915fe95577","time":{"start":1740207940795,"stop":1740207943822,"duration":3027},"status":"failed","statusMessage":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('An RTP is sent through API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    def test_send_rtp_api():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                                                      client_secret=secrets.debtor_service_provider.client_secret)\n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret)\n    \n        activation_response = activate(debtor_service_provider_access_token, rtp_data['payer']['payerId'],\n                       secrets.debtor_service_provider.service_provider_id)\n>       assert activation_response.status_code == 201, 'Error activating debtor'\nE       AssertionError: Error activating debtor\nE       assert 401 == 201\nE        +  where 401 = <Response [401]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:29: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1740207924693,"stop":1740207924748,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"fv-az1909-441"},{"name":"thread","value":"2312-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":36,"unknown":0,"total":45},"items":[{"uid":"baece09fa5457635","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/209//#testresult/baece09fa5457635","status":"passed","time":{"start":1740144051708,"stop":1740144055071,"duration":3363}},{"uid":"e276ab55d3b0a1e4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/208//#testresult/e276ab55d3b0a1e4","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1740121609943,"stop":1740121612800,"duration":2857}},{"uid":"1df33b073b85dfeb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/207//#testresult/1df33b073b85dfeb","status":"passed","time":{"start":1740039476886,"stop":1740039480244,"duration":3358}},{"uid":"af7202d65aaf1ebb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/206//#testresult/af7202d65aaf1ebb","status":"passed","time":{"start":1740035197884,"stop":1740035202775,"duration":4891}},{"uid":"3a3e4f3374774eee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/205//#testresult/3a3e4f3374774eee","status":"passed","time":{"start":1739977930106,"stop":1739977933374,"duration":3268}},{"uid":"f6ec947453c11131","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/204//#testresult/f6ec947453c11131","status":"passed","time":{"start":1739948774858,"stop":1739948778109,"duration":3251}},{"uid":"225e909c30678123","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/203//#testresult/225e909c30678123","status":"passed","time":{"start":1739909372116,"stop":1739909375834,"duration":3718}},{"uid":"a1bbf29db0873e6c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/202//#testresult/a1bbf29db0873e6c","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1739862386889,"stop":1739862390095,"duration":3206}},{"uid":"ae6360af4add07bd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/201//#testresult/ae6360af4add07bd","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1739776009898,"stop":1739776013142,"duration":3244}},{"uid":"e06df8cf21fbc1d2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/200//#testresult/e06df8cf21fbc1d2","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1739689535589,"stop":1739689538621,"duration":3032}},{"uid":"f0c105f43e580969","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/199//#testresult/f0c105f43e580969","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1739603140381,"stop":1739603143035,"duration":2654}},{"uid":"ff5ebbf93b683427","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/198//#testresult/ff5ebbf93b683427","status":"passed","time":{"start":1739516769345,"stop":1739516772139,"duration":2794}},{"uid":"f3045374fd12c909","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/197//#testresult/f3045374fd12c909","status":"passed","time":{"start":1739430412341,"stop":1739430415344,"duration":3003}},{"uid":"3ff2cdad5d9dda10","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/196//#testresult/3ff2cdad5d9dda10","status":"passed","time":{"start":1739343977127,"stop":1739343980535,"duration":3408}},{"uid":"23268f9ad71a99a5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/195//#testresult/23268f9ad71a99a5","status":"passed","time":{"start":1739257584687,"stop":1739257588432,"duration":3745}},{"uid":"36986f12eed1f1f1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/194//#testresult/36986f12eed1f1f1","status":"passed","time":{"start":1739171228373,"stop":1739171231024,"duration":2651}},{"uid":"623c8e9258f132","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/193//#testresult/623c8e9258f132","status":"passed","time":{"start":1739084770430,"stop":1739084773081,"duration":2651}},{"uid":"94dfef7fb8ebefe5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/192//#testresult/94dfef7fb8ebefe5","status":"passed","time":{"start":1738998375506,"stop":1738998378705,"duration":3199}},{"uid":"8f93f41e4f5b2a66","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/191//#testresult/8f93f41e4f5b2a66","status":"passed","time":{"start":1738912002794,"stop":1738912005466,"duration":2672}},{"uid":"8cbe1b5ba391733b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/190//#testresult/8cbe1b5ba391733b","status":"passed","time":{"start":1738829714840,"stop":1738829718181,"duration":3341}}]},"tags":["send","happy_path"]},"source":"138c50f6806e6cdc.json","parameterValues":[]}