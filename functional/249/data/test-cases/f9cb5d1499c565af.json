{"uid":"f9cb5d1499c565af","name":"Cannot send RTP with invalid amount","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi_invalid_amount","historyId":"3a2d68c98ccbf254d83aa6a209f2af2f","time":{"start":1742454395349,"stop":1742454396579,"duration":1230},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with invalid amount')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_invalid_amount():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['amount'] = -1\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:53: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1742454380448,"stop":1742454380507,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1296-753"},{"name":"thread","value":"2345-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":22,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":23},"items":[{"uid":"620a90b36c0aef8a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/248//#testresult/620a90b36c0aef8a","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742368013587,"stop":1742368015521,"duration":1934}},{"uid":"2bbfed9a08b84e34","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/247//#testresult/2bbfed9a08b84e34","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742290396429,"stop":1742290397782,"duration":1353}},{"uid":"7e085c353d9864c6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/246//#testresult/7e085c353d9864c6","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742281613356,"stop":1742281614828,"duration":1472}},{"uid":"ed162eb3082ce541","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/245//#testresult/ed162eb3082ce541","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742200610116,"stop":1742200611221,"duration":1105}},{"uid":"b9be5e1d04a98219","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/244//#testresult/b9be5e1d04a98219","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742195220569,"stop":1742195222120,"duration":1551}},{"uid":"695df609821ceed2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/243//#testresult/695df609821ceed2","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742108781294,"stop":1742108782400,"duration":1106}},{"uid":"17aa43c8fc26c90b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/242//#testresult/17aa43c8fc26c90b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742022372586,"stop":1742022374477,"duration":1891}},{"uid":"ada810d9a725e9fd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/241//#testresult/ada810d9a725e9fd","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741935998225,"stop":1741935999521,"duration":1296}},{"uid":"c2bb7f3211f32912","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/240//#testresult/c2bb7f3211f32912","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741849604550,"stop":1741849606609,"duration":2059}},{"uid":"dd9cb8506e541b3d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/239//#testresult/dd9cb8506e541b3d","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741763215215,"stop":1741763216453,"duration":1238}},{"uid":"2d86525f5aed882d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/238//#testresult/2d86525f5aed882d","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741705696861,"stop":1741705697993,"duration":1132}},{"uid":"8ea278c6250593f7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/237//#testresult/8ea278c6250593f7","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741676811480,"stop":1741676813447,"duration":1967}},{"uid":"68b4359450d12d87","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/236//#testresult/68b4359450d12d87","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741631449528,"stop":1741631450941,"duration":1413}},{"uid":"a6ded350ac4da050","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/235//#testresult/a6ded350ac4da050","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741628102429,"stop":1741628104603,"duration":2174}},{"uid":"56cc3dff4ac57e61","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/234//#testresult/56cc3dff4ac57e61","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741624724287,"stop":1741624725888,"duration":1601}},{"uid":"1524545eea0343cf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/233//#testresult/1524545eea0343cf","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741603692700,"stop":1741603694141,"duration":1441}},{"uid":"8d6622c5f56eca8f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/232//#testresult/8d6622c5f56eca8f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741590414940,"stop":1741590416356,"duration":1416}},{"uid":"c1e76c772b49f1df","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/231//#testresult/c1e76c772b49f1df","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741503953484,"stop":1741503955279,"duration":1795}},{"uid":"c061aa047b58fc58","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/230//#testresult/c061aa047b58fc58","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741417533766,"stop":1741417535018,"duration":1252}},{"uid":"c06a66ce2cf83f15","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/229//#testresult/c06a66ce2cf83f15","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741368330760,"stop":1741368331940,"duration":1180}}]},"tags":["cbi","unhappy_path","send"]},"source":"f9cb5d1499c565af.json","parameterValues":[]}