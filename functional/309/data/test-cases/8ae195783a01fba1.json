{"uid":"8ae195783a01fba1","name":"Cannot send RTP with expired date","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi_expired_date","historyId":"af763254cdd5d120d914e8ce75139912","time":{"start":1745737597928,"stop":1745737599271,"duration":1343},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with expired date')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_expired_date():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['expiryDate'] = '2020-01-01'\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:76: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1745737544851,"stop":1745737544907,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1796-368"},{"name":"thread","value":"2353-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":74,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":75},"items":[{"uid":"d2da24f1549e30bf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/308//#testresult/d2da24f1549e30bf","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745651199102,"stop":1745651200470,"duration":1368}},{"uid":"dac6f5233a8c9a05","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/307//#testresult/dac6f5233a8c9a05","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745564827306,"stop":1745564828645,"duration":1339}},{"uid":"cc36f1aacb012aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/306//#testresult/cc36f1aacb012aa","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745491304413,"stop":1745491305822,"duration":1409}},{"uid":"fb95d08e7401bcb3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/305//#testresult/fb95d08e7401bcb3","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745478447012,"stop":1745478448480,"duration":1468}},{"uid":"c45c3c994a5dddb6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/304//#testresult/c45c3c994a5dddb6","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745392051672,"stop":1745392053731,"duration":2059}},{"uid":"46e89971cac6832b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/303//#testresult/46e89971cac6832b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745305629833,"stop":1745305630904,"duration":1071}},{"uid":"85a6045bba639d1f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/302//#testresult/85a6045bba639d1f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745219270560,"stop":1745219272299,"duration":1739}},{"uid":"38fea3314268d317","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/301//#testresult/38fea3314268d317","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745132800265,"stop":1745132801888,"duration":1623}},{"uid":"840c2fb96386b3af","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/300//#testresult/840c2fb96386b3af","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745046396258,"stop":1745046397771,"duration":1513}},{"uid":"9a868d7e390a903a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/299//#testresult/9a868d7e390a903a","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744960018529,"stop":1744960019705,"duration":1176}},{"uid":"ce4b6aaad6da478f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/298//#testresult/ce4b6aaad6da478f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744902284362,"stop":1744902286326,"duration":1964}},{"uid":"73a1dfdad66020b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/297//#testresult/73a1dfdad66020b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744873646535,"stop":1744873648052,"duration":1517}},{"uid":"bfd4bcc77d58c6fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/296//#testresult/bfd4bcc77d58c6fe","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744799607899,"stop":1744799609361,"duration":1462}},{"uid":"3052f91d9b43837b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/295//#testresult/3052f91d9b43837b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744787233110,"stop":1744787234543,"duration":1433}},{"uid":"5bc513f3e20c3823","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/294//#testresult/5bc513f3e20c3823","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744727120596,"stop":1744727122493,"duration":1897}},{"uid":"9f8aca2bd7a25291","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/293//#testresult/9f8aca2bd7a25291","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744726256692,"stop":1744726257809,"duration":1117}},{"uid":"2f5305742aaff337","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/292//#testresult/2f5305742aaff337","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744725399894,"stop":1744725401351,"duration":1457}},{"uid":"f903d0157ab6b29e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/291//#testresult/f903d0157ab6b29e","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744700828862,"stop":1744700830000,"duration":1138}},{"uid":"fcd957664835b494","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/290//#testresult/fcd957664835b494","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744640113674,"stop":1744640115024,"duration":1350}},{"uid":"9dfe3af4f37100cb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/289//#testresult/9dfe3af4f37100cb","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744614443437,"stop":1744614444986,"duration":1549}}]},"tags":["cbi","unhappy_path","send"]},"source":"8ae195783a01fba1.json","parameterValues":[]}