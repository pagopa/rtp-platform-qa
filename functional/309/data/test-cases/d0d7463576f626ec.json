{"uid":"d0d7463576f626ec","name":"An RTP is sent through CBI API","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi","historyId":"b7843ec0a9572280c9663808e1141c5c","time":{"start":1745737594961,"stop":1745737596479,"duration":1518},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('An RTP is sent through CBI API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        rtp_data = generate_rtp_data()\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1745737544851,"stop":1745737544907,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"tag","value":"cbi"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1796-368"},{"name":"thread","value":"2353-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":75,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":75},"items":[{"uid":"abcc938c6bd3e6a5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/308//#testresult/abcc938c6bd3e6a5","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745651196102,"stop":1745651197930,"duration":1828}},{"uid":"4e2fb923dfffbad0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/307//#testresult/4e2fb923dfffbad0","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745564823984,"stop":1745564825840,"duration":1856}},{"uid":"350a10673338b1c3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/306//#testresult/350a10673338b1c3","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745491301090,"stop":1745491302980,"duration":1890}},{"uid":"6f9bf8d1f495c0cf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/305//#testresult/6f9bf8d1f495c0cf","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745478444095,"stop":1745478445528,"duration":1433}},{"uid":"a5de775cf3ffc790","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/304//#testresult/a5de775cf3ffc790","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745392047441,"stop":1745392049796,"duration":2355}},{"uid":"5337a43d23e70d22","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/303//#testresult/5337a43d23e70d22","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745305626800,"stop":1745305628485,"duration":1685}},{"uid":"c76f28948740ed30","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/302//#testresult/c76f28948740ed30","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745219266731,"stop":1745219268809,"duration":2078}},{"uid":"12ab1737e57efcfd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/301//#testresult/12ab1737e57efcfd","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745132796164,"stop":1745132798692,"duration":2528}},{"uid":"4d74fd0158e693da","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/300//#testresult/4d74fd0158e693da","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745046393022,"stop":1745046394751,"duration":1729}},{"uid":"cd7db0a6bc3d2437","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/299//#testresult/cd7db0a6bc3d2437","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744960015575,"stop":1744960017184,"duration":1609}},{"uid":"2441112bc38177be","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/298//#testresult/2441112bc38177be","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744902280320,"stop":1744902282699,"duration":2379}},{"uid":"781fd43f7f939c8f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/297//#testresult/781fd43f7f939c8f","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744873643729,"stop":1744873645459,"duration":1730}},{"uid":"c897a66499a4f06","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/296//#testresult/c897a66499a4f06","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744799605300,"stop":1744799606733,"duration":1433}},{"uid":"7ec9ceb85ffed108","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/295//#testresult/7ec9ceb85ffed108","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744787230005,"stop":1744787231703,"duration":1698}},{"uid":"9f6f92821608d1b9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/294//#testresult/9f6f92821608d1b9","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744727115938,"stop":1744727118441,"duration":2503}},{"uid":"94affc9702135da4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/293//#testresult/94affc9702135da4","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744726253558,"stop":1744726255135,"duration":1577}},{"uid":"9dfe3db7f8c39288","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/292//#testresult/9dfe3db7f8c39288","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744725396979,"stop":1744725398554,"duration":1575}},{"uid":"732b4a1555246c10","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/291//#testresult/732b4a1555246c10","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744700825865,"stop":1744700827600,"duration":1735}},{"uid":"31994391cf811a48","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/290//#testresult/31994391cf811a48","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744640110690,"stop":1744640112289,"duration":1599}},{"uid":"16306723dbebdd9d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/289//#testresult/16306723dbebdd9d","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744614440623,"stop":1744614442204,"duration":1581}}]},"tags":["cbi","send","happy_path"]},"source":"d0d7463576f626ec.json","parameterValues":[]}