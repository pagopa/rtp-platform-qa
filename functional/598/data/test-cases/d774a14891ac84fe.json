{"uid":"d774a14891ac84fe","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"functional-tests.tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"c2c26c59af7cf357974f77dc8e7a5246","time":{"start":1761818897785,"stop":1761818901068,"duration":3283},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761818825876,"stop":1761818825933,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"functional-tests.tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2478-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"functional-tests.tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":29,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":29},"items":[{"uid":"70996545e4ca55f5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/597//#testresult/70996545e4ca55f5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761805423636,"stop":1761805427278,"duration":3642}},{"uid":"1aa8eb4c7d3b65ad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/596//#testresult/1aa8eb4c7d3b65ad","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761752122807,"stop":1761752125853,"duration":3046}},{"uid":"d6b296ad64fa05cf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/595//#testresult/d6b296ad64fa05cf","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1761719129753,"stop":1761719130924,"duration":1171}},{"uid":"831e1f9cba9cdeb5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/594//#testresult/831e1f9cba9cdeb5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761632753047,"stop":1761632755916,"duration":2869}},{"uid":"be68e45b12293e5a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/593//#testresult/be68e45b12293e5a","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761546417991,"stop":1761546421442,"duration":3451}},{"uid":"95fd145eb76eece8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/592//#testresult/95fd145eb76eece8","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761459764605,"stop":1761459767921,"duration":3316}},{"uid":"e1aa6e021f161b23","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/591//#testresult/e1aa6e021f161b23","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761373325798,"stop":1761373328922,"duration":3124}},{"uid":"6eacef00b9b3c06a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/590//#testresult/6eacef00b9b3c06a","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761287008816,"stop":1761287012372,"duration":3556}},{"uid":"8145f8382ceb3bd3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/589//#testresult/8145f8382ceb3bd3","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761200621281,"stop":1761200624714,"duration":3433}},{"uid":"178b98fdfe1a6be4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/588//#testresult/178b98fdfe1a6be4","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761114281031,"stop":1761114284405,"duration":3374}},{"uid":"e5a3c9d6768b5a22","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/587//#testresult/e5a3c9d6768b5a22","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761053859153,"stop":1761053862438,"duration":3285}},{"uid":"62d315189c01f21a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/586//#testresult/62d315189c01f21a","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761040704892,"stop":1761040707727,"duration":2835}},{"uid":"d39dba1461588976","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/585//#testresult/d39dba1461588976","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761027831586,"stop":1761027834446,"duration":2860}},{"uid":"b955c04198c42afd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/584//#testresult/b955c04198c42afd","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760941471269,"stop":1760941474811,"duration":3542}},{"uid":"f6ca56083a0db9d0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/583//#testresult/f6ca56083a0db9d0","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760854969790,"stop":1760854972833,"duration":3043}},{"uid":"bacf8505b1b0b715","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/582//#testresult/bacf8505b1b0b715","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760768505425,"stop":1760768508262,"duration":2837}},{"uid":"7f06546762dfeb32","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/581//#testresult/7f06546762dfeb32","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760682160501,"stop":1760682163358,"duration":2857}},{"uid":"90bfbbd046589358","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/580//#testresult/90bfbbd046589358","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760624528891,"stop":1760624532699,"duration":3808}},{"uid":"22eb59a4f1c76cb6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/579//#testresult/22eb59a4f1c76cb6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760619705063,"stop":1760619708851,"duration":3788}},{"uid":"e641259565efe148","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/578//#testresult/e641259565efe148","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760595815641,"stop":1760595818687,"duration":3046}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"d774a14891ac84fe.json","parameterValues":[]}