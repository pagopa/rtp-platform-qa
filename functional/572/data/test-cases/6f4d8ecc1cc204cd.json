{"uid":"6f4d8ecc1cc204cd","name":"Happy path: a debt position is created and published in DEV environment","fullName":"tests.test_debt_position_create_delete#test_create_debt_position","historyId":"812a458647330d5e3de816953bf7daf7","time":{"start":1760513016454,"stop":1760513016891,"duration":437},"description":"\nVerify that after creating and publishing a debt position,\nthe RTP lookup returns exactly one entry for the notice number.\n","descriptionHtml":"<p>Verify that after creating and publishing a debt position,<br />\nthe RTP lookup returns exactly one entry for the notice number.</p>\n","status":"failed","statusMessage":"AssertionError: Expected 201 but got 500\nassert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"setup_data = {'debtor_fc': 'CLIRGR26C64X000V', 'iupd': '57ae5b78aab445348', 'iuv': '15478778231078600', 'organization_id': '02438750586', ...}\nenvironment = {'create_function': <function environment.<locals>.<lambda> at 0x7fe5ccadfc40>, 'delete_function': <function environme...a> at 0x7fe5ccadfd80>, 'get_function': <function environment.<locals>.<lambda> at 0x7fe5ccadfce0>, 'is_dev': True, ...}\n\n    @allure.feature('Debt Positions')\n    @allure.story('Create Debt Position')\n    @pytest.mark.debt_positions\n    @pytest.mark.happy_path\n    @pytest.mark.timeout(TEST_TIMEOUT_SEC)\n    def test_create_debt_position(setup_data, environment):\n        \"\"\"\n        Verify that after creating and publishing a debt position,\n        the RTP lookup returns exactly one entry for the notice number.\n        \"\"\"\n        allure.dynamic.title(f\"Happy path: a debt position is created and published in {environment['name']} environment\")\n    \n        subscription_key = setup_data['subscription_key']\n        organization_id = setup_data['organization_id']\n        debtor_fc = setup_data['debtor_fc']\n        iupd = setup_data['iupd']\n        iuv = setup_data['iuv']\n    \n        payload = create_debt_position_payload(debtor_fc=debtor_fc, iupd=iupd, iuv=iuv)\n    \n        create_function = environment['create_function']\n    \n        res = create_function(subscription_key, organization_id, payload, to_publish=True)\n>       assert res.status_code == 201, f'Expected 201 but got {res.status_code}'\nE       AssertionError: Expected 201 but got 500\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debt_position_create_delete.py:109: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1760512946085,"stop":1760512946145,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"environment","time":{"start":1760513014126,"stop":1760513014127,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_data","time":{"start":1760513014127,"stop":1760513016453,"duration":2326},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Create Debt Position"},{"name":"feature","value":"Debt Positions"},{"name":"tag","value":"timeout(300)"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"debt_positions"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debt_position_create_delete"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2578-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debt_position_create_delete"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"environment","value":"{'name': 'DEV', 'is_dev': True, 'create_function': <function environment.<locals>.<lambda> at 0x7fe5ccadfc40>, 'get_function': <function environment.<locals>.<lambda> at 0x7fe5ccadfce0>, 'delete_function': <function environment.<locals>.<lambda> at 0x7fe5ccadfd80>, 'update_function': <function environment.<locals>.<lambda> at 0x7fe5ccadfe20>, 'subscription_key': '8c0b1bff2c7f49c6aaf34b93a546fda0', 'organization_id': '02438750586'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["debt_positions","timeout(300)","happy_path"]},"source":"6f4d8ecc1cc204cd.json","parameterValues":["{'name': 'DEV', 'is_dev': True, 'create_function': <function environment.<locals>.<lambda> at 0x7fe5ccadfc40>, 'get_function': <function environment.<locals>.<lambda> at 0x7fe5ccadfce0>, 'delete_function': <function environment.<locals>.<lambda> at 0x7fe5ccadfd80>, 'update_function': <function environment.<locals>.<lambda> at 0x7fe5ccadfe20>, 'subscription_key': '8c0b1bff2c7f49c6aaf34b93a546fda0', 'organization_id': '02438750586'}"]}