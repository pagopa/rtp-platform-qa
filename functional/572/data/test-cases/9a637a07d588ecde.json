{"uid":"9a637a07d588ecde","name":"A debtor is activated and retrieved by activation id","fullName":"tests.test_activation#test_get_activation_by_id","historyId":"5802a301b59e0c151ffcd2948b2fd364","time":{"start":1760512950436,"stop":1760512951907,"duration":1471},"status":"failed","statusMessage":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('Activation')\n    @allure.story('Get Debtor activation by ID')\n    @allure.title('A debtor is activated and retrieved by activation id')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.happy_path\n    def test_get_activation_by_id():\n        access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n        debtor_fc = fake_fc()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, 'Error activating debtor'\n    \n        location = res.headers['Location']\n        activation_id = location.split('/')[-1]\n        assert bool(uuidv4_pattern.fullmatch(activation_id))\n    \n        res = get_activation_by_id(access_token, activation_id)\n>       assert res.status_code == 200, f'Expected 200 but got {res.status_code}'\nE       AssertionError: Expected 200 but got 500\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_activation.py:91: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1760512946085,"stop":1760512946145,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Activation"},{"name":"story","value":"Get Debtor activation by ID"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2578-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":78,"broken":2,"skipped":0,"passed":52,"unknown":0,"total":132},"items":[{"uid":"57b908d7fbddaba6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/568//#testresult/57b908d7fbddaba6","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760434478572,"stop":1760434480379,"duration":1807}},{"uid":"a006f7317c4fb67a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/567//#testresult/a006f7317c4fb67a","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760426539720,"stop":1760426541628,"duration":1908}},{"uid":"895fa406c58834dc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/566//#testresult/895fa406c58834dc","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760340148740,"stop":1760340150682,"duration":1942}},{"uid":"10ac549b493ac9d4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/565//#testresult/10ac549b493ac9d4","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760253539379,"stop":1760253541363,"duration":1984}},{"uid":"8d8666d4528314ad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/564//#testresult/8d8666d4528314ad","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760167129657,"stop":1760167130967,"duration":1310}},{"uid":"c9cd9da43878b6ea","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/563//#testresult/c9cd9da43878b6ea","status":"passed","time":{"start":1760080839243,"stop":1760080840784,"duration":1541}},{"uid":"3d04790a02dbdf7b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/562//#testresult/3d04790a02dbdf7b","status":"passed","time":{"start":1759994473104,"stop":1759994474965,"duration":1861}},{"uid":"e4a2d42bc112a5c4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/561//#testresult/e4a2d42bc112a5c4","status":"passed","time":{"start":1759929000563,"stop":1759929002356,"duration":1793}},{"uid":"9a679b7eabec4f6f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/560//#testresult/9a679b7eabec4f6f","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759920818498,"stop":1759920819796,"duration":1298}},{"uid":"8624a89259c8cc2b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/559//#testresult/8624a89259c8cc2b","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759919577323,"stop":1759919578702,"duration":1379}},{"uid":"9fa9c469301e2e1f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/558//#testresult/9fa9c469301e2e1f","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759908028385,"stop":1759908029944,"duration":1559}},{"uid":"4c6ec8fad8bbd3e4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/557//#testresult/4c6ec8fad8bbd3e4","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759821663155,"stop":1759821664482,"duration":1327}},{"uid":"3f26553566b05b93","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/556//#testresult/3f26553566b05b93","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759735307062,"stop":1759735309228,"duration":2166}},{"uid":"13f6c04314b65f6d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/555//#testresult/13f6c04314b65f6d","status":"passed","time":{"start":1759648695051,"stop":1759648696461,"duration":1410}},{"uid":"dc675ee85c2476bd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/554//#testresult/dc675ee85c2476bd","status":"passed","time":{"start":1759562325730,"stop":1759562327812,"duration":2082}},{"uid":"e5b6a4a317963b0e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/553//#testresult/e5b6a4a317963b0e","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759483527654,"stop":1759483529786,"duration":2132}},{"uid":"19168b7d5e714a00","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/552//#testresult/19168b7d5e714a00","status":"passed","time":{"start":1759476005723,"stop":1759476007917,"duration":2194}},{"uid":"f6b118d8396f5e12","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/551//#testresult/f6b118d8396f5e12","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759389590419,"stop":1759389591748,"duration":1329}},{"uid":"c404daea0ffa1797","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/550//#testresult/c404daea0ffa1797","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759315744700,"stop":1759315746106,"duration":1406}},{"uid":"2a580fa1e9371792","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/549//#testresult/2a580fa1e9371792","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759303321371,"stop":1759303322751,"duration":1380}}]},"tags":["auth","activation","happy_path"]},"source":"9a637a07d588ecde.json","parameterValues":[]}