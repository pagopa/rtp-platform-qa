{"uid":"df0f44d459df2b90","name":"An RTP callback is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback_DS_08P_compliant","historyId":"e98ff8a1e43c45b6eec2e1ce025e4cfc","time":{"start":1749971243545,"stop":1749971244037,"duration":492},"status":"failed","statusMessage":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('An RTP callback is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback_DS_08P_compliant():\n        callback_data = generate_callback_data_DS_08P_compliant()\n    \n        cert, key = pfx_to_pem(secrets.debtor_service_provider_mock_PFX_base64,\n                               secrets.debtor_service_provider_mock_PFX_password_base64,\n                               config.cert_path,\n                               config.key_path)\n    \n        callback_response = srtp_callback(rtp_payload=callback_data,\n                                          cert_path=cert,\n                                          key_path=key)\n>       assert callback_response.status_code == 200, f'Error from callback, expected 200 got {callback_response.status_code}'\nE       AssertionError: Error from callback, expected 200 got 400\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\nfunctional-tests/tests/test_callback.py:47: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749971190475,"stop":1749971190532,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2523-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":27,"broken":9,"skipped":0,"passed":50,"unknown":0,"total":86},"items":[{"uid":"10783c1545f0a9ee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/385//#testresult/10783c1545f0a9ee","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749884851262,"stop":1749884851715,"duration":453}},{"uid":"de8929338fd2ac50","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/384//#testresult/de8929338fd2ac50","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749810118738,"stop":1749810119252,"duration":514}},{"uid":"5c4bfc0c24dd5f94","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/383//#testresult/5c4bfc0c24dd5f94","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749805339835,"stop":1749805340667,"duration":832}},{"uid":"340a8d3b8513f1bb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/382//#testresult/340a8d3b8513f1bb","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749803872344,"stop":1749803872872,"duration":528}},{"uid":"ffc2967603d71897","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/381//#testresult/ffc2967603d71897","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749802595865,"stop":1749802596319,"duration":454}},{"uid":"795fda4ed47554b4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/380//#testresult/795fda4ed47554b4","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749801527886,"stop":1749801528397,"duration":511}},{"uid":"b0bb59c9e7cc0f5e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/378//#testresult/b0bb59c9e7cc0f5e","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749800520050,"stop":1749800520051,"duration":1}},{"uid":"8c0346dce399514a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/377//#testresult/8c0346dce399514a","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749799850771,"stop":1749799850772,"duration":1}},{"uid":"6c75d4691850ac73","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/376//#testresult/6c75d4691850ac73","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749798430354,"stop":1749798430831,"duration":477}},{"uid":"65f57015289e1f2e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/375//#testresult/65f57015289e1f2e","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749712038670,"stop":1749712039307,"duration":637}},{"uid":"9c6c309add15e273","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/374//#testresult/9c6c309add15e273","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749625632778,"stop":1749625633229,"duration":451}},{"uid":"6d4630b1ab0609ce","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/373//#testresult/6d4630b1ab0609ce","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749539223986,"stop":1749539224438,"duration":452}},{"uid":"69caec59916da775","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/372//#testresult/69caec59916da775","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749485083162,"stop":1749485083163,"duration":1}},{"uid":"75af0491d10f786c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/371//#testresult/75af0491d10f786c","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749484925340,"stop":1749484925341,"duration":1}},{"uid":"5c31a9cf3e3d157c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/370//#testresult/5c31a9cf3e3d157c","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749484603838,"stop":1749484603838,"duration":0}},{"uid":"39fd5ebd6e0d381f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/369//#testresult/39fd5ebd6e0d381f","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749484257531,"stop":1749484257531,"duration":0}},{"uid":"2d533f42e8aac445","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/368//#testresult/2d533f42e8aac445","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749483915668,"stop":1749483915669,"duration":1}},{"uid":"140e09b8bc057b0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/365//#testresult/140e09b8bc057b0","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749482097040,"stop":1749482097447,"duration":407}},{"uid":"a6a074647ca07d12","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/367//#testresult/a6a074647ca07d12","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749482223385,"stop":1749482223386,"duration":1}},{"uid":"4f6b05731bafaa86","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/4f6b05731bafaa86","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749452880327,"stop":1749452880789,"duration":462}}]},"tags":["callback","happy_path"]},"source":"df0f44d459df2b90.json","parameterValues":[]}