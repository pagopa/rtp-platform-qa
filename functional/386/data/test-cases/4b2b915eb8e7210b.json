{"uid":"4b2b915eb8e7210b","name":"An RTP is sent through CBI API","fullName":"tests.test_debtor_service_provider_availability#test_send_rtp_to_cbi","historyId":"f80da3262bf8ce0e665c096b1873cbf4","time":{"start":1749971255836,"stop":1749971256996,"duration":1160},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI directly')\n    @allure.title('An RTP is sent through CBI API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        rtp_data = generate_rtp_data()\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id, secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(\n            secrets.CBI_client_PFX_base64,\n            secrets.CBI_client_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider_availability.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749971190475,"stop":1749971190532,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI directly"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider_availability"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2523-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":26,"broken":8,"skipped":0,"passed":0,"unknown":0,"total":34},"items":[{"uid":"56b88e8087cb13a3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/385//#testresult/56b88e8087cb13a3","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749884861911,"stop":1749884862955,"duration":1044}},{"uid":"e21ed81e2947d15f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/384//#testresult/e21ed81e2947d15f","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749810128459,"stop":1749810129560,"duration":1101}},{"uid":"9cf8caf45f958895","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/383//#testresult/9cf8caf45f958895","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749805355410,"stop":1749805357310,"duration":1900}},{"uid":"32879bf70d468a01","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/382//#testresult/32879bf70d468a01","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749803883089,"stop":1749803884327,"duration":1238}},{"uid":"77d8e65675b0f4e5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/381//#testresult/77d8e65675b0f4e5","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1749802606394,"stop":1749802607506,"duration":1112}},{"uid":"96a6b50c1c0aaa41","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/380//#testresult/96a6b50c1c0aaa41","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749801538096,"stop":1749801539099,"duration":1003}},{"uid":"9c82920cdef283a1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/378//#testresult/9c82920cdef283a1","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749800522275,"stop":1749800522276,"duration":1}},{"uid":"bb184e86b1dc7b93","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/377//#testresult/bb184e86b1dc7b93","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749799854493,"stop":1749799854494,"duration":1}},{"uid":"a75411d5ff014f79","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/376//#testresult/a75411d5ff014f79","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749798441341,"stop":1749798442452,"duration":1111}},{"uid":"8d0794f196eccdac","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/375//#testresult/8d0794f196eccdac","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1749712053706,"stop":1749712055460,"duration":1754}},{"uid":"1b2bb991a2075276","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/374//#testresult/1b2bb991a2075276","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749625644179,"stop":1749625645554,"duration":1375}},{"uid":"4e264bc90072478","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/373//#testresult/4e264bc90072478","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749539234464,"stop":1749539235549,"duration":1085}},{"uid":"1d5c68e7d291b28f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/372//#testresult/1d5c68e7d291b28f","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749485086952,"stop":1749485086953,"duration":1}},{"uid":"7a355d3e0f5fd71c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/371//#testresult/7a355d3e0f5fd71c","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749484928605,"stop":1749484928606,"duration":1}},{"uid":"9349261c356a639e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/370//#testresult/9349261c356a639e","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749484606132,"stop":1749484606133,"duration":1}},{"uid":"15ffb276228e9ab4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/369//#testresult/15ffb276228e9ab4","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749484261271,"stop":1749484261272,"duration":1}},{"uid":"c9db050827964eb3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/368//#testresult/c9db050827964eb3","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749483917954,"stop":1749483917954,"duration":0}},{"uid":"deff84cd9a5a1b17","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/365//#testresult/deff84cd9a5a1b17","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749482106733,"stop":1749482107907,"duration":1174}},{"uid":"70d17ce6f5a38aad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/367//#testresult/70d17ce6f5a38aad","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749482226817,"stop":1749482226818,"duration":1}},{"uid":"b0e785bbb55406dc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/b0e785bbb55406dc","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1749452891115,"stop":1749452892114,"duration":999}}]},"tags":["cbi","send","happy_path"]},"source":"4b2b915eb8e7210b.json","parameterValues":[]}