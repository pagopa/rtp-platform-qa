{"uid":"30a8059a68e372bf","name":"A debtor is activated and retrieved by activation id","fullName":"tests.test_activation#test_get_activation_by_id","historyId":"5802a301b59e0c151ffcd2948b2fd364","time":{"start":1755932760928,"stop":1755932762520,"duration":1592},"status":"failed","statusMessage":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('Activation')\n    @allure.story('Get Debtor activation by ID')\n    @allure.title('A debtor is activated and retrieved by activation id')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.happy_path\n    def test_get_activation_by_id():\n        access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n        debtor_fc = fake_fc()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, 'Error activating debtor'\n    \n        location = res.headers['Location']\n        activation_id = location.split('/')[-1]\n        assert bool(uuidv4_pattern.fullmatch(activation_id))\n    \n        res = get_activation_by_id(access_token, activation_id)\n>       assert res.status_code == 200, f'Expected 200 but got {res.status_code}'\nE       AssertionError: Expected 200 but got 500\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_activation.py:91: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755932756992,"stop":1755932757050,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Activation"},{"name":"story","value":"Get Debtor activation by ID"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":30,"broken":0,"skipped":0,"passed":36,"unknown":0,"total":66},"items":[{"uid":"4c135881f3a502e0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/502//#testresult/4c135881f3a502e0","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755847618425,"stop":1755847620297,"duration":1872}},{"uid":"2c4435b304bbbc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/501//#testresult/2c4435b304bbbc","status":"passed","time":{"start":1755846423082,"stop":1755846424497,"duration":1415}},{"uid":"6be96995e91c6ce8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/500//#testresult/6be96995e91c6ce8","status":"passed","time":{"start":1755843875613,"stop":1755843877057,"duration":1444}},{"uid":"3a8c840cc367478a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/499//#testresult/3a8c840cc367478a","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755760151532,"stop":1755760152736,"duration":1204}},{"uid":"fc432375c639bf44","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/498//#testresult/fc432375c639bf44","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755673645855,"stop":1755673648314,"duration":2459}},{"uid":"857bf709900907f5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/497//#testresult/857bf709900907f5","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755613276670,"stop":1755613277931,"duration":1261}},{"uid":"d5f24059c9fae83e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/496//#testresult/d5f24059c9fae83e","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755588463449,"stop":1755588464845,"duration":1396}},{"uid":"54019ee2d08f39ad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/495//#testresult/54019ee2d08f39ad","status":"passed","time":{"start":1755587239335,"stop":1755587240687,"duration":1352}},{"uid":"a9ffae0cec6ec9a2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/494//#testresult/a9ffae0cec6ec9a2","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755500966370,"stop":1755500968221,"duration":1851}},{"uid":"aee64006bb46ed98","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/493//#testresult/aee64006bb46ed98","status":"passed","time":{"start":1755414385436,"stop":1755414386705,"duration":1269}},{"uid":"f1f316603ff8ffba","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/492//#testresult/f1f316603ff8ffba","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755327978400,"stop":1755327979700,"duration":1300}},{"uid":"a4f12c7c6730e2b7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/491//#testresult/a4f12c7c6730e2b7","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755241664307,"stop":1755241665659,"duration":1352}},{"uid":"6370a4eee78078d4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/490//#testresult/6370a4eee78078d4","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755166763893,"stop":1755166765400,"duration":1507}},{"uid":"77d2c09c8c33db5d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/489//#testresult/77d2c09c8c33db5d","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755158282380,"stop":1755158283638,"duration":1258}},{"uid":"b5fb1e8251e9155d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/488//#testresult/b5fb1e8251e9155d","status":"passed","time":{"start":1755155293308,"stop":1755155295299,"duration":1991}},{"uid":"93e08633740d3b41","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/487//#testresult/93e08633740d3b41","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755068886765,"stop":1755068888251,"duration":1486}},{"uid":"53e503a11486656e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/486//#testresult/53e503a11486656e","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1754982478878,"stop":1754982480811,"duration":1933}},{"uid":"3078e7245fde8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/485//#testresult/3078e7245fde8","status":"passed","time":{"start":1754907821004,"stop":1754907822565,"duration":1561}},{"uid":"c49bf53e0df6ad3d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/483//#testresult/c49bf53e0df6ad3d","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1754896239208,"stop":1754896241150,"duration":1942}},{"uid":"6960f61966b76334","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/482//#testresult/6960f61966b76334","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1754809587142,"stop":1754809588698,"duration":1556}}]},"tags":["auth","activation","happy_path"]},"source":"30a8059a68e372bf.json","parameterValues":[]}