{"uid":"fb496bd7cbcd7566","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1757666509426,"stop":1757666514850,"duration":5424},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757665796764,"stop":1757665796823,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2511-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":111,"broken":28,"skipped":0,"passed":32,"unknown":0,"total":171},"items":[{"uid":"ff688638463489e7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/528//#testresult/ff688638463489e7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757661701409,"stop":1757661704542,"duration":3133}},{"uid":"3f1b8b8c6e020c00","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/527//#testresult/3f1b8b8c6e020c00","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757598402871,"stop":1757598406067,"duration":3196}},{"uid":"73b388b2b295f29e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/526//#testresult/73b388b2b295f29e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757575330975,"stop":1757575333902,"duration":2927}},{"uid":"4419d355510622ec","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/525//#testresult/4419d355510622ec","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757489083748,"stop":1757489087201,"duration":3453}},{"uid":"de3100387570a421","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/524//#testresult/de3100387570a421","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757402560005,"stop":1757402562817,"duration":2812}},{"uid":"49004b8c3c46b58a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/523//#testresult/49004b8c3c46b58a","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757316153777,"stop":1757316157218,"duration":3441}},{"uid":"d2bbd2d85cced471","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/522//#testresult/d2bbd2d85cced471","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757229701765,"stop":1757229705179,"duration":3414}},{"uid":"25af9f85f382638b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/521//#testresult/25af9f85f382638b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757143266842,"stop":1757143270229,"duration":3387}},{"uid":"c8fb952b46e7acc9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/520//#testresult/c8fb952b46e7acc9","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1757057142393,"stop":1757057142995,"duration":602}},{"uid":"26180ee507f16107","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/519//#testresult/26180ee507f16107","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756969685868,"stop":1756969689426,"duration":3558}},{"uid":"177e3bf8facb6159","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/518//#testresult/177e3bf8facb6159","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756910924028,"stop":1756910927938,"duration":3910}},{"uid":"e167a3bd7b5342b0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/517//#testresult/e167a3bd7b5342b0","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756883307369,"stop":1756883310445,"duration":3076}},{"uid":"e7f3f9d455149d98","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/516//#testresult/e7f3f9d455149d98","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756798028856,"stop":1756798031682,"duration":2826}},{"uid":"68900e19b2ad70d5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/515//#testresult/68900e19b2ad70d5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756796904287,"stop":1756796907578,"duration":3291}},{"uid":"885163ffbb049a3d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/514//#testresult/885163ffbb049a3d","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756719642982,"stop":1756719646385,"duration":3403}},{"uid":"66ed28aaf9a2d0d0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/513//#testresult/66ed28aaf9a2d0d0","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756710590496,"stop":1756710593818,"duration":3322}},{"uid":"a4618e34d5424535","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/512//#testresult/a4618e34d5424535","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756624059154,"stop":1756624061911,"duration":2757}},{"uid":"2f4854fbc302b932","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/511//#testresult/2f4854fbc302b932","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756537650606,"stop":1756537654162,"duration":3556}},{"uid":"49eed72b90987884","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/510//#testresult/49eed72b90987884","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756451307403,"stop":1756451310378,"duration":2975}},{"uid":"4cbd62f6d8122432","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/509//#testresult/4cbd62f6d8122432","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756385971779,"stop":1756385975447,"duration":3668}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"fb496bd7cbcd7566.json","parameterValues":[]}