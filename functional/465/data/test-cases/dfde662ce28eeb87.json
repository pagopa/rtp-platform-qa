{"uid":"dfde662ce28eeb87","name":"An RTP callback is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback_DS_04b_compliant","historyId":"475e3c0708b05c2b7bfae9db8dc283af","time":{"start":1753973998691,"stop":1753973999555,"duration":864},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('An RTP callback is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback_DS_04b_compliant():\n    \n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n>       creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_callback.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1753973983537,"stop":1753973983594,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"pkrvmjbmru5nbw0"},{"name":"thread","value":"2503-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":41,"broken":18,"skipped":0,"passed":102,"unknown":0,"total":161},"items":[{"uid":"8943703d59b10c9c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/464//#testresult/8943703d59b10c9c","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753945802352,"stop":1753945803571,"duration":1219}},{"uid":"d6a4c61dceb629bc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/463//#testresult/d6a4c61dceb629bc","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753878240317,"stop":1753878241740,"duration":1423}},{"uid":"75818f402938085e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/462//#testresult/75818f402938085e","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753859444309,"stop":1753859445592,"duration":1283}},{"uid":"3626bcdc48fd31fa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/461//#testresult/3626bcdc48fd31fa","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753773004276,"stop":1753773005520,"duration":1244}},{"uid":"3dbde4833ced0bfa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/460//#testresult/3dbde4833ced0bfa","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753686685576,"stop":1753686686500,"duration":924}},{"uid":"8e7595c560c0d4ee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/459//#testresult/8e7595c560c0d4ee","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753600027344,"stop":1753600028061,"duration":717}},{"uid":"fcdfda4630a3c55f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/458//#testresult/fcdfda4630a3c55f","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753513639626,"stop":1753513641332,"duration":1706}},{"uid":"677a3da7fa0f433d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/457//#testresult/677a3da7fa0f433d","status":"passed","time":{"start":1753433522624,"stop":1753433526532,"duration":3908}},{"uid":"3121e4e70d2470d7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/456//#testresult/3121e4e70d2470d7","status":"passed","time":{"start":1753427363318,"stop":1753427366818,"duration":3500}},{"uid":"c34a289a402623d4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/455//#testresult/c34a289a402623d4","status":"passed","time":{"start":1753366959695,"stop":1753366963176,"duration":3481}},{"uid":"3842aadf5f5852b4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/454//#testresult/3842aadf5f5852b4","status":"passed","time":{"start":1753351331046,"stop":1753351333990,"duration":2944}},{"uid":"eac7bdd608cdd128","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/453//#testresult/eac7bdd608cdd128","status":"passed","time":{"start":1753340975065,"stop":1753340978563,"duration":3498}},{"uid":"b3c174b643811eba","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/452//#testresult/b3c174b643811eba","status":"passed","time":{"start":1753254600019,"stop":1753254603512,"duration":3493}},{"uid":"9aff05ae04ddfdd5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/451//#testresult/9aff05ae04ddfdd5","status":"passed","time":{"start":1753168167070,"stop":1753168169012,"duration":1942}},{"uid":"c06ff8249fe5ff21","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/450//#testresult/c06ff8249fe5ff21","status":"passed","time":{"start":1753081886218,"stop":1753081889905,"duration":3687}},{"uid":"8a6538f9a744fb62","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/449//#testresult/8a6538f9a744fb62","status":"passed","time":{"start":1752995242598,"stop":1752995246118,"duration":3520}},{"uid":"e02e64feda8930a1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/448//#testresult/e02e64feda8930a1","status":"passed","time":{"start":1752908872124,"stop":1752908876106,"duration":3982}},{"uid":"e349776160d92b04","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/447//#testresult/e349776160d92b04","status":"passed","time":{"start":1752822597496,"stop":1752822601930,"duration":4434}},{"uid":"2ea423df916d35b1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/446//#testresult/2ea423df916d35b1","status":"passed","time":{"start":1752736154040,"stop":1752736157145,"duration":3105}},{"uid":"9a67870f7b1dafb4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/445//#testresult/9a67870f7b1dafb4","status":"passed","time":{"start":1752672633968,"stop":1752672636735,"duration":2767}}]},"tags":["callback","happy_path"]},"source":"dfde662ce28eeb87.json","parameterValues":[]}