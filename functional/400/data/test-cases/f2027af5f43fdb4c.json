{"uid":"f2027af5f43fdb4c","name":"Cannot send RTP with expired date","fullName":"tests.test_debtor_service_provider_availability#test_send_rtp_to_cbi_expired_date","historyId":"6908d8a096f06149222842bbb65d22a3","time":{"start":1750576083514,"stop":1750576084537,"duration":1023},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with expired date')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_expired_date():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['expiryDate'] = '2020-01-01'\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id, secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(\n            secrets.CBI_client_PFX_base64,\n            secrets.CBI_client_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider_availability.py:107: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750576006137,"stop":1750576006192,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider_availability"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2508-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":8,"skipped":0,"passed":32,"unknown":0,"total":47},"items":[{"uid":"a0b83586e42d9e01","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/399//#testresult/a0b83586e42d9e01","status":"passed","time":{"start":1750489650622,"stop":1750489651933,"duration":1311}},{"uid":"f6d98fd2e15244b3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/398//#testresult/f6d98fd2e15244b3","status":"passed","time":{"start":1750403244236,"stop":1750403245451,"duration":1215}},{"uid":"a6883cd847111104","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/397//#testresult/a6883cd847111104","status":"passed","time":{"start":1750335016899,"stop":1750335017991,"duration":1092}},{"uid":"4987014ce39b8de3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/396//#testresult/4987014ce39b8de3","status":"passed","time":{"start":1750329656525,"stop":1750329658095,"duration":1570}},{"uid":"a09df8b5e8f78d75","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/395//#testresult/a09df8b5e8f78d75","status":"passed","time":{"start":1750328593385,"stop":1750328594283,"duration":898}},{"uid":"6cec53570e646e5c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/394//#testresult/6cec53570e646e5c","status":"passed","time":{"start":1750317553003,"stop":1750317554071,"duration":1068}},{"uid":"c093be669e1f7be9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/393//#testresult/c093be669e1f7be9","status":"passed","time":{"start":1750316877619,"stop":1750316879509,"duration":1890}},{"uid":"61370a42890435a0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/392//#testresult/61370a42890435a0","status":"passed","time":{"start":1750230493978,"stop":1750230495643,"duration":1665}},{"uid":"9f043705b669a870","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/391//#testresult/9f043705b669a870","status":"passed","time":{"start":1750170144424,"stop":1750170145670,"duration":1246}},{"uid":"ef2ae368aef5a443","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/389//#testresult/ef2ae368aef5a443","status":"passed","time":{"start":1750144059030,"stop":1750144060529,"duration":1499}},{"uid":"dd8383a1a719042c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/388//#testresult/dd8383a1a719042c","status":"passed","time":{"start":1750069040182,"stop":1750069041588,"duration":1406}},{"uid":"337d55609e002bcd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/387//#testresult/337d55609e002bcd","status":"passed","time":{"start":1750057720667,"stop":1750057721783,"duration":1116}},{"uid":"e4ff905926caca4e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/386//#testresult/e4ff905926caca4e","status":"passed","time":{"start":1749971258332,"stop":1749971259478,"duration":1146}},{"uid":"a8496a8087256cc0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/385//#testresult/a8496a8087256cc0","status":"passed","time":{"start":1749884864172,"stop":1749884865398,"duration":1226}},{"uid":"9e1fb43c394c0192","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/384//#testresult/9e1fb43c394c0192","status":"passed","time":{"start":1749810130632,"stop":1749810131833,"duration":1201}},{"uid":"246c20c7eb80cc8d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/383//#testresult/246c20c7eb80cc8d","status":"passed","time":{"start":1749805358444,"stop":1749805360267,"duration":1823}},{"uid":"a5d797b3d830ca06","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/382//#testresult/a5d797b3d830ca06","status":"passed","time":{"start":1749803885634,"stop":1749803886856,"duration":1222}},{"uid":"c19fcba9da7b64c3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/381//#testresult/c19fcba9da7b64c3","status":"passed","time":{"start":1749802608614,"stop":1749802609562,"duration":948}},{"uid":"5dac4170cbf98cf2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/380//#testresult/5dac4170cbf98cf2","status":"passed","time":{"start":1749801540235,"stop":1749801541479,"duration":1244}},{"uid":"728198d7a1ab4f8e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/378//#testresult/728198d7a1ab4f8e","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749800522304,"stop":1749800522304,"duration":0}}]},"tags":["cbi","unhappy_path","send"]},"source":"f2027af5f43fdb4c.json","parameterValues":[]}