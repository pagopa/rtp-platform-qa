{"uid":"3129e3d1e6631297","name":"An RTP callback with status ACTC is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback_DS_05_ACTC_compliant","historyId":"4b2bd33e1a231657dc457cb580c88b06","time":{"start":1759908050083,"stop":1759908052834,"duration":2751},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP with status ACTC')\n    @allure.title('An RTP callback with status ACTC is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback_DS_05_ACTC_compliant():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        rtp_reader_access_token = get_valid_access_token(\n            client_id=secrets.rtp_reader.client_id,\n            client_secret=secrets.rtp_reader.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        activation_response = activate(\n            debtor_service_provider_access_token,\n            rtp_data['payer']['payerId'],\n            secrets.debtor_service_provider.service_provider_id,\n        )\n    \n        assert activation_response.status_code == 201\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_callback.py:188: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759908023720,"stop":1759908023771,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP with status ACTC"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2588-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":53,"broken":19,"skipped":0,"passed":31,"unknown":0,"total":103},"items":[{"uid":"dd73e9ea510fc8bc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/557//#testresult/dd73e9ea510fc8bc","status":"passed","time":{"start":1759821684567,"stop":1759821687650,"duration":3083}},{"uid":"7af6a646f57f3286","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/556//#testresult/7af6a646f57f3286","status":"passed","time":{"start":1759735334597,"stop":1759735339001,"duration":4404}},{"uid":"d1d519a88eac09d0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/555//#testresult/d1d519a88eac09d0","status":"passed","time":{"start":1759648713405,"stop":1759648716287,"duration":2882}},{"uid":"7e2648181be16ea6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/554//#testresult/7e2648181be16ea6","status":"passed","time":{"start":1759562352478,"stop":1759562356880,"duration":4402}},{"uid":"a554b659ce2706a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/553//#testresult/a554b659ce2706a","status":"passed","time":{"start":1759483553790,"stop":1759483558369,"duration":4579}},{"uid":"a39cba697a25149a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/552//#testresult/a39cba697a25149a","status":"passed","time":{"start":1759476031461,"stop":1759476036126,"duration":4665}},{"uid":"df2f7e8c9910b2df","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/551//#testresult/df2f7e8c9910b2df","status":"passed","time":{"start":1759389608509,"stop":1759389611523,"duration":3014}},{"uid":"7992e7558a10f2da","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/550//#testresult/7992e7558a10f2da","status":"passed","time":{"start":1759315762492,"stop":1759315765576,"duration":3084}},{"uid":"3820a70f020d2579","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/549//#testresult/3820a70f020d2579","status":"passed","time":{"start":1759303338625,"stop":1759303341511,"duration":2886}},{"uid":"72433893deccbb6e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/548//#testresult/72433893deccbb6e","status":"passed","time":{"start":1759216945923,"stop":1759216949305,"duration":3382}},{"uid":"fdbf8b5a7ebfb727","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/547//#testresult/fdbf8b5a7ebfb727","status":"passed","time":{"start":1759130559863,"stop":1759130562728,"duration":2865}},{"uid":"ac28a184c5ed4ae4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/546//#testresult/ac28a184c5ed4ae4","status":"passed","time":{"start":1759043960277,"stop":1759043964725,"duration":4448}},{"uid":"19e24532a730e231","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/545//#testresult/19e24532a730e231","status":"passed","time":{"start":1758957527014,"stop":1758957529923,"duration":2909}},{"uid":"cc6b4e48ffe383ee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/544//#testresult/cc6b4e48ffe383ee","status":"passed","time":{"start":1758871282760,"stop":1758871287232,"duration":4472}},{"uid":"d57a90dbf9f35599","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/543//#testresult/d57a90dbf9f35599","status":"passed","time":{"start":1758784899104,"stop":1758784901956,"duration":2852}},{"uid":"c8148b61fa6608d5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/542//#testresult/c8148b61fa6608d5","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1758698494106,"stop":1758698496899,"duration":2793}},{"uid":"ecc14e5bd30dca51","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/541//#testresult/ecc14e5bd30dca51","status":"passed","time":{"start":1758612123336,"stop":1758612127571,"duration":4235}},{"uid":"2170393e2807ab75","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/540//#testresult/2170393e2807ab75","status":"passed","time":{"start":1758525786361,"stop":1758525790920,"duration":4559}},{"uid":"e71d4bb9ffbc3968","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/539//#testresult/e71d4bb9ffbc3968","status":"passed","time":{"start":1758439132489,"stop":1758439136740,"duration":4251}},{"uid":"61d2eabfc5535707","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/538//#testresult/61d2eabfc5535707","status":"passed","time":{"start":1758352790774,"stop":1758352795152,"duration":4378}}]},"tags":["callback","happy_path"]},"source":"3129e3d1e6631297.json","parameterValues":[]}