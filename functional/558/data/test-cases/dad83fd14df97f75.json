{"uid":"dad83fd14df97f75","name":"Happy path: a debt position is created and published in DEV environment","fullName":"tests.test_debt_position_create_delete#test_create_debt_position","historyId":"27746db29d0e756bde4b3daa55a2ecf4","time":{"start":1759908190100,"stop":1759908251201,"duration":61101},"description":"\nVerify that after creating and publishing a debt position,\nthe RTP lookup returns exactly one entry for the notice number.\n","descriptionHtml":"<p>Verify that after creating and publishing a debt position,<br />\nthe RTP lookup returns exactly one entry for the notice number.</p>\n","status":"broken","statusMessage":"requests.exceptions.HTTPError: 504 Server Error: Gateway Time-out for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"setup_data = {'debtor_fc': 'SPRNRC40L54X000L', 'iupd': 'f776fa108cfa4ccab', 'iuv': '28664655959437933', 'organization_id': '02438750586', ...}\nenvironment = {'create_function': <function environment.<locals>.<lambda> at 0x7f472802e2a0>, 'delete_function': <function environme...a> at 0x7f472802c2c0>, 'get_function': <function environment.<locals>.<lambda> at 0x7f472802e160>, 'is_dev': True, ...}\n\n    @allure.feature('Debt Positions')\n    @allure.story('Create Debt Position')\n    @pytest.mark.debt_positions\n    @pytest.mark.happy_path\n    @pytest.mark.timeout(TEST_TIMEOUT_SEC)\n    def test_create_debt_position(setup_data, environment):\n        \"\"\"\n        Verify that after creating and publishing a debt position,\n        the RTP lookup returns exactly one entry for the notice number.\n        \"\"\"\n        allure.dynamic.title(f\"Happy path: a debt position is created and published in {environment['name']} environment\")\n    \n        subscription_key = setup_data['subscription_key']\n        organization_id = setup_data['organization_id']\n        debtor_fc = setup_data['debtor_fc']\n        iupd = setup_data['iupd']\n        iuv = setup_data['iuv']\n    \n        payload = create_debt_position_payload(debtor_fc=debtor_fc, iupd=iupd, iuv=iuv)\n    \n        create_function = environment['create_function']\n    \n        res = create_function(subscription_key, organization_id, payload, to_publish=True)\n        assert res.status_code == 201, f'Expected 201 but got {res.status_code}'\n        body = res.json()\n    \n        nav = body['paymentOption'][0]['nav']\n        expected_description = body['paymentOption'][0]['description']\n        expected_amount = body['paymentOption'][0]['amount']\n    \n>       access_token = get_valid_access_token(\n            client_id=secrets.rtp_reader.client_id,\n            client_secret=secrets.rtp_reader.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_debt_position_create_delete.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [504]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 504 Server Error: Gateway Time-out for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759908023720,"stop":1759908023771,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"environment","time":{"start":1759908187513,"stop":1759908187513,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_data","time":{"start":1759908187513,"stop":1759908190100,"duration":2587},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Debt Positions"},{"name":"story","value":"Create Debt Position"},{"name":"tag","value":"timeout(300)"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"debt_positions"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debt_position_create_delete"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2588-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debt_position_create_delete"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"environment","value":"{'name': 'DEV', 'is_dev': True, 'create_function': <function environment.<locals>.<lambda> at 0x7f472802e2a0>, 'get_function': <function environment.<locals>.<lambda> at 0x7f472802e160>, 'delete_function': <function environment.<locals>.<lambda> at 0x7f472802c2c0>, 'update_function': <function environment.<locals>.<lambda> at 0x7f472802e700>, 'subscription_key': '8c0b1bff2c7f49c6aaf34b93a546fda0', 'organization_id': '02438750586'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["debt_positions","timeout(300)","happy_path"]},"source":"dad83fd14df97f75.json","parameterValues":["{'name': 'DEV', 'is_dev': True, 'create_function': <function environment.<locals>.<lambda> at 0x7f472802e2a0>, 'get_function': <function environment.<locals>.<lambda> at 0x7f472802e160>, 'delete_function': <function environment.<locals>.<lambda> at 0x7f472802c2c0>, 'update_function': <function environment.<locals>.<lambda> at 0x7f472802e700>, 'subscription_key': '8c0b1bff2c7f49c6aaf34b93a546fda0', 'organization_id': '02438750586'}"]}