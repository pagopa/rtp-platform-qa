{"uid":"dc9c938cc80c70a6","name":"Send GPD message with invalid payee_id and verify no RTP is created","fullName":"tests.test_producer_gpd_message#test_send_producer_gpd_message_invalid_registry_payee","historyId":"1264c21e0a0416347b354c00285607f6","time":{"start":1759908350002,"stop":1759908350522,"duration":520},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('GPD Message')\n    @allure.story('Send GPD message to queue with invalid payee')\n    @allure.title('Send GPD message with invalid payee_id and verify no RTP is created')\n    @pytest.mark.producer_gpd_message\n    @pytest.mark.happy_path\n    @pytest.mark.timeout(TEST_TIMEOUT_SEC)\n    def test_send_producer_gpd_message_invalid_registry_payee():\n>       debtor_fc = activate_new_debtor()\n\nfunctional-tests/tests/test_producer_gpd_message.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/producer_gpd_utils.py:174: in activate_new_debtor\n    return activate_debtor(fiscal_code)\nutils/producer_gpd_utils.py:145: in activate_debtor\n    debtor_service_provider_token = get_valid_access_token(\napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759908023720,"stop":1759908023771,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('GPD Message')\n    @allure.story('Send GPD message to queue with invalid payee')\n    @allure.title('Send GPD message with invalid payee_id and verify no RTP is created')\n    @pytest.mark.producer_gpd_message\n    @pytest.mark.happy_path\n    @pytest.mark.timeout(TEST_TIMEOUT_SEC)\n    def test_send_producer_gpd_message_invalid_registry_payee():\n>       debtor_fc = activate_new_debtor()\n\nfunctional-tests/tests/test_producer_gpd_message.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/producer_gpd_utils.py:174: in activate_new_debtor\n    return activate_debtor(fiscal_code)\nutils/producer_gpd_utils.py:145: in activate_debtor\n    debtor_service_provider_token = get_valid_access_token(\napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","steps":[],"attachments":[{"uid":"6727f33caf2896b3","name":"stdout","source":"6727f33caf2896b3.txt","type":"text/plain","size":44}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"feature","value":"GPD Message"},{"name":"story","value":"Send GPD message to queue with invalid payee"},{"name":"tag","value":"timeout(300)"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"producer_gpd_message"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_producer_gpd_message"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2588-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_producer_gpd_message"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"95450ff417857bf8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/557//#testresult/95450ff417857bf8","status":"failed","statusDetails":"Failed: Failed to send valid_payee message after 3 attempts","time":{"start":1759822137688,"stop":1759822148421,"duration":10733}},{"uid":"271d564c7475af5a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/556//#testresult/271d564c7475af5a","status":"failed","statusDetails":"Failed: Failed to send valid_payee message after 3 attempts","time":{"start":1759735721895,"stop":1759735733192,"duration":11297}},{"uid":"bf5c7ed5363e8281","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/555//#testresult/bf5c7ed5363e8281","status":"failed","statusDetails":"Failed: Failed to send valid_payee message after 3 attempts","time":{"start":1759650016567,"stop":1759650027325,"duration":10758}},{"uid":"e8856f5a1aae2787","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/554//#testresult/e8856f5a1aae2787","status":"failed","statusDetails":"Failed: Failed to send valid_payee message after 3 attempts","time":{"start":1759563679904,"stop":1759563691139,"duration":11235}},{"uid":"a230773851c8fa98","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/553//#testresult/a230773851c8fa98","status":"failed","statusDetails":"Failed: Failed to send valid_payee message after 3 attempts","time":{"start":1759484844261,"stop":1759484855555,"duration":11294}}]},"tags":["timeout(300)","producer_gpd_message","happy_path"]},"source":"dc9c938cc80c70a6.json","parameterValues":[]}