{"uid":"cc4f93346ebbf27e","name":"An RTP callback is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback_DS_04b_compliant","historyId":"475e3c0708b05c2b7bfae9db8dc283af","time":{"start":1759908043004,"stop":1759908046308,"duration":3304},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('An RTP callback is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback_DS_04b_compliant():\n    \n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        activation_response = activate(\n            debtor_service_provider_access_token,\n            rtp_data['payer']['payerId'],\n            secrets.debtor_service_provider.service_provider_id,\n        )\n        assert activation_response.status_code == 201\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n>       assert send_response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_callback.py:50: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759908023720,"stop":1759908023771,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2588-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":44,"broken":29,"skipped":0,"passed":179,"unknown":0,"total":252},"items":[{"uid":"90cd6c29af30f8dc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/557//#testresult/90cd6c29af30f8dc","status":"passed","time":{"start":1759821673827,"stop":1759821681237,"duration":7410}},{"uid":"2ba93a5b40b3548c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/556//#testresult/2ba93a5b40b3548c","status":"passed","time":{"start":1759735324084,"stop":1759735329785,"duration":5701}},{"uid":"76c9720e7f55ecfe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/555//#testresult/76c9720e7f55ecfe","status":"passed","time":{"start":1759648706044,"stop":1759648710122,"duration":4078}},{"uid":"c1c87e42f8099b88","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/554//#testresult/c1c87e42f8099b88","status":"passed","time":{"start":1759562342796,"stop":1759562347745,"duration":4949}},{"uid":"a6e7b817f30e3f8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/553//#testresult/a6e7b817f30e3f8","status":"passed","time":{"start":1759483544841,"stop":1759483549008,"duration":4167}},{"uid":"5915d1f6568d43c3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/552//#testresult/5915d1f6568d43c3","status":"passed","time":{"start":1759476022831,"stop":1759476026982,"duration":4151}},{"uid":"3b3b1e8be1e18cd9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/551//#testresult/3b3b1e8be1e18cd9","status":"passed","time":{"start":1759389601588,"stop":1759389605478,"duration":3890}},{"uid":"3d61ed894eb5bd84","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/550//#testresult/3d61ed894eb5bd84","status":"passed","time":{"start":1759315756300,"stop":1759315759273,"duration":2973}},{"uid":"dc5fe83c82e006c2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/549//#testresult/dc5fe83c82e006c2","status":"passed","time":{"start":1759303332422,"stop":1759303335268,"duration":2846}},{"uid":"c2f5501ef342b3dd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/548//#testresult/c2f5501ef342b3dd","status":"passed","time":{"start":1759216938374,"stop":1759216942144,"duration":3770}},{"uid":"d4837d8e023301d9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/547//#testresult/d4837d8e023301d9","status":"passed","time":{"start":1759130552842,"stop":1759130556692,"duration":3850}},{"uid":"c410f63e7717adbf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/546//#testresult/c410f63e7717adbf","status":"passed","time":{"start":1759043951105,"stop":1759043955614,"duration":4509}},{"uid":"1991e2d06f95d683","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/545//#testresult/1991e2d06f95d683","status":"passed","time":{"start":1758957520395,"stop":1758957523802,"duration":3407}},{"uid":"856d5b2b696296bd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/544//#testresult/856d5b2b696296bd","status":"passed","time":{"start":1758871273500,"stop":1758871277890,"duration":4390}},{"uid":"11b43a3c9f449e40","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/543//#testresult/11b43a3c9f449e40","status":"passed","time":{"start":1758784892210,"stop":1758784895947,"duration":3737}},{"uid":"7f9dbdd91c2da271","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/542//#testresult/7f9dbdd91c2da271","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1758698488351,"stop":1758698490947,"duration":2596}},{"uid":"afe0b0f84ef9cd9c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/541//#testresult/afe0b0f84ef9cd9c","status":"passed","time":{"start":1758612110767,"stop":1758612118849,"duration":8082}},{"uid":"e030df50ccaa3d48","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/540//#testresult/e030df50ccaa3d48","status":"passed","time":{"start":1758525776638,"stop":1758525781554,"duration":4916}},{"uid":"a903313cbe829e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/539//#testresult/a903313cbe829e","status":"passed","time":{"start":1758439123074,"stop":1758439128059,"duration":4985}},{"uid":"a5df288c6b328639","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/538//#testresult/a5df288c6b328639","status":"passed","time":{"start":1758352780829,"stop":1758352786132,"duration":5303}}]},"tags":["callback","happy_path"]},"source":"cc4f93346ebbf27e.json","parameterValues":[]}