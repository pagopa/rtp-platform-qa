{"uid":"a88787da2e1a2581","name":"An RTP callback is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback_DS_08N_compliant","historyId":"d5748ad5568cbf463a334911f922c3be","time":{"start":1759908046318,"stop":1759908050077,"duration":3759},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('An RTP callback is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback_DS_08N_compliant():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        rtp_reader_access_token = get_valid_access_token(\n            client_id=secrets.rtp_reader.client_id,\n            client_secret=secrets.rtp_reader.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        activation_response = activate(\n            debtor_service_provider_access_token,\n            rtp_data['payer']['payerId'],\n            secrets.debtor_service_provider.service_provider_id,\n        )\n    \n        assert activation_response.status_code == 201\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_callback.py:115: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759908023720,"stop":1759908023771,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2588-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":53,"broken":19,"skipped":0,"passed":31,"unknown":0,"total":103},"items":[{"uid":"dbfe8aab7e3cc9d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/557//#testresult/dbfe8aab7e3cc9d","status":"passed","time":{"start":1759821681238,"stop":1759821684565,"duration":3327}},{"uid":"b4a5ad7c30b66305","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/556//#testresult/b4a5ad7c30b66305","status":"passed","time":{"start":1759735329787,"stop":1759735334595,"duration":4808}},{"uid":"e68ccd1280b716bc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/555//#testresult/e68ccd1280b716bc","status":"passed","time":{"start":1759648710123,"stop":1759648713403,"duration":3280}},{"uid":"992ba42a5497d7f6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/554//#testresult/992ba42a5497d7f6","status":"passed","time":{"start":1759562347746,"stop":1759562352477,"duration":4731}},{"uid":"625abf5651c0fddb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/553//#testresult/625abf5651c0fddb","status":"passed","time":{"start":1759483549010,"stop":1759483553789,"duration":4779}},{"uid":"b29a12caf8b6dda0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/552//#testresult/b29a12caf8b6dda0","status":"passed","time":{"start":1759476026984,"stop":1759476031460,"duration":4476}},{"uid":"7bca7587b8623c9e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/551//#testresult/7bca7587b8623c9e","status":"passed","time":{"start":1759389605480,"stop":1759389608508,"duration":3028}},{"uid":"5f71a721c2e06090","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/550//#testresult/5f71a721c2e06090","status":"passed","time":{"start":1759315759274,"stop":1759315762491,"duration":3217}},{"uid":"50a91d1d9b11e5f2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/549//#testresult/50a91d1d9b11e5f2","status":"passed","time":{"start":1759303335269,"stop":1759303338624,"duration":3355}},{"uid":"5944cfd472f38780","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/548//#testresult/5944cfd472f38780","status":"passed","time":{"start":1759216942145,"stop":1759216945921,"duration":3776}},{"uid":"f92248d7cdf38604","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/547//#testresult/f92248d7cdf38604","status":"passed","time":{"start":1759130556693,"stop":1759130559862,"duration":3169}},{"uid":"998aa968b68bc95","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/546//#testresult/998aa968b68bc95","status":"passed","time":{"start":1759043955615,"stop":1759043960275,"duration":4660}},{"uid":"23b7074d70ed6f11","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/545//#testresult/23b7074d70ed6f11","status":"passed","time":{"start":1758957523804,"stop":1758957527013,"duration":3209}},{"uid":"624e13b0f3ed9568","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/544//#testresult/624e13b0f3ed9568","status":"passed","time":{"start":1758871277891,"stop":1758871282759,"duration":4868}},{"uid":"99c6073478258df5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/543//#testresult/99c6073478258df5","status":"passed","time":{"start":1758784895949,"stop":1758784899103,"duration":3154}},{"uid":"e1b0494db97c16e4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/542//#testresult/e1b0494db97c16e4","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1758698490960,"stop":1758698494100,"duration":3140}},{"uid":"b31cb824c11b35f5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/541//#testresult/b31cb824c11b35f5","status":"passed","time":{"start":1758612118850,"stop":1758612123335,"duration":4485}},{"uid":"c3c3c1c868bb7099","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/540//#testresult/c3c3c1c868bb7099","status":"passed","time":{"start":1758525781555,"stop":1758525786360,"duration":4805}},{"uid":"4b095671b09b397d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/539//#testresult/4b095671b09b397d","status":"passed","time":{"start":1758439128060,"stop":1758439132487,"duration":4427}},{"uid":"2511de6391168eee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/538//#testresult/2511de6391168eee","status":"passed","time":{"start":1758352786134,"stop":1758352790773,"duration":4639}}]},"tags":["callback","happy_path"]},"source":"a88787da2e1a2581.json","parameterValues":[]}