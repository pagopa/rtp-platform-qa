{"uid":"31d746ffdef3c249","name":"An RTP is sent to ICCREA service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_iccrea","historyId":"43c6e6f1884b3efb611eee04b5b6eb0c","time":{"start":1759390829715,"stop":1759390832795,"duration":3080},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider')\n    @allure.title('An RTP is sent to ICCREA service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.iccrea\n    def test_send_rtp_to_iccrea():\n        rtp_data = generate_rtp_data(payer_id=secrets.iccrea_activated_fiscal_code)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:143: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759389586677,"stop":1759389586736,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider"},{"name":"tag","value":"iccrea"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2563-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":89,"broken":19,"skipped":0,"passed":20,"unknown":0,"total":128},"items":[{"uid":"409e00765acc6ff2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/550//#testresult/409e00765acc6ff2","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759316230328,"stop":1759316232860,"duration":2532}},{"uid":"d70b23f9af82e918","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/549//#testresult/d70b23f9af82e918","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759303790251,"stop":1759303793612,"duration":3361}},{"uid":"c12bdcab0dacb9ff","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/548//#testresult/c12bdcab0dacb9ff","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759217375865,"stop":1759217378997,"duration":3132}},{"uid":"473bb3a44ef25d2f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/547//#testresult/473bb3a44ef25d2f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759130918948,"stop":1759130921496,"duration":2548}},{"uid":"cd58f436ac58f177","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/546//#testresult/cd58f436ac58f177","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759044371901,"stop":1759044374983,"duration":3082}},{"uid":"dbf63c53b3199820","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/545//#testresult/dbf63c53b3199820","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758957736694,"stop":1758957739729,"duration":3035}},{"uid":"5c828098cd1f4e0d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/544//#testresult/5c828098cd1f4e0d","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758872023757,"stop":1758872027301,"duration":3544}},{"uid":"9c959319d1134611","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/543//#testresult/9c959319d1134611","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758786163671,"stop":1758786167128,"duration":3457}},{"uid":"e653be049dd592fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/542//#testresult/e653be049dd592fe","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1758699769070,"stop":1758699770204,"duration":1134}},{"uid":"3a04db14b75f0352","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/541//#testresult/3a04db14b75f0352","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758612596961,"stop":1758612600501,"duration":3540}},{"uid":"ebe06c3d7d516132","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/540//#testresult/ebe06c3d7d516132","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758526260848,"stop":1758526264395,"duration":3547}},{"uid":"166d17d31a1b6af2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/539//#testresult/166d17d31a1b6af2","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758439602334,"stop":1758439605368,"duration":3034}},{"uid":"7be521cb216a9877","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/538//#testresult/7be521cb216a9877","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758353261734,"stop":1758353265339,"duration":3605}},{"uid":"839407dc4ce244f1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/537//#testresult/839407dc4ce244f1","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1758271094559,"stop":1758271095103,"duration":544}},{"uid":"df2ef90ecdeae319","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/536//#testresult/df2ef90ecdeae319","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758267121171,"stop":1758267123826,"duration":2655}},{"uid":"34dcc28b7183eb41","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/535//#testresult/34dcc28b7183eb41","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758180727540,"stop":1758180730924,"duration":3384}},{"uid":"ab8966ec210f720b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/534//#testresult/ab8966ec210f720b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758094305429,"stop":1758094308054,"duration":2625}},{"uid":"c6958e29fc3e0952","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/533//#testresult/c6958e29fc3e0952","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758007974795,"stop":1758007977924,"duration":3129}},{"uid":"d5d70386b31ecd80","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/532//#testresult/d5d70386b31ecd80","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757921599672,"stop":1757921602799,"duration":3127}},{"uid":"8936aaee64d3febb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/531//#testresult/8936aaee64d3febb","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757835161863,"stop":1757835165380,"duration":3517}}]},"tags":["iccrea","real_integration","send","happy_path"]},"source":"31d746ffdef3c249.json","parameterValues":[]}