{"uid":"dcf9a17fb613cd51","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1760167630948,"stop":1760167633765,"duration":2817},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1760167073533,"stop":1760167073592,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2644-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":143,"broken":31,"skipped":0,"passed":32,"unknown":0,"total":206},"items":[{"uid":"77e191f2aa19ed29","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/563//#testresult/77e191f2aa19ed29","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760081345692,"stop":1760081348765,"duration":3073}},{"uid":"3fa71ed3844cab9d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/562//#testresult/3fa71ed3844cab9d","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759994976825,"stop":1759994979941,"duration":3116}},{"uid":"5f08f22910e9a859","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/561//#testresult/5f08f22910e9a859","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759929508211,"stop":1759929511273,"duration":3062}},{"uid":"e1994f4a6ee885fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/560//#testresult/e1994f4a6ee885fe","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759921301883,"stop":1759921302660,"duration":777}},{"uid":"6963c464701dac60","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/559//#testresult/6963c464701dac60","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759920068480,"stop":1759920069279,"duration":799}},{"uid":"447bcb84766f011f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/558//#testresult/447bcb84766f011f","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1759908351545,"stop":1759908352061,"duration":516}},{"uid":"c8296234d1653953","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/557//#testresult/c8296234d1653953","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759822161385,"stop":1759822164303,"duration":2918}},{"uid":"619148bed92bd4c5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/556//#testresult/619148bed92bd4c5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759735748460,"stop":1759735751816,"duration":3356}},{"uid":"2cb89e2215cbf549","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/555//#testresult/2cb89e2215cbf549","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759650040493,"stop":1759650043663,"duration":3170}},{"uid":"a594cb8c6be44c6e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/554//#testresult/a594cb8c6be44c6e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759563706180,"stop":1759563709955,"duration":3775}},{"uid":"37929561b6cb7ca8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/553//#testresult/37929561b6cb7ca8","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759484870673,"stop":1759484874468,"duration":3795}},{"uid":"1f34e85b88bcd462","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/552//#testresult/1f34e85b88bcd462","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1759476836156,"stop":1759476836752,"duration":596}},{"uid":"cf710b6a637a0265","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/551//#testresult/cf710b6a637a0265","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759390825207,"stop":1759390828593,"duration":3386}},{"uid":"b435c20412e025f1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/550//#testresult/b435c20412e025f1","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759316225993,"stop":1759316229108,"duration":3115}},{"uid":"fd273dfa2c3af665","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/549//#testresult/fd273dfa2c3af665","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759303785636,"stop":1759303788974,"duration":3338}},{"uid":"6597c2d14e078665","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/548//#testresult/6597c2d14e078665","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759217371486,"stop":1759217374653,"duration":3167}},{"uid":"29a9df9246fe61da","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/547//#testresult/29a9df9246fe61da","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759130914875,"stop":1759130917905,"duration":3030}},{"uid":"912f896681cc0439","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/546//#testresult/912f896681cc0439","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759044366978,"stop":1759044370437,"duration":3459}},{"uid":"c25774a215cba7aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/545//#testresult/c25774a215cba7aa","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758957732098,"stop":1758957735557,"duration":3459}},{"uid":"cf3cb7025a1012f6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/544//#testresult/cf3cb7025a1012f6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758872018579,"stop":1758872022242,"duration":3663}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"dcf9a17fb613cd51.json","parameterValues":[]}