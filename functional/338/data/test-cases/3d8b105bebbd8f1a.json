{"uid":"3d8b105bebbd8f1a","name":"A debtor cannot be activated more than once","fullName":"tests.test_activation#test_fail_activate_debtor_two_times","historyId":"8704b37d564cbbe926da79ebe6202dbe","time":{"start":1748070402782,"stop":1748070404198,"duration":1416},"status":"failed","statusMessage":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","statusTrace":"@allure.feature('Activation')\n    @allure.story('Debtor activation')\n    @allure.title('A debtor cannot be activated more than once')\n    @pytest.mark.activation\n    @pytest.mark.unhappy_path\n    def test_fail_activate_debtor_two_times():\n        access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                              client_secret=secrets.debtor_service_provider.client_secret,\n                                              access_token_function=get_access_token)\n        debtor_fc = fake_fc()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, f'Error activating debtor, expected 201 but got {res.status_code}'\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 409, f'Error activating debtor, expected 409 but got {res.status_code}'\n>       assert res.json()['errors'][0]['code'] == '01031000F'\nE       AssertionError: assert '01031000E' == '01031000F'\nE         \nE         - 01031000F\nE         ?         ^\nE         + 01031000E\nE         ?         ^\n\nfunctional-tests/tests/test_activation.py:115: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748070354680,"stop":1748070354737,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Debtor activation"},{"name":"feature","value":"Activation"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"activation"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2538-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":33,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":33},"items":[{"uid":"b7f5a303279b67b2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/337//#testresult/b7f5a303279b67b2","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747984028154,"stop":1747984029216,"duration":1062}},{"uid":"db0f22ea597f17ef","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/336//#testresult/db0f22ea597f17ef","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747897629137,"stop":1747897630748,"duration":1611}},{"uid":"152e33cf17db4d28","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/335//#testresult/152e33cf17db4d28","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747840412810,"stop":1747840414252,"duration":1442}},{"uid":"d28828d21d51046b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/334//#testresult/d28828d21d51046b","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747811220069,"stop":1747811221238,"duration":1169}},{"uid":"c9c0deb28428c26f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/333//#testresult/c9c0deb28428c26f","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747724831743,"stop":1747724832998,"duration":1255}},{"uid":"6753dc714b1d6eb0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/332//#testresult/6753dc714b1d6eb0","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747661441263,"stop":1747661442840,"duration":1577}},{"uid":"7a7f065efce0d9c7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/331//#testresult/7a7f065efce0d9c7","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747638461964,"stop":1747638463545,"duration":1581}},{"uid":"cdbc632e104246b4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/330//#testresult/cdbc632e104246b4","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747551986434,"stop":1747551987920,"duration":1486}},{"uid":"2fb312b1316e19f9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/329//#testresult/2fb312b1316e19f9","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747465595731,"stop":1747465597136,"duration":1405}},{"uid":"aff3cbd92c9f1a6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/328//#testresult/aff3cbd92c9f1a6","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747379226121,"stop":1747379227684,"duration":1563}},{"uid":"807e04afd2c9a77b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/327//#testresult/807e04afd2c9a77b","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747292832085,"stop":1747292833384,"duration":1299}},{"uid":"d0d3e942184fe4e4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/326//#testresult/d0d3e942184fe4e4","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747206433531,"stop":1747206435574,"duration":2043}},{"uid":"5ac593a3d760d753","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/325//#testresult/5ac593a3d760d753","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747120051382,"stop":1747120052669,"duration":1287}},{"uid":"ca010e74b9f869f7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/324//#testresult/ca010e74b9f869f7","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747033648855,"stop":1747033650204,"duration":1349}},{"uid":"943bb845b8d3e07e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/323//#testresult/943bb845b8d3e07e","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746947212966,"stop":1746947214258,"duration":1292}},{"uid":"a8fd1c1a31dab1fc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/322//#testresult/a8fd1c1a31dab1fc","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746860798654,"stop":1746860800324,"duration":1670}},{"uid":"6b35d71ae8089d78","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/321//#testresult/6b35d71ae8089d78","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746774422901,"stop":1746774424932,"duration":2031}},{"uid":"3d43ccbd559feaf0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/320//#testresult/3d43ccbd559feaf0","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746688013450,"stop":1746688014698,"duration":1248}},{"uid":"e59fd80426ad1dbd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/319//#testresult/e59fd80426ad1dbd","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746601627578,"stop":1746601628680,"duration":1102}},{"uid":"ff4cfa1821fc510c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/318//#testresult/ff4cfa1821fc510c","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746515221538,"stop":1746515223756,"duration":2218}}]},"tags":["activation","unhappy_path"]},"source":"3d8b105bebbd8f1a.json","parameterValues":[]}