{"uid":"2063a1c8a88798c","name":"Auth endpoint returns valid token","fullName":"tests.test_debtor_service_provider_availability#test_get_cbi_access_token","historyId":"7a0cf1be62d91a7d76b46dbd95490051","time":{"start":1749485086938,"stop":1749485086938,"duration":0},"status":"broken","statusMessage":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","statusTrace":"@allure.feature('Authentication')\n    @allure.story('Client authenticates to CBI')\n    @allure.title('Auth endpoint returns valid token')\n    @pytest.mark.auth\n    def test_get_cbi_access_token():\n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id, secrets.CBI_client_secret\n        )\n>       cert, key = pfx_to_pem(\n            secrets.CBI_client_PFX_base64,\n            secrets.CBI_client_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n\nfunctional-tests/tests/test_debtor_service_provider_availability.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/cryptography.py:20: in pfx_to_pem\n    pfx_data = base64.b64decode(base64_pfx)\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/base64.py:83: in b64decode\n    s = _bytes_from_decode_data(s)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = None\n\n    def _bytes_from_decode_data(s):\n        if isinstance(s, str):\n            try:\n                return s.encode('ascii')\n            except UnicodeEncodeError:\n                raise ValueError('string argument should contain only ASCII characters')\n        if isinstance(s, bytes_types):\n            return s\n        try:\n            return memoryview(s).tobytes()\n        except TypeError:\n>           raise TypeError(\"argument should be a bytes-like object or ASCII \"\n                            \"string, not %r\" % s.__class__.__name__) from None\nE           TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/base64.py:45: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749485077345,"stop":1749485077407,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Client authenticates to CBI"},{"name":"feature","value":"Authentication"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider_availability"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2496-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":15,"unknown":0,"total":21},"items":[{"uid":"5f2814f00ae122d2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/371//#testresult/5f2814f00ae122d2","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749484928591,"stop":1749484928591,"duration":0}},{"uid":"59db225ff02c4d78","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/370//#testresult/59db225ff02c4d78","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749484606117,"stop":1749484606117,"duration":0}},{"uid":"60de0fb94a76008a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/369//#testresult/60de0fb94a76008a","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749484261256,"stop":1749484261256,"duration":0}},{"uid":"9f2f9d43d2d3a844","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/368//#testresult/9f2f9d43d2d3a844","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749483917939,"stop":1749483917940,"duration":1}},{"uid":"8683a8b326a410e8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/365//#testresult/8683a8b326a410e8","status":"passed","time":{"start":1749482105898,"stop":1749482106732,"duration":834}},{"uid":"4b98057094800d1d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/367//#testresult/4b98057094800d1d","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749482226803,"stop":1749482226803,"duration":0}},{"uid":"52aeec3c82757d72","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/52aeec3c82757d72","status":"passed","time":{"start":1749452890239,"stop":1749452891113,"duration":874}},{"uid":"a9addbfa44000f25","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/362//#testresult/a9addbfa44000f25","status":"passed","time":{"start":1749366438646,"stop":1749366439919,"duration":1273}},{"uid":"d98d139822af148d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/361//#testresult/d98d139822af148d","status":"passed","time":{"start":1749280019547,"stop":1749280020596,"duration":1049}},{"uid":"f293ac49bfb3ba7c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/f293ac49bfb3ba7c","status":"passed","time":{"start":1749193627430,"stop":1749193628286,"duration":856}},{"uid":"bf90d3597b9ec3f6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/359//#testresult/bf90d3597b9ec3f6","status":"passed","time":{"start":1749107257408,"stop":1749107258510,"duration":1102}},{"uid":"fcd5f2856fccc4eb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/358//#testresult/fcd5f2856fccc4eb","status":"passed","time":{"start":1749020837771,"stop":1749020838881,"duration":1110}},{"uid":"b73720dc85f89062","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/357//#testresult/b73720dc85f89062","status":"passed","time":{"start":1748956573376,"stop":1748956574246,"duration":870}},{"uid":"184f2e82b07f2ca4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/356//#testresult/184f2e82b07f2ca4","status":"passed","time":{"start":1748953138503,"stop":1748953139139,"duration":636}},{"uid":"70dc7d0ffc63ce2a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/355//#testresult/70dc7d0ffc63ce2a","status":"passed","time":{"start":1748934482085,"stop":1748934482715,"duration":630}},{"uid":"bf72c1fdb18bd638","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/354//#testresult/bf72c1fdb18bd638","status":"passed","time":{"start":1748848078954,"stop":1748848079711,"duration":757}},{"uid":"4c0ed88bd7515457","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/353//#testresult/4c0ed88bd7515457","status":"passed","time":{"start":1748761638503,"stop":1748761639856,"duration":1353}},{"uid":"9700955da9bde2ad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/352//#testresult/9700955da9bde2ad","status":"passed","time":{"start":1748675225801,"stop":1748675226442,"duration":641}},{"uid":"5f9d19c276655ab2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/351//#testresult/5f9d19c276655ab2","status":"passed","time":{"start":1748588842826,"stop":1748588844107,"duration":1281}},{"uid":"d8539e3818532351","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/350//#testresult/d8539e3818532351","status":"passed","time":{"start":1748534038321,"stop":1748534039119,"duration":798}}]},"tags":["auth"]},"source":"2063a1c8a88798c.json","parameterValues":[]}