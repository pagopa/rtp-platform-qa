{"uid":"a6297c468033a7c6","name":"Deactivation fails for activation by another service provider","fullName":"tests.test_deactivation#test_deactivate_debtor_wrong_service_provider","historyId":"242c5221c9d7eca4d871b5b247bcd872","time":{"start":1754464728922,"stop":1754464730452,"duration":1530},"status":"failed","statusMessage":"AssertionError: Expected 404 for deactivation by wrong service provider, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('Deactivation')\n    @allure.story('Debtor deactivation')\n    @allure.title('Deactivation fails for activation by another service provider')\n    @pytest.mark.auth\n    @pytest.mark.deactivation\n    @pytest.mark.unhappy_path\n    def test_deactivate_debtor_wrong_service_provider():\n        debtor_service_provider_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n    \n        debtor_service_provider_B_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider_B.client_id,\n            client_secret=secrets.debtor_service_provider_B.client_secret,\n            access_token_function=get_access_token\n        )\n    \n        debtor_fc = fake_fc()\n        activation_response = activate(\n            debtor_service_provider_token,\n            debtor_fc,\n            secrets.debtor_service_provider.service_provider_id\n        )\n        assert activation_response.status_code == 201, 'Error activating debtor'\n    \n        location = activation_response.headers['Location']\n        activation_id = location.split('/')[-1]\n    \n        deactivation_response = deactivate(debtor_service_provider_B_token, activation_id)\n>       assert deactivation_response.status_code == 404, f'Expected 404 for deactivation by wrong service provider, got {deactivation_response.status_code}'\nE       AssertionError: Expected 404 for deactivation by wrong service provider, got 500\nE       assert 500 == 404\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_deactivation.py:92: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1754464702852,"stop":1754464702907,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Deactivation"},{"name":"story","value":"Debtor deactivation"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"deactivation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_deactivation"},{"name":"host","value":"pkrvmjbmru5nbw0"},{"name":"thread","value":"2500-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_deactivation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":14,"skipped":0,"passed":113,"unknown":0,"total":129},"items":[{"uid":"665d829d1a277e7b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/475//#testresult/665d829d1a277e7b","status":"passed","time":{"start":1754464294081,"stop":1754464296976,"duration":2895}},{"uid":"320666b366c6df35","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/474//#testresult/320666b366c6df35","status":"passed","time":{"start":1754387686459,"stop":1754387688524,"duration":2065}},{"uid":"6c7ee745aa9d8385","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/473//#testresult/6c7ee745aa9d8385","status":"passed","time":{"start":1754377957279,"stop":1754377959047,"duration":1768}},{"uid":"333b06c02771042c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/472//#testresult/333b06c02771042c","status":"passed","time":{"start":1754377892778,"stop":1754377895428,"duration":2650}},{"uid":"65d3ac472b4d8054","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/471//#testresult/65d3ac472b4d8054","status":"failed","statusDetails":"AssertionError: Expected 404 for deactivation by wrong service provider, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754319189104,"stop":1754319191282,"duration":2178}},{"uid":"3d0ec6f01f2fb4ee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/470//#testresult/3d0ec6f01f2fb4ee","status":"passed","time":{"start":1754291653853,"stop":1754291656543,"duration":2690}},{"uid":"903026ed2684a7c7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/469//#testresult/903026ed2684a7c7","status":"passed","time":{"start":1754204851244,"stop":1754204852899,"duration":1655}},{"uid":"2a3a502ca2d442d6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/468//#testresult/2a3a502ca2d442d6","status":"passed","time":{"start":1754118456287,"stop":1754118458907,"duration":2620}},{"uid":"969cbeda87f6eaa4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/467//#testresult/969cbeda87f6eaa4","status":"passed","time":{"start":1754051889012,"stop":1754051890708,"duration":1696}},{"uid":"6bccf78e3e002e15","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/466//#testresult/6bccf78e3e002e15","status":"passed","time":{"start":1754032258570,"stop":1754032261029,"duration":2459}},{"uid":"450c142918fe082f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/465//#testresult/450c142918fe082f","status":"passed","time":{"start":1753974006090,"stop":1753974007856,"duration":1766}},{"uid":"387b15125f883c4f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/464//#testresult/387b15125f883c4f","status":"passed","time":{"start":1753945812711,"stop":1753945815410,"duration":2699}},{"uid":"76e02b3da3629eb4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/463//#testresult/76e02b3da3629eb4","status":"passed","time":{"start":1753878251287,"stop":1753878253987,"duration":2700}},{"uid":"39e870b4ba76c4cd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/462//#testresult/39e870b4ba76c4cd","status":"passed","time":{"start":1753859455699,"stop":1753859458454,"duration":2755}},{"uid":"91d48da4bb73973e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/461//#testresult/91d48da4bb73973e","status":"passed","time":{"start":1753773015127,"stop":1753773017913,"duration":2786}},{"uid":"d45a9189d4ab0a1c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/460//#testresult/d45a9189d4ab0a1c","status":"passed","time":{"start":1753686694579,"stop":1753686696744,"duration":2165}},{"uid":"ffe3a82011331833","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/459//#testresult/ffe3a82011331833","status":"passed","time":{"start":1753600034566,"stop":1753600036217,"duration":1651}},{"uid":"1ac073943d5fe3b7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/458//#testresult/1ac073943d5fe3b7","status":"passed","time":{"start":1753513647144,"stop":1753513648960,"duration":1816}},{"uid":"4cb6360614547f3a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/457//#testresult/4cb6360614547f3a","status":"passed","time":{"start":1753433543683,"stop":1753433546480,"duration":2797}},{"uid":"19df9575970e8f78","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/456//#testresult/19df9575970e8f78","status":"passed","time":{"start":1753427378797,"stop":1753427380790,"duration":1993}}]},"tags":["auth","unhappy_path","deactivation"]},"source":"a6297c468033a7c6.json","parameterValues":[]}