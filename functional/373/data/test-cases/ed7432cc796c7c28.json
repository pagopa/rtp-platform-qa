{"uid":"ed7432cc796c7c28","name":"Cannot send RTP with invalid amount","fullName":"tests.test_debtor_service_provider_availability#test_send_rtp_to_cbi_invalid_amount","historyId":"1efb3edc4b0d10fb2c722d7c966d7daf","time":{"start":1749539235554,"stop":1749539236512,"duration":958},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with invalid amount')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_invalid_amount():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['amount'] = -1\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id, secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(\n            secrets.CBI_client_PFX_base64,\n            secrets.CBI_client_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider_availability.py:81: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749539216518,"stop":1749539216580,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider_availability"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2530-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":6,"skipped":0,"passed":13,"unknown":0,"total":22},"items":[{"uid":"301a84b55f430b7e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/372//#testresult/301a84b55f430b7e","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749485086967,"stop":1749485086968,"duration":1}},{"uid":"f1cb99b76d1db3b5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/371//#testresult/f1cb99b76d1db3b5","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749484928620,"stop":1749484928620,"duration":0}},{"uid":"f0353733dbcfea6a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/370//#testresult/f0353733dbcfea6a","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749484606147,"stop":1749484606148,"duration":1}},{"uid":"cfab83b1c7d2b391","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/369//#testresult/cfab83b1c7d2b391","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749484261286,"stop":1749484261287,"duration":1}},{"uid":"f904a5dbd6b827cf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/368//#testresult/f904a5dbd6b827cf","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749483917968,"stop":1749483917969,"duration":1}},{"uid":"5ce9b86a42b75a31","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/365//#testresult/5ce9b86a42b75a31","status":"passed","time":{"start":1749482107912,"stop":1749482109216,"duration":1304}},{"uid":"ea486bb7a2293afe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/367//#testresult/ea486bb7a2293afe","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749482226831,"stop":1749482226832,"duration":1}},{"uid":"377cf6f96086e50d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/377cf6f96086e50d","status":"passed","time":{"start":1749452892119,"stop":1749452893077,"duration":958}},{"uid":"a9d7e0f3a983bc22","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/362//#testresult/a9d7e0f3a983bc22","status":"passed","time":{"start":1749366441796,"stop":1749366442940,"duration":1144}},{"uid":"5fe99a802c2e1ad5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/361//#testresult/5fe99a802c2e1ad5","status":"passed","time":{"start":1749280021569,"stop":1749280022674,"duration":1105}},{"uid":"115a3ea101c5ad1f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/115a3ea101c5ad1f","status":"passed","time":{"start":1749193629277,"stop":1749193630247,"duration":970}},{"uid":"4ed866f0d610fc92","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/359//#testresult/4ed866f0d610fc92","status":"passed","time":{"start":1749107260560,"stop":1749107262144,"duration":1584}},{"uid":"64ac1255746eaca7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/358//#testresult/64ac1255746eaca7","status":"passed","time":{"start":1749020839949,"stop":1749020841033,"duration":1084}},{"uid":"bbed8242d2de4fa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/357//#testresult/bbed8242d2de4fa","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1748956575109,"stop":1748956575830,"duration":721}},{"uid":"4868d5974ad3b483","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/356//#testresult/4868d5974ad3b483","status":"passed","time":{"start":1748953140077,"stop":1748953141123,"duration":1046}},{"uid":"6e1e60b20f579105","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/355//#testresult/6e1e60b20f579105","status":"passed","time":{"start":1748934483737,"stop":1748934484583,"duration":846}},{"uid":"b52a67155422b10c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/354//#testresult/b52a67155422b10c","status":"passed","time":{"start":1748848080990,"stop":1748848082074,"duration":1084}},{"uid":"925e87623dc7031b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/353//#testresult/925e87623dc7031b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1748761641703,"stop":1748761643023,"duration":1320}},{"uid":"5cfad103eb3a778b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/352//#testresult/5cfad103eb3a778b","status":"passed","time":{"start":1748675227563,"stop":1748675228370,"duration":807}},{"uid":"6cfbc7385fcdba64","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/351//#testresult/6cfbc7385fcdba64","status":"passed","time":{"start":1748588845907,"stop":1748588847538,"duration":1631}}]},"tags":["cbi","unhappy_path","send"]},"source":"ed7432cc796c7c28.json","parameterValues":[]}