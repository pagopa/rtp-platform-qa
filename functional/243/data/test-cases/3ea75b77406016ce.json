{"uid":"3ea75b77406016ce","name":"Cannot send RTP with expired date","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi_expired_date","historyId":"af763254cdd5d120d914e8ce75139912","time":{"start":1742108782403,"stop":1742108783721,"duration":1318},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with expired date')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_expired_date():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['expiryDate'] = '2020-01-01'\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:75: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1742108743719,"stop":1742108743779,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az798-581"},{"name":"thread","value":"2303-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":16,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":17},"items":[{"uid":"eb738fbf159a17a3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/242//#testresult/eb738fbf159a17a3","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742022374482,"stop":1742022375868,"duration":1386}},{"uid":"a7bbcd2cfc228501","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/241//#testresult/a7bbcd2cfc228501","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741935999525,"stop":1741936001060,"duration":1535}},{"uid":"6e106db76b1af62","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/240//#testresult/6e106db76b1af62","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741849606614,"stop":1741849608466,"duration":1852}},{"uid":"1623cebb36cc1979","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/239//#testresult/1623cebb36cc1979","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741763216457,"stop":1741763217812,"duration":1355}},{"uid":"896591a2cea86ce7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/238//#testresult/896591a2cea86ce7","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741705697998,"stop":1741705699118,"duration":1120}},{"uid":"7dce184740f35352","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/237//#testresult/7dce184740f35352","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741676813450,"stop":1741676815570,"duration":2120}},{"uid":"b2c9adf57d5b6b2a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/236//#testresult/b2c9adf57d5b6b2a","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741631450945,"stop":1741631452292,"duration":1347}},{"uid":"5371cce0d24cc4c5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/235//#testresult/5371cce0d24cc4c5","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741628104607,"stop":1741628106270,"duration":1663}},{"uid":"818fc18e0493f143","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/234//#testresult/818fc18e0493f143","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741624725893,"stop":1741624727217,"duration":1324}},{"uid":"c4dd31bd839e52ce","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/233//#testresult/c4dd31bd839e52ce","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741603694145,"stop":1741603695604,"duration":1459}},{"uid":"c4939a08f73b452a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/232//#testresult/c4939a08f73b452a","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741590416359,"stop":1741590417632,"duration":1273}},{"uid":"4e408f52b3aebfaf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/231//#testresult/4e408f52b3aebfaf","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741503955283,"stop":1741503957168,"duration":1885}},{"uid":"f553317c94c741de","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/230//#testresult/f553317c94c741de","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741417535022,"stop":1741417536392,"duration":1370}},{"uid":"5e1978291eded6e6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/229//#testresult/5e1978291eded6e6","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741368331944,"stop":1741368333276,"duration":1332}},{"uid":"75c9d00f8c33a0ca","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/228//#testresult/75c9d00f8c33a0ca","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741365931546,"stop":1741365933590,"duration":2044}},{"uid":"d4350bae05b91618","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/227//#testresult/d4350bae05b91618","status":"broken","statusDetails":"KeyError: 'access_token'","time":{"start":1741364149301,"stop":1741364150218,"duration":917}}]},"tags":["cbi","unhappy_path","send"]},"source":"3ea75b77406016ce.json","parameterValues":[]}