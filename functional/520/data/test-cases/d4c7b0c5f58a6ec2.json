{"uid":"d4c7b0c5f58a6ec2","name":"Get list of service providers successfully","fullName":"tests.test_service_providers_registry.TestServiceProvidersRegistry#test_get_service_providers_success","historyId":"672313a90fcd5952f4d0a6c4b0a65474","time":{"start":1757057146216,"stop":1757057146216,"duration":0},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"self = <tests.test_service_providers_registry.TestServiceProvidersRegistry object at 0x7fdd56f616d0>\n\n    @pytest.fixture(autouse=True)\n    def setup(self):\n>       self.access_token = get_valid_access_token(\n            client_id=secrets.pagopa_integration_service_registry.client_id,\n            client_secret=secrets.pagopa_integration_service_registry.client_secret,\n            access_token_function=get_access_token\n        )\n\nfunctional-tests/tests/test_service_providers_registry.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757056838070,"stop":1757056838126,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1757057146216,"stop":1757057146825,"duration":609},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/rtp-platform-qa/rtp-platform-qa/functional-tests/tests/test_service_providers_registry.py\", line 16, in setup\n    self.access_token = get_valid_access_token(\n                        ~~~~~~~~~~~~~~~~~~~~~~^\n        client_id=secrets.pagopa_integration_service_registry.client_id,\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        client_secret=secrets.pagopa_integration_service_registry.client_secret,\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        access_token_function=get_access_token\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/home/runner/work/rtp-platform-qa/rtp-platform-qa/api/auth.py\", line 8, in get_valid_access_token\n    token_response.raise_for_status()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py\", line 1026, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"pagoPA retrieves service providers registry"},{"name":"feature","value":"Service Providers Registry"},{"name":"tag","value":"happy_path"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_service_providers_registry"},{"name":"subSuite","value":"TestServiceProvidersRegistry"},{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_service_providers_registry"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":21,"skipped":0,"passed":156,"unknown":0,"total":177},"items":[{"uid":"aa8f14d8f71692a4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/519//#testresult/aa8f14d8f71692a4","status":"passed","time":{"start":1756969698070,"stop":1756969698459,"duration":389}},{"uid":"3b71aaf4f7a4ac82","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/518//#testresult/3b71aaf4f7a4ac82","status":"passed","time":{"start":1756910940420,"stop":1756910941070,"duration":650}},{"uid":"8bad8c55049bf297","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/517//#testresult/8bad8c55049bf297","status":"passed","time":{"start":1756883319772,"stop":1756883320209,"duration":437}},{"uid":"afc6a12369bfdce4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/516//#testresult/afc6a12369bfdce4","status":"passed","time":{"start":1756798038919,"stop":1756798039299,"duration":380}},{"uid":"82396ef740acdc8b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/515//#testresult/82396ef740acdc8b","status":"passed","time":{"start":1756796915649,"stop":1756796916024,"duration":375}},{"uid":"adc4b51184eb99b5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/514//#testresult/adc4b51184eb99b5","status":"passed","time":{"start":1756719658921,"stop":1756719659644,"duration":723}},{"uid":"c7b50eb038d40deb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/513//#testresult/c7b50eb038d40deb","status":"passed","time":{"start":1756710605279,"stop":1756710605881,"duration":602}},{"uid":"21960d6c14ce82fb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/512//#testresult/21960d6c14ce82fb","status":"passed","time":{"start":1756624069682,"stop":1756624070070,"duration":388}},{"uid":"7c446b57a0728253","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/511//#testresult/7c446b57a0728253","status":"passed","time":{"start":1756537662815,"stop":1756537663210,"duration":395}},{"uid":"83bd6f4cc93b518b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/510//#testresult/83bd6f4cc93b518b","status":"passed","time":{"start":1756451319728,"stop":1756451320173,"duration":445}},{"uid":"805d96be477f7f4f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/509//#testresult/805d96be477f7f4f","status":"passed","time":{"start":1756385987634,"stop":1756385988282,"duration":648}},{"uid":"4236f5aab499ed81","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/508//#testresult/4236f5aab499ed81","status":"passed","time":{"start":1756364956052,"stop":1756364956705,"duration":653}},{"uid":"daa965d4c47dd4ec","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/507//#testresult/daa965d4c47dd4ec","status":"passed","time":{"start":1756278543299,"stop":1756278543960,"duration":661}},{"uid":"e26b742a347b97b9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/506//#testresult/e26b742a347b97b9","status":"passed","time":{"start":1756192128966,"stop":1756192129359,"duration":393}},{"uid":"863130f9451164dc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/505//#testresult/863130f9451164dc","status":"passed","time":{"start":1756105775633,"stop":1756105776620,"duration":987}},{"uid":"b06edf94ee3db0fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/504//#testresult/b06edf94ee3db0fe","status":"passed","time":{"start":1756019262663,"stop":1756019263037,"duration":374}},{"uid":"ba278566b355b237","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/503//#testresult/ba278566b355b237","status":"passed","time":{"start":1755932858552,"stop":1755932859003,"duration":451}},{"uid":"1f26102ceaefa3f3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/502//#testresult/1f26102ceaefa3f3","status":"passed","time":{"start":1755847732576,"stop":1755847733133,"duration":557}},{"uid":"2f0ab37b760b627","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/501//#testresult/2f0ab37b760b627","status":"passed","time":{"start":1755846513900,"stop":1755846514340,"duration":440}},{"uid":"1aeb46fffefa88f5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/500//#testresult/1aeb46fffefa88f5","status":"passed","time":{"start":1755843979361,"stop":1755843979806,"duration":445}}]},"tags":["happy_path"]},"source":"d4c7b0c5f58a6ec2.json","parameterValues":[]}