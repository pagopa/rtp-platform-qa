{"uid":"1b33eab8e79b096b","name":"A debtor is activated and retrieved by activation id","fullName":"tests.test_activation#test_get_activation_by_id","historyId":"5802a301b59e0c151ffcd2948b2fd364","time":{"start":1757056959735,"stop":1757057020518,"duration":60783},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 504 Server Error: Gateway Time-out for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('Activation')\n    @allure.story('Get Debtor activation by ID')\n    @allure.title('A debtor is activated and retrieved by activation id')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.happy_path\n    def test_get_activation_by_id():\n>       access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n\nfunctional-tests/tests/test_activation.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [504]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 504 Server Error: Gateway Time-out for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":true,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757056838070,"stop":1757056838126,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Get Debtor activation by ID"},{"name":"feature","value":"Activation"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":41,"broken":1,"skipped":0,"passed":41,"unknown":0,"total":83},"items":[{"uid":"ff4e6c5b535bd50a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/519//#testresult/ff4e6c5b535bd50a","status":"passed","time":{"start":1756969603197,"stop":1756969608194,"duration":4997}},{"uid":"f83054f503e8ea19","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/518//#testresult/f83054f503e8ea19","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756910808858,"stop":1756910810919,"duration":2061}},{"uid":"bb008d12cbdc446e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/517//#testresult/bb008d12cbdc446e","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756883227341,"stop":1756883228777,"duration":1436}},{"uid":"37e6767fc2846003","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/516//#testresult/37e6767fc2846003","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756797957424,"stop":1756797958514,"duration":1090}},{"uid":"a2a392b9ab652f7a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/515//#testresult/a2a392b9ab652f7a","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756796824135,"stop":1756796825374,"duration":1239}},{"uid":"853f1de1b2505095","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/514//#testresult/853f1de1b2505095","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756719539087,"stop":1756719541093,"duration":2006}},{"uid":"61a1f656894d5043","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/513//#testresult/61a1f656894d5043","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756710489028,"stop":1756710491089,"duration":2061}},{"uid":"85fe0bda1411cbb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/512//#testresult/85fe0bda1411cbb","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756623977729,"stop":1756623979276,"duration":1547}},{"uid":"74f85f7dd4640257","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/511//#testresult/74f85f7dd4640257","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756537574848,"stop":1756537576197,"duration":1349}},{"uid":"5fee4047c478cf57","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/510//#testresult/5fee4047c478cf57","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756451215381,"stop":1756451216694,"duration":1313}},{"uid":"eef96c22944b95fa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/509//#testresult/eef96c22944b95fa","status":"passed","time":{"start":1756385859374,"stop":1756385861483,"duration":2109}},{"uid":"a33b2dc946e5a79","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/508//#testresult/a33b2dc946e5a79","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756364824060,"stop":1756364826315,"duration":2255}},{"uid":"ad32cfa7c947cedb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/507//#testresult/ad32cfa7c947cedb","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756278415120,"stop":1756278417453,"duration":2333}},{"uid":"5f1b47f26f953803","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/506//#testresult/5f1b47f26f953803","status":"passed","time":{"start":1756192037266,"stop":1756192038805,"duration":1539}},{"uid":"7a65519e196dccf7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/505//#testresult/7a65519e196dccf7","status":"passed","time":{"start":1756105669884,"stop":1756105671057,"duration":1173}},{"uid":"1fd508e578fa75d6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/504//#testresult/1fd508e578fa75d6","status":"passed","time":{"start":1756019174368,"stop":1756019175563,"duration":1195}},{"uid":"30a8059a68e372bf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/503//#testresult/30a8059a68e372bf","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755932760928,"stop":1755932762520,"duration":1592}},{"uid":"4c135881f3a502e0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/502//#testresult/4c135881f3a502e0","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755847618425,"stop":1755847620297,"duration":1872}},{"uid":"2c4435b304bbbc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/501//#testresult/2c4435b304bbbc","status":"passed","time":{"start":1755846423082,"stop":1755846424497,"duration":1415}},{"uid":"6be96995e91c6ce8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/500//#testresult/6be96995e91c6ce8","status":"passed","time":{"start":1755843875613,"stop":1755843877057,"duration":1444}}]},"tags":["auth","activation","happy_path"]},"source":"1b33eab8e79b096b.json","parameterValues":[]}