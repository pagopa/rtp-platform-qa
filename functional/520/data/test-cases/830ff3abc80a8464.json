{"uid":"830ff3abc80a8464","name":"malformed rtp_id → 400 Bad Request","fullName":"tests.test_get_rtp#test_get_rtp_invalid_id_format","historyId":"c21612d12b7544d1e793acec3594d7a6","time":{"start":1757057137847,"stop":1757057138455,"duration":608},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Get')\n    @allure.story('Service provider retrieves an RTP')\n    @allure.title('malformed rtp_id → 400 Bad Request')\n    @pytest.mark.get\n    @pytest.mark.unhappy_path\n    def test_get_rtp_invalid_id_format():\n        bad_id = '123-not-a-uuid'\n>       token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_get_rtp.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757056838070,"stop":1757056838126,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider retrieves an RTP"},{"name":"feature","value":"RTP Get"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":19,"skipped":0,"passed":113,"unknown":0,"total":132},"items":[{"uid":"8456e389ecd23a56","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/519//#testresult/8456e389ecd23a56","status":"passed","time":{"start":1756969680337,"stop":1756969681121,"duration":784}},{"uid":"d7d6a488d4078d02","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/518//#testresult/d7d6a488d4078d02","status":"passed","time":{"start":1756910915187,"stop":1756910916490,"duration":1303}},{"uid":"1a16f99409ef6554","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/517//#testresult/1a16f99409ef6554","status":"passed","time":{"start":1756883301675,"stop":1756883302567,"duration":892}},{"uid":"625b1db0b9ba95d5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/516//#testresult/625b1db0b9ba95d5","status":"passed","time":{"start":1756798024033,"stop":1756798024777,"duration":744}},{"uid":"2923581d5dfb6047","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/515//#testresult/2923581d5dfb6047","status":"passed","time":{"start":1756796898718,"stop":1756796899477,"duration":759}},{"uid":"eaacc73d95f817bf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/514//#testresult/eaacc73d95f817bf","status":"passed","time":{"start":1756719633845,"stop":1756719635190,"duration":1345}},{"uid":"e59e7b559a547d8f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/513//#testresult/e59e7b559a547d8f","status":"passed","time":{"start":1756710582165,"stop":1756710583331,"duration":1166}},{"uid":"31a3be59a2a5a285","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/512//#testresult/31a3be59a2a5a285","status":"passed","time":{"start":1756624053588,"stop":1756624054355,"duration":767}},{"uid":"30fd1232130ff235","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/511//#testresult/30fd1232130ff235","status":"passed","time":{"start":1756537645026,"stop":1756537645845,"duration":819}},{"uid":"f8cb3f10453bc2ee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/510//#testresult/f8cb3f10453bc2ee","status":"passed","time":{"start":1756451301673,"stop":1756451302580,"duration":907}},{"uid":"c2d90ced3b86ddde","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/509//#testresult/c2d90ced3b86ddde","status":"passed","time":{"start":1756385963010,"stop":1756385964391,"duration":1381}},{"uid":"6a69cc167c14e107","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/508//#testresult/6a69cc167c14e107","status":"passed","time":{"start":1756364931010,"stop":1756364932323,"duration":1313}},{"uid":"d552e09e4186684d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/507//#testresult/d552e09e4186684d","status":"passed","time":{"start":1756278517571,"stop":1756278518910,"duration":1339}},{"uid":"b4f08280b50f6317","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/506//#testresult/b4f08280b50f6317","status":"passed","time":{"start":1756192110750,"stop":1756192111601,"duration":851}},{"uid":"2dd8e6450ab8d574","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/505//#testresult/2dd8e6450ab8d574","status":"passed","time":{"start":1756105758260,"stop":1756105759061,"duration":801}},{"uid":"7dc56f816c5f99c1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/504//#testresult/7dc56f816c5f99c1","status":"passed","time":{"start":1756019245834,"stop":1756019246620,"duration":786}},{"uid":"67732ffde99b3f44","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/503//#testresult/67732ffde99b3f44","status":"passed","time":{"start":1755932838538,"stop":1755932839450,"duration":912}},{"uid":"bdb647b9cbad7632","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/502//#testresult/bdb647b9cbad7632","status":"passed","time":{"start":1755847705783,"stop":1755847706931,"duration":1148}},{"uid":"76bdd610bcb16725","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/501//#testresult/76bdd610bcb16725","status":"passed","time":{"start":1755846494613,"stop":1755846495495,"duration":882}},{"uid":"6de3b2b6b4e2451f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/500//#testresult/6de3b2b6b4e2451f","status":"passed","time":{"start":1755843959805,"stop":1755843960710,"duration":905}}]},"tags":["get","unhappy_path"]},"source":"830ff3abc80a8464.json","parameterValues":[]}