{"uid":"1be716b877987989","name":"Cannot send RTP with invalid amount","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi_invalid_amount","historyId":"3a2d68c98ccbf254d83aa6a209f2af2f","time":{"start":1745651197940,"stop":1745651199098,"duration":1158},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with invalid amount')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_invalid_amount():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['amount'] = -1\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:54: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1745651145046,"stop":1745651145103,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az805-813"},{"name":"thread","value":"2328-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":73,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":74},"items":[{"uid":"f30197258ebc64df","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/307//#testresult/f30197258ebc64df","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745564825843,"stop":1745564827301,"duration":1458}},{"uid":"20393800940424dc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/306//#testresult/20393800940424dc","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745491302990,"stop":1745491304410,"duration":1420}},{"uid":"e2b04fce7e480cea","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/305//#testresult/e2b04fce7e480cea","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745478445538,"stop":1745478447008,"duration":1470}},{"uid":"523b1ff45f0eb3ed","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/304//#testresult/523b1ff45f0eb3ed","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745392049806,"stop":1745392051669,"duration":1863}},{"uid":"919a71a185f145f9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/303//#testresult/919a71a185f145f9","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745305628495,"stop":1745305629829,"duration":1334}},{"uid":"10543cd0e030da9f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/302//#testresult/10543cd0e030da9f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745219268820,"stop":1745219270557,"duration":1737}},{"uid":"83af5b9f1f7a16e0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/301//#testresult/83af5b9f1f7a16e0","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745132798702,"stop":1745132800261,"duration":1559}},{"uid":"5054901ff3e63daf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/300//#testresult/5054901ff3e63daf","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745046394761,"stop":1745046396254,"duration":1493}},{"uid":"fc81e5a33cd69ece","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/299//#testresult/fc81e5a33cd69ece","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744960017194,"stop":1744960018526,"duration":1332}},{"uid":"943f5f6896787671","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/298//#testresult/943f5f6896787671","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744902282710,"stop":1744902284358,"duration":1648}},{"uid":"16f7e34db2ffd247","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/297//#testresult/16f7e34db2ffd247","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744873645464,"stop":1744873646532,"duration":1068}},{"uid":"3579d2bd2ade0982","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/296//#testresult/3579d2bd2ade0982","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744799606737,"stop":1744799607896,"duration":1159}},{"uid":"c5a181cbdd0d55e8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/295//#testresult/c5a181cbdd0d55e8","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744787231707,"stop":1744787233107,"duration":1400}},{"uid":"abf5927503635d5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/294//#testresult/abf5927503635d5","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744727118445,"stop":1744727120592,"duration":2147}},{"uid":"3d7c9d6fe3f53330","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/293//#testresult/3d7c9d6fe3f53330","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744726255139,"stop":1744726256688,"duration":1549}},{"uid":"8a2154246093f5ca","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/292//#testresult/8a2154246093f5ca","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744725398559,"stop":1744725399890,"duration":1331}},{"uid":"4612783c268bc030","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/291//#testresult/4612783c268bc030","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744700827604,"stop":1744700828858,"duration":1254}},{"uid":"9c0a98487ccdd12b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/290//#testresult/9c0a98487ccdd12b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744640112294,"stop":1744640113671,"duration":1377}},{"uid":"1c79cc8f2b1f0738","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/289//#testresult/1c79cc8f2b1f0738","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744614442208,"stop":1744614443434,"duration":1226}},{"uid":"5d96776fe7748696","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/288//#testresult/5d96776fe7748696","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744528020118,"stop":1744528022339,"duration":2221}}]},"tags":["cbi","unhappy_path","send"]},"source":"1be716b877987989.json","parameterValues":[]}