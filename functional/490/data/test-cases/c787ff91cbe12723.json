{"uid":"c787ff91cbe12723","name":"An RTP is sent to ICCREA service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_iccrea","historyId":"43c6e6f1884b3efb611eee04b5b6eb0c","time":{"start":1755166856090,"stop":1755166858916,"duration":2826},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider')\n    @allure.title('An RTP is sent to ICCREA service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.iccrea\n    def test_send_rtp_to_iccrea():\n        rtp_data = generate_rtp_data(payer_id=secrets.iccrea_activated_fiscal_code)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:143: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755166759969,"stop":1755166760025,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"iccrea"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmsl9tci6h6u"},{"name":"thread","value":"2498-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":30,"broken":17,"skipped":0,"passed":20,"unknown":0,"total":67},"items":[{"uid":"812cf4adef4f8fea","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/489//#testresult/812cf4adef4f8fea","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755158359042,"stop":1755158362212,"duration":3170}},{"uid":"bae7e7637cc68127","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/488//#testresult/bae7e7637cc68127","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755155406030,"stop":1755155409531,"duration":3501}},{"uid":"3586577b054db25f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/487//#testresult/3586577b054db25f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755068976128,"stop":1755068978940,"duration":2812}},{"uid":"3d38856ea59a4dbf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/486//#testresult/3d38856ea59a4dbf","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754982590296,"stop":1754982593961,"duration":3665}},{"uid":"8d497e73a925a909","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/485//#testresult/8d497e73a925a909","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754907899068,"stop":1754907902277,"duration":3209}},{"uid":"a644dd12f3111163","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/483//#testresult/a644dd12f3111163","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754896349188,"stop":1754896353033,"duration":3845}},{"uid":"bb5b9a3900a7a3e7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/482//#testresult/bb5b9a3900a7a3e7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754809675526,"stop":1754809678289,"duration":2763}},{"uid":"88e666576b78d2ee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/481//#testresult/88e666576b78d2ee","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754723284880,"stop":1754723287536,"duration":2656}},{"uid":"35cc5605afe4aa97","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/480//#testresult/35cc5605afe4aa97","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754637194624,"stop":1754637198291,"duration":3667}},{"uid":"947c800930e2f3fb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/479//#testresult/947c800930e2f3fb","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754550764667,"stop":1754550779168,"duration":14501}},{"uid":"e6e2afc1f10e0933","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/478//#testresult/e6e2afc1f10e0933","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754464855424,"stop":1754464858727,"duration":3303}},{"uid":"e9731490aed72c89","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/476//#testresult/e9731490aed72c89","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754464777136,"stop":1754464780295,"duration":3159}},{"uid":"add9fefd62a86812","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/475//#testresult/add9fefd62a86812","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754464364099,"stop":1754464367278,"duration":3179}},{"uid":"473b812468e85c84","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/474//#testresult/473b812468e85c84","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754387736625,"stop":1754387736990,"duration":365}},{"uid":"1e081cdea3cf3ad2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/473//#testresult/1e081cdea3cf3ad2","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754378004857,"stop":1754378005320,"duration":463}},{"uid":"cdedc1210d7d7353","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/472//#testresult/cdedc1210d7d7353","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754377958560,"stop":1754377959163,"duration":603}},{"uid":"b97142b421ef5099","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/471//#testresult/b97142b421ef5099","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754319239159,"stop":1754319239580,"duration":421}},{"uid":"6c18e57cd12f399e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/470//#testresult/6c18e57cd12f399e","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754291693732,"stop":1754291694368,"duration":636}},{"uid":"98a344dece77d28","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/469//#testresult/98a344dece77d28","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754204878435,"stop":1754204878795,"duration":360}},{"uid":"f89bfcdde9038475","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/468//#testresult/f89bfcdde9038475","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754118495054,"stop":1754118495638,"duration":584}}]},"tags":["iccrea","real_integration","send","happy_path"]},"source":"c787ff91cbe12723.json","parameterValues":[]}