{"uid":"247cd5bcd867ba9b","name":"A debtor is activated and retrieved by activation id","fullName":"functional-tests.tests.test_activation#test_get_activation_by_id","historyId":"f0cde7a9f60c539cb93d6bb21d648b45","time":{"start":1761114222998,"stop":1761114224447,"duration":1449},"status":"failed","statusMessage":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('Activation')\n    @allure.story('Get Debtor activation by ID')\n    @allure.title('A debtor is activated and retrieved by activation id')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.happy_path\n    def test_get_activation_by_id():\n        access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n        debtor_fc = fake_fc()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, 'Error activating debtor'\n    \n        location = res.headers['Location']\n        activation_id = location.split('/')[-1]\n        assert bool(uuidv4_pattern.fullmatch(activation_id))\n    \n        res = get_activation_by_id(access_token, activation_id)\n>       assert res.status_code == 200, f'Expected 200 but got {res.status_code}'\nE       AssertionError: Expected 200 but got 500\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_activation.py:91: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761114213736,"stop":1761114213798,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Get Debtor activation by ID"},{"name":"feature","value":"Activation"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"functional-tests.tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2470-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"functional-tests.tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":16,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":19},"items":[{"uid":"a5077338f8d2d937","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/587//#testresult/a5077338f8d2d937","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1761053794558,"stop":1761053796415,"duration":1857}},{"uid":"4ecc67cf26f91e7c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/586//#testresult/4ecc67cf26f91e7c","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1761040654392,"stop":1761040655870,"duration":1478}},{"uid":"888e4cb9e6c2a3a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/585//#testresult/888e4cb9e6c2a3a","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1761027773698,"stop":1761027775039,"duration":1341}},{"uid":"a817b89371f683d3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/584//#testresult/a817b89371f683d3","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760941412690,"stop":1760941414017,"duration":1327}},{"uid":"d1a818deae0a5019","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/583//#testresult/d1a818deae0a5019","status":"passed","time":{"start":1760854912905,"stop":1760854914256,"duration":1351}},{"uid":"8a27477cb1ec19ef","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/582//#testresult/8a27477cb1ec19ef","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760768439954,"stop":1760768441215,"duration":1261}},{"uid":"de05ace31625061a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/581//#testresult/de05ace31625061a","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760682107263,"stop":1760682108626,"duration":1363}},{"uid":"b6dfc9f5517262c6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/580//#testresult/b6dfc9f5517262c6","status":"passed","time":{"start":1760624451512,"stop":1760624453816,"duration":2304}},{"uid":"24e90ae22abddaf4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/579//#testresult/24e90ae22abddaf4","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760619636523,"stop":1760619638394,"duration":1871}},{"uid":"7a382b49f9b3c045","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/578//#testresult/7a382b49f9b3c045","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760595759223,"stop":1760595760663,"duration":1440}},{"uid":"61224dec45a3c23a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/577//#testresult/61224dec45a3c23a","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760523094096,"stop":1760523096416,"duration":2320}},{"uid":"90af7b79a8534010","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/576//#testresult/90af7b79a8534010","status":"passed","time":{"start":1760523004504,"stop":1760523006400,"duration":1896}},{"uid":"5848da033063d093","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/575//#testresult/5848da033063d093","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760522065086,"stop":1760522066886,"duration":1800}},{"uid":"be5f31b23edc27d4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/574//#testresult/be5f31b23edc27d4","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760521303588,"stop":1760521304958,"duration":1370}},{"uid":"d38494d971f09813","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/573//#testresult/d38494d971f09813","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760520506253,"stop":1760520507551,"duration":1298}},{"uid":"8cd69fee46daed6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/571//#testresult/8cd69fee46daed6","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760443924237,"stop":1760443926024,"duration":1787}},{"uid":"6532641503c985a3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/570//#testresult/6532641503c985a3","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760439475502,"stop":1760439477121,"duration":1619}},{"uid":"95ebe0d16a8e58b2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/569//#testresult/95ebe0d16a8e58b2","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760439274765,"stop":1760439275994,"duration":1229}}]},"tags":["auth","activation","happy_path"]},"source":"247cd5bcd867ba9b.json","parameterValues":[]}