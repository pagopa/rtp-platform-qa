{"uid":"55e366bb241fadc0","name":"An RTP is sent through API","fullName":"tests.test_send_rtp#test_send_rtp_api","historyId":"6c14d2fbb180e49a106680915fe95577","time":{"start":1749800524197,"stop":1749800524556,"duration":359},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('An RTP is sent through API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    def test_send_rtp_api():\n        rtp_data = generate_rtp_data()\n    \n>       debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token)\n\nfunctional-tests/tests/test_send_rtp.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749800516321,"stop":1749800516376,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2485-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":39,"broken":9,"skipped":0,"passed":154,"unknown":0,"total":202},"items":[{"uid":"eb1da5f45233f75","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/377//#testresult/eb1da5f45233f75","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749799857907,"stop":1749799858518,"duration":611}},{"uid":"b37f4207eb9daa9d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/376//#testresult/b37f4207eb9daa9d","status":"passed","time":{"start":1749798584906,"stop":1749798587437,"duration":2531}},{"uid":"15706e6a0f9fe911","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/375//#testresult/15706e6a0f9fe911","status":"passed","time":{"start":1749712198602,"stop":1749712201718,"duration":3116}},{"uid":"323fbb2ae00cc37c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/374//#testresult/323fbb2ae00cc37c","status":"passed","time":{"start":1749625787127,"stop":1749625789493,"duration":2366}},{"uid":"6ec0a0be2567b7cb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/373//#testresult/6ec0a0be2567b7cb","status":"passed","time":{"start":1749539376448,"stop":1749539378926,"duration":2478}},{"uid":"25599312dd1b68cf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/372//#testresult/25599312dd1b68cf","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749485089883,"stop":1749485090495,"duration":612}},{"uid":"c12cc78e8260e50f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/371//#testresult/c12cc78e8260e50f","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484931381,"stop":1749484931992,"duration":611}},{"uid":"ed85169ddeb9b477","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/370//#testresult/ed85169ddeb9b477","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484608444,"stop":1749484608848,"duration":404}},{"uid":"c5bc2953bcb0decb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/369//#testresult/c5bc2953bcb0decb","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484264527,"stop":1749484265307,"duration":780}},{"uid":"54b75e351fe5003b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/368//#testresult/54b75e351fe5003b","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749483923384,"stop":1749483923734,"duration":350}},{"uid":"20a059e633ec0674","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/365//#testresult/20a059e633ec0674","status":"passed","time":{"start":1749482246742,"stop":1749482248669,"duration":1927}},{"uid":"fe6b4997449c9b5e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/367//#testresult/fe6b4997449c9b5e","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749482230210,"stop":1749482230990,"duration":780}},{"uid":"3e55cd96894381cd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/3e55cd96894381cd","status":"passed","time":{"start":1749453032447,"stop":1749453034868,"duration":2421}},{"uid":"997ee1e0cda7ea79","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/362//#testresult/997ee1e0cda7ea79","status":"passed","time":{"start":1749366585307,"stop":1749366588870,"duration":3563}},{"uid":"1f82d9ee4562c3c2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/361//#testresult/1f82d9ee4562c3c2","status":"passed","time":{"start":1749280159782,"stop":1749280162174,"duration":2392}},{"uid":"f256d16579af7ccb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/f256d16579af7ccb","status":"passed","time":{"start":1749193769539,"stop":1749193771641,"duration":2102}},{"uid":"f3ba1ef7f732e259","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/359//#testresult/f3ba1ef7f732e259","status":"passed","time":{"start":1749107402672,"stop":1749107405854,"duration":3182}},{"uid":"7d7423b2b3ea5f14","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/358//#testresult/7d7423b2b3ea5f14","status":"passed","time":{"start":1749020980512,"stop":1749020982834,"duration":2322}},{"uid":"da2711775b474fda","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/357//#testresult/da2711775b474fda","status":"passed","time":{"start":1748956713641,"stop":1748956715680,"duration":2039}},{"uid":"830f5e736bc943fc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/356//#testresult/830f5e736bc943fc","status":"passed","time":{"start":1748953280481,"stop":1748953282205,"duration":1724}}]},"tags":["send","happy_path"]},"source":"55e366bb241fadc0.json","parameterValues":[]}