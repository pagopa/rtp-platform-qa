{"uid":"9cb87e54953f4605","name":"Debtor fiscal code must be lower case during RTP send","fullName":"tests.test_send_rtp#test_cannot_send_rtp_api_lower_fiscal_code","historyId":"017de99ba5d6b89046c2601fd9a0cfdc","time":{"start":1749800525472,"stop":1749800525835,"duration":363},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('Debtor fiscal code must be lower case during RTP send')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_cannot_send_rtp_api_lower_fiscal_code():\n        rtp_data = generate_rtp_data()\n    \n>       debtor_service_provider_access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                                                      client_secret=secrets.debtor_service_provider.client_secret,\n                                                                      access_token_function=get_access_token)\n\nfunctional-tests/tests/test_send_rtp.py:127: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749800516321,"stop":1749800516376,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2485-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":10,"skipped":0,"passed":184,"unknown":0,"total":199},"items":[{"uid":"937e020c5132acb4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/377//#testresult/937e020c5132acb4","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749799859966,"stop":1749799860603,"duration":637}},{"uid":"450826dbf58dcdbc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/376//#testresult/450826dbf58dcdbc","status":"passed","time":{"start":1749798652249,"stop":1749798653957,"duration":1708}},{"uid":"60d7eee12b937b76","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/375//#testresult/60d7eee12b937b76","status":"passed","time":{"start":1749712267121,"stop":1749712269536,"duration":2415}},{"uid":"922d0b63986e0037","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/374//#testresult/922d0b63986e0037","status":"passed","time":{"start":1749625853560,"stop":1749625855227,"duration":1667}},{"uid":"9b93b5452bd5d42c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/373//#testresult/9b93b5452bd5d42c","status":"passed","time":{"start":1749539448066,"stop":1749539449745,"duration":1679}},{"uid":"2142e5d2016a9cf3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/372//#testresult/2142e5d2016a9cf3","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749485091799,"stop":1749485092411,"duration":612}},{"uid":"cef0e3b7129b702a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/371//#testresult/cef0e3b7129b702a","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484933285,"stop":1749484933896,"duration":611}},{"uid":"f23697d54acdd646","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/370//#testresult/f23697d54acdd646","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484609753,"stop":1749484610159,"duration":406}},{"uid":"f5b5e7bd6795e345","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/369//#testresult/f5b5e7bd6795e345","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484266608,"stop":1749484267225,"duration":617}},{"uid":"9b8b69309d3c1a5a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/368//#testresult/9b8b69309d3c1a5a","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749483924666,"stop":1749483925015,"duration":349}},{"uid":"630b5e8c66f2454f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/365//#testresult/630b5e8c66f2454f","status":"passed","time":{"start":1749482313299,"stop":1749482314779,"duration":1480}},{"uid":"ec91a91212613478","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/367//#testresult/ec91a91212613478","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749482232276,"stop":1749482232888,"duration":612}},{"uid":"bae7fe5cfebde3a8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/bae7fe5cfebde3a8","status":"passed","time":{"start":1749453099606,"stop":1749453101295,"duration":1689}},{"uid":"5ab69c66c084b334","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/362//#testresult/5ab69c66c084b334","status":"passed","time":{"start":1749366653997,"stop":1749366656483,"duration":2486}},{"uid":"f4657cfaff57b9d2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/361//#testresult/f4657cfaff57b9d2","status":"passed","time":{"start":1749280226882,"stop":1749280228599,"duration":1717}},{"uid":"996f1392ef947818","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/996f1392ef947818","status":"passed","time":{"start":1749193835716,"stop":1749193837107,"duration":1391}},{"uid":"cb3bd6166868f5e5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/359//#testresult/cb3bd6166868f5e5","status":"passed","time":{"start":1749107471444,"stop":1749107473951,"duration":2507}},{"uid":"a40d611d76ce5cc6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/358//#testresult/a40d611d76ce5cc6","status":"passed","time":{"start":1749021046969,"stop":1749021048618,"duration":1649}},{"uid":"91cdc7db5f742f71","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/357//#testresult/91cdc7db5f742f71","status":"passed","time":{"start":1748956779330,"stop":1748956780984,"duration":1654}},{"uid":"3d3731b17256baba","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/356//#testresult/3d3731b17256baba","status":"passed","time":{"start":1748953346046,"stop":1748953347448,"duration":1402}}]},"tags":["unhappy_path","send"]},"source":"9cb87e54953f4605.json","parameterValues":[]}