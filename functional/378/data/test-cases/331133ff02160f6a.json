{"uid":"331133ff02160f6a","name":"A Service Provider is authenticated","fullName":"tests.test_auth#test_get_valid_token","historyId":"e813f3b4e17d0411820f4d08ba7e7042","time":{"start":1749800518690,"stop":1749800519158,"duration":468},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('Authentication')\n    @allure.story('Service Provider authentication')\n    @allure.title('A Service Provider is authenticated')\n    @pytest.mark.auth\n    @pytest.mark.happy_path\n    def test_get_valid_token():\n>       access_token = get_valid_access_token(client_id=secrets.creditor_service_provider.client_id,\n                                              client_secret=secrets.creditor_service_provider.client_secret,\n                                              access_token_function=get_access_token)\n\nfunctional-tests/tests/test_auth.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749800516321,"stop":1749800516376,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service Provider authentication"},{"name":"feature","value":"Authentication"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_auth"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2485-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_auth"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":193,"unknown":0,"total":202},"items":[{"uid":"a947de3306c0d2aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/377//#testresult/a947de3306c0d2aa","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749799847997,"stop":1749799848624,"duration":627}},{"uid":"9be4145b8a65511f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/376//#testresult/9be4145b8a65511f","status":"passed","time":{"start":1749798428091,"stop":1749798428777,"duration":686}},{"uid":"462a102cd2056ea9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/375//#testresult/462a102cd2056ea9","status":"passed","time":{"start":1749712034427,"stop":1749712035304,"duration":877}},{"uid":"b58593cbb279d9ff","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/374//#testresult/b58593cbb279d9ff","status":"passed","time":{"start":1749625629166,"stop":1749625629936,"duration":770}},{"uid":"cdbcdcdf419a1ee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/373//#testresult/cdbcdcdf419a1ee","status":"passed","time":{"start":1749539221995,"stop":1749539222411,"duration":416}},{"uid":"743eb1a271a739a0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/372//#testresult/743eb1a271a739a0","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749485081260,"stop":1749485081874,"duration":614}},{"uid":"cc51585d44225e7a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/371//#testresult/cc51585d44225e7a","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484923452,"stop":1749484924065,"duration":613}},{"uid":"b7b8c34d77066331","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/370//#testresult/b7b8c34d77066331","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484602352,"stop":1749484602928,"duration":576}},{"uid":"aba7da4610a946d0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/369//#testresult/aba7da4610a946d0","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484255346,"stop":1749484256122,"duration":776}},{"uid":"df6804c4f8c2d649","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/368//#testresult/df6804c4f8c2d649","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749483914442,"stop":1749483914792,"duration":350}},{"uid":"64ba56193c16dea9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/365//#testresult/64ba56193c16dea9","status":"passed","time":{"start":1749482090768,"stop":1749482091115,"duration":347}},{"uid":"1213b3871ea765d8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/367//#testresult/1213b3871ea765d8","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749482221217,"stop":1749482221987,"duration":770}},{"uid":"2063247310484774","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/2063247310484774","status":"passed","time":{"start":1749452876912,"stop":1749452877626,"duration":714}},{"uid":"7141c00a35df6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/362//#testresult/7141c00a35df6","status":"passed","time":{"start":1749366418657,"stop":1749366419961,"duration":1304}},{"uid":"b6645660dccf1e9a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/361//#testresult/b6645660dccf1e9a","status":"passed","time":{"start":1749280007068,"stop":1749280007762,"duration":694}},{"uid":"cb0b235fe30198fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/cb0b235fe30198fe","status":"passed","time":{"start":1749193616156,"stop":1749193616890,"duration":734}},{"uid":"90633d5ea849fa07","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/359//#testresult/90633d5ea849fa07","status":"passed","time":{"start":1749107239328,"stop":1749107240265,"duration":937}},{"uid":"eaf2a0276d16fc67","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/358//#testresult/eaf2a0276d16fc67","status":"passed","time":{"start":1749020825857,"stop":1749020826547,"duration":690}},{"uid":"450bedba9897517d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/357//#testresult/450bedba9897517d","status":"passed","time":{"start":1748956561817,"stop":1748956562471,"duration":654}},{"uid":"4fd9ca7573b859a2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/356//#testresult/4fd9ca7573b859a2","status":"passed","time":{"start":1748953127745,"stop":1748953128191,"duration":446}}]},"tags":["auth","happy_path"]},"source":"331133ff02160f6a.json","parameterValues":[]}