{"uid":"840c2fb96386b3af","name":"Cannot send RTP with expired date","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi_expired_date","historyId":"af763254cdd5d120d914e8ce75139912","time":{"start":1745046396258,"stop":1745046397771,"duration":1513},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with expired date')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_expired_date():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['expiryDate'] = '2020-01-01'\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:76: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1745046337655,"stop":1745046337710,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1624-592"},{"name":"thread","value":"2370-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":65,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":66},"items":[{"uid":"9a868d7e390a903a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/299//#testresult/9a868d7e390a903a","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744960018529,"stop":1744960019705,"duration":1176}},{"uid":"ce4b6aaad6da478f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/298//#testresult/ce4b6aaad6da478f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744902284362,"stop":1744902286326,"duration":1964}},{"uid":"73a1dfdad66020b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/297//#testresult/73a1dfdad66020b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744873646535,"stop":1744873648052,"duration":1517}},{"uid":"bfd4bcc77d58c6fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/296//#testresult/bfd4bcc77d58c6fe","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744799607899,"stop":1744799609361,"duration":1462}},{"uid":"3052f91d9b43837b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/295//#testresult/3052f91d9b43837b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744787233110,"stop":1744787234543,"duration":1433}},{"uid":"5bc513f3e20c3823","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/294//#testresult/5bc513f3e20c3823","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744727120596,"stop":1744727122493,"duration":1897}},{"uid":"9f8aca2bd7a25291","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/293//#testresult/9f8aca2bd7a25291","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744726256692,"stop":1744726257809,"duration":1117}},{"uid":"2f5305742aaff337","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/292//#testresult/2f5305742aaff337","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744725399894,"stop":1744725401351,"duration":1457}},{"uid":"f903d0157ab6b29e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/291//#testresult/f903d0157ab6b29e","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744700828862,"stop":1744700830000,"duration":1138}},{"uid":"fcd957664835b494","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/290//#testresult/fcd957664835b494","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744640113674,"stop":1744640115024,"duration":1350}},{"uid":"9dfe3af4f37100cb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/289//#testresult/9dfe3af4f37100cb","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744614443437,"stop":1744614444986,"duration":1549}},{"uid":"ceddb72f73e5a5cd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/288//#testresult/ceddb72f73e5a5cd","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744528022343,"stop":1744528023989,"duration":1646}},{"uid":"c78dd47c049a3467","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/287//#testresult/c78dd47c049a3467","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744441594028,"stop":1744441595335,"duration":1307}},{"uid":"3f83c9ecc7dcbcb3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/285//#testresult/3f83c9ecc7dcbcb3","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744355226417,"stop":1744355228175,"duration":1758}},{"uid":"5f6ea7328781c10c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/284//#testresult/5f6ea7328781c10c","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744296847472,"stop":1744296848800,"duration":1328}},{"uid":"c01c6b387719d82f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/283//#testresult/c01c6b387719d82f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744268810796,"stop":1744268812105,"duration":1309}},{"uid":"a2296a40f6585ecd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/282//#testresult/a2296a40f6585ecd","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744215121306,"stop":1744215122430,"duration":1124}},{"uid":"a60e89a1d6f03029","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/275//#testresult/a60e89a1d6f03029","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744182415077,"stop":1744182417072,"duration":1995}},{"uid":"b5be25a99203dbbf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/273//#testresult/b5be25a99203dbbf","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744096035269,"stop":1744096036478,"duration":1209}},{"uid":"b937a9e18d4b600f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/272//#testresult/b937a9e18d4b600f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744009630262,"stop":1744009631506,"duration":1244}}]},"tags":["cbi","unhappy_path","send"]},"source":"840c2fb96386b3af.json","parameterValues":[]}