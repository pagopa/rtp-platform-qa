{"uid":"90626dfab977104a","name":"Unauthorized callback due to wrong certificate serial","fullName":"tests.test_callback#test_fail_send_rtp_callback_wrong_certificate_serial_DS_08P_compliant","historyId":"61610daabc7eba1095a613969245a72a","time":{"start":1749484603866,"stop":1749484603867,"duration":1},"status":"broken","statusMessage":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('Unauthorized callback due to wrong certificate serial')\n    @pytest.mark.callback\n    @pytest.mark.unhappy_path\n    def test_fail_send_rtp_callback_wrong_certificate_serial_DS_08P_compliant():\n        callback_data = generate_callback_data_DS_08P_compliant(BIC='MOCKSP01')\n    \n>       cert, key = pfx_to_pem(secrets.debtor_service_provider_mock_PFX_base64,\n                               secrets.debtor_service_provider_mock_PFX_password_base64,\n                               config.cert_path,\n                               config.key_path)\n\nfunctional-tests/tests/test_callback.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/cryptography.py:20: in pfx_to_pem\n    pfx_data = base64.b64decode(base64_pfx)\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/base64.py:83: in b64decode\n    s = _bytes_from_decode_data(s)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = None\n\n    def _bytes_from_decode_data(s):\n        if isinstance(s, str):\n            try:\n                return s.encode('ascii')\n            except UnicodeEncodeError:\n                raise ValueError('string argument should contain only ASCII characters')\n        if isinstance(s, bytes_types):\n            return s\n        try:\n            return memoryview(s).tobytes()\n        except TypeError:\n>           raise TypeError(\"argument should be a bytes-like object or ASCII \"\n                            \"string, not %r\" % s.__class__.__name__) from None\nE           TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/base64.py:45: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749484599772,"stop":1749484599830,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Callback"},{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2506-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":5,"skipped":0,"passed":65,"unknown":0,"total":71},"items":[{"uid":"ab02578a3325c86c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/369//#testresult/ab02578a3325c86c","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749484257559,"stop":1749484257560,"duration":1}},{"uid":"9f1854b34172839d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/368//#testresult/9f1854b34172839d","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749483915697,"stop":1749483915697,"duration":0}},{"uid":"1255916a9d7f86dd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/365//#testresult/1255916a9d7f86dd","status":"passed","time":{"start":1749482097961,"stop":1749482098372,"duration":411}},{"uid":"d9b2531e7595f2c0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/367//#testresult/d9b2531e7595f2c0","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749482223413,"stop":1749482223414,"duration":1}},{"uid":"9a5147073c2d9960","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/9a5147073c2d9960","status":"passed","time":{"start":1749452881259,"stop":1749452881722,"duration":463}},{"uid":"bfb28ab80b74cd2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/362//#testresult/bfb28ab80b74cd2","status":"passed","time":{"start":1749366425282,"stop":1749366425950,"duration":668}},{"uid":"4d38ac24e952a501","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/361//#testresult/4d38ac24e952a501","status":"passed","time":{"start":1749280010407,"stop":1749280010866,"duration":459}},{"uid":"f8d468c78173cb6f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/f8d468c78173cb6f","status":"passed","time":{"start":1749193619276,"stop":1749193619785,"duration":509}},{"uid":"be40b534a4310dad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/359//#testresult/be40b534a4310dad","status":"passed","time":{"start":1749107244536,"stop":1749107245214,"duration":678}},{"uid":"f42f4bc27d1eab19","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/358//#testresult/f42f4bc27d1eab19","status":"passed","time":{"start":1749020828986,"stop":1749020829433,"duration":447}},{"uid":"1f851f5c7a549d5e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/357//#testresult/1f851f5c7a549d5e","status":"passed","time":{"start":1748956564614,"stop":1748956565023,"duration":409}},{"uid":"dcbb2a6c1dd398c3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/356//#testresult/dcbb2a6c1dd398c3","status":"passed","time":{"start":1748953130591,"stop":1748953131087,"duration":496}},{"uid":"59c8ad907d72edcc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/355//#testresult/59c8ad907d72edcc","status":"passed","time":{"start":1748934473487,"stop":1748934473892,"duration":405}},{"uid":"99d90368c71194d2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/354//#testresult/99d90368c71194d2","status":"passed","time":{"start":1748848070948,"stop":1748848071338,"duration":390}},{"uid":"cec773cd7b2752dd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/353//#testresult/cec773cd7b2752dd","status":"passed","time":{"start":1748761625165,"stop":1748761625998,"duration":833}},{"uid":"7cdecaee6b695141","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/352//#testresult/7cdecaee6b695141","status":"passed","time":{"start":1748675216832,"stop":1748675217305,"duration":473}},{"uid":"c32ac593f32e59eb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/351//#testresult/c32ac593f32e59eb","status":"passed","time":{"start":1748588829643,"stop":1748588830312,"duration":669}},{"uid":"59c000c3d57dac1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/350//#testresult/59c000c3d57dac1","status":"passed","time":{"start":1748534029559,"stop":1748534030009,"duration":450}},{"uid":"324d98bfe1ec707","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/349//#testresult/324d98bfe1ec707","status":"passed","time":{"start":1748502454380,"stop":1748502455043,"duration":663}},{"uid":"445efb3c898c7891","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/348//#testresult/445efb3c898c7891","status":"passed","time":{"start":1748449649361,"stop":1748449649968,"duration":607}}]},"tags":["callback","unhappy_path"]},"source":"90626dfab977104a.json","parameterValues":[]}