{"uid":"6bb8d656c004dbaa","name":"Get payees with invalid authorization","fullName":"tests.test_service_providers_registry.TestServiceProvidersRegistry#test_get_payees_invalid_auth","historyId":"305a12be876d934f236df1440eafe4f2","time":{"start":1749484611469,"stop":1749484611469,"duration":0},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"self = <tests.test_service_providers_registry.TestServiceProvidersRegistry object at 0x7f26456da210>\n\n    @pytest.fixture(autouse=True)\n    def setup(self):\n>       self.access_token = get_valid_access_token(\n            client_id=secrets.pagopa_integration_service_registry.client_id,\n            client_secret=secrets.pagopa_integration_service_registry.client_secret,\n            access_token_function=get_access_token\n        )\n\nfunctional-tests/tests/test_service_providers_registry.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749484599772,"stop":1749484599830,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1749484611469,"stop":1749484612013,"duration":544},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/rtp-platform-qa/rtp-platform-qa/functional-tests/tests/test_service_providers_registry.py\", line 16, in setup\n    self.access_token = get_valid_access_token(\n                        ~~~~~~~~~~~~~~~~~~~~~~^\n        client_id=secrets.pagopa_integration_service_registry.client_id,\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        client_secret=secrets.pagopa_integration_service_registry.client_secret,\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        access_token_function=get_access_token\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/home/runner/work/rtp-platform-qa/rtp-platform-qa/api/auth.py\", line 8, in get_valid_access_token\n    token_response.raise_for_status()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/requests/models.py\", line 1024, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Service Providers Registry"},{"name":"story","value":"pagoPA retrieves service providers registry"},{"name":"tag","value":"unhappy_path"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_service_providers_registry"},{"name":"subSuite","value":"TestServiceProvidersRegistry"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2506-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_service_providers_registry"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":15,"skipped":0,"passed":19,"unknown":0,"total":34},"items":[{"uid":"b2f421606735231a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/369//#testresult/b2f421606735231a","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484269278,"stop":1749484269278,"duration":0}},{"uid":"f17793217465ad46","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/368//#testresult/f17793217465ad46","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749483926137,"stop":1749483926137,"duration":0}},{"uid":"9c05b9f9e4efbd09","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/365//#testresult/9c05b9f9e4efbd09","status":"passed","time":{"start":1749482319186,"stop":1749482319529,"duration":343}},{"uid":"cf2e912f60d75cee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/367//#testresult/cf2e912f60d75cee","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749482234950,"stop":1749482234950,"duration":0}},{"uid":"c5891cccfaae47bf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/c5891cccfaae47bf","status":"passed","time":{"start":1749453105366,"stop":1749453105802,"duration":436}},{"uid":"ad0bd69485757f48","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/362//#testresult/ad0bd69485757f48","status":"passed","time":{"start":1749366662384,"stop":1749366662992,"duration":608}},{"uid":"7678ca94311de1ef","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/361//#testresult/7678ca94311de1ef","status":"passed","time":{"start":1749280232659,"stop":1749280233070,"duration":411}},{"uid":"c0965d48940b398a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/c0965d48940b398a","status":"passed","time":{"start":1749193840820,"stop":1749193841157,"duration":337}},{"uid":"702d70e9773afca","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/359//#testresult/702d70e9773afca","status":"passed","time":{"start":1749107479759,"stop":1749107480359,"duration":600}},{"uid":"cbcf0eb0dafe999","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/358//#testresult/cbcf0eb0dafe999","status":"passed","time":{"start":1749021052608,"stop":1749021052998,"duration":390}},{"uid":"de817dc935f7e099","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/357//#testresult/de817dc935f7e099","status":"passed","time":{"start":1748956784415,"stop":1748956784752,"duration":337}},{"uid":"e04232492f883029","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/356//#testresult/e04232492f883029","status":"passed","time":{"start":1748953351014,"stop":1748953351357,"duration":343}},{"uid":"86e0308ac5e06d5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/355//#testresult/86e0308ac5e06d5","status":"passed","time":{"start":1748934693268,"stop":1748934693608,"duration":340}},{"uid":"ec7da6d7c437b67c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/354//#testresult/ec7da6d7c437b67c","status":"passed","time":{"start":1748848292888,"stop":1748848293228,"duration":340}},{"uid":"301563dc2b92e303","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/353//#testresult/301563dc2b92e303","status":"passed","time":{"start":1748761860856,"stop":1748761861471,"duration":615}},{"uid":"c311ce617d526355","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/352//#testresult/c311ce617d526355","status":"passed","time":{"start":1748675439171,"stop":1748675439572,"duration":401}},{"uid":"f48129b1a5f48d58","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/351//#testresult/f48129b1a5f48d58","status":"passed","time":{"start":1748589065670,"stop":1748589066284,"duration":614}},{"uid":"5d8ce355b8a85adc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/350//#testresult/5d8ce355b8a85adc","status":"passed","time":{"start":1748534188758,"stop":1748534189159,"duration":401}},{"uid":"1dd958a16dd9fa9f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/349//#testresult/1dd958a16dd9fa9f","status":"passed","time":{"start":1748502490577,"stop":1748502491164,"duration":587}},{"uid":"77619d811a9cb4f3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/348//#testresult/77619d811a9cb4f3","status":"passed","time":{"start":1748449679622,"stop":1748449680145,"duration":523}}]},"tags":["unhappy_path"]},"source":"6bb8d656c004dbaa.json","parameterValues":[]}