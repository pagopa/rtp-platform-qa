{"uid":"e0f06fa37896fc19","name":"Deactivation fails for non-existing activation","fullName":"tests.test_deactivation#test_deactivate_nonexistent_debtor","historyId":"2ffd1762fe591d3febabea74bd74c05d","time":{"start":1758093650232,"stop":1758093651052,"duration":820},"status":"failed","statusMessage":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('Deactivation')\n    @allure.story('Debtor deactivation')\n    @allure.title('Deactivation fails for non-existing activation')\n    @pytest.mark.auth\n    @pytest.mark.deactivation\n    @pytest.mark.unhappy_path\n    def test_deactivate_nonexistent_debtor():\n        access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n    \n        fake_activation_id = str(uuid.uuid4())\n    \n        deactivation_response = deactivate(access_token, fake_activation_id)\n>       assert deactivation_response.status_code == 404, f'Expected 404 status code for non-existent activation, got {deactivation_response.status_code}'\nE       AssertionError: Expected 404 status code for non-existent activation, got 500\nE       assert 500 == 404\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_deactivation.py:58: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758093619632,"stop":1758093619689,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Deactivation"},{"name":"story","value":"Debtor deactivation"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"deactivation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_deactivation"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2487-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_deactivation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":97,"broken":11,"skipped":0,"passed":77,"unknown":0,"total":185},"items":[{"uid":"f991f35d66a9d131","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/533//#testresult/f991f35d66a9d131","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1758007312501,"stop":1758007313380,"duration":879}},{"uid":"b29725877c655bbc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/532//#testresult/b29725877c655bbc","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1757920940554,"stop":1757920941307,"duration":753}},{"uid":"1646f53b0e0debb4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/531//#testresult/1646f53b0e0debb4","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1757834383659,"stop":1757834384829,"duration":1170}},{"uid":"cb6c64f2506f10cc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/530//#testresult/cb6c64f2506f10cc","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1757747927317,"stop":1757747928144,"duration":827}},{"uid":"bdc4e94b03edee43","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/529//#testresult/bdc4e94b03edee43","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1757665842151,"stop":1757665843398,"duration":1247}},{"uid":"b4df0e6ec5760fc8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/528//#testresult/b4df0e6ec5760fc8","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1757661631481,"stop":1757661632615,"duration":1134}},{"uid":"1fc44231c4ae1555","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/527//#testresult/1fc44231c4ae1555","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1757598328863,"stop":1757598329699,"duration":836}},{"uid":"9ebf3aa4fb9e7470","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/526//#testresult/9ebf3aa4fb9e7470","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1757575275996,"stop":1757575276853,"duration":857}},{"uid":"d1f71582d19bce5e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/525//#testresult/d1f71582d19bce5e","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1757489029764,"stop":1757489030613,"duration":849}},{"uid":"60f9e9307d3d2cae","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/524//#testresult/60f9e9307d3d2cae","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1757402506192,"stop":1757402507023,"duration":831}},{"uid":"884ed6d9e29952bc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/523//#testresult/884ed6d9e29952bc","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1757316103235,"stop":1757316103962,"duration":727}},{"uid":"451d8d30392f6bc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/522//#testresult/451d8d30392f6bc","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1757229592719,"stop":1757229593476,"duration":757}},{"uid":"25bb4e2b0b4f1f71","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/521//#testresult/25bb4e2b0b4f1f71","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1757143129882,"stop":1757143131141,"duration":1259}},{"uid":"74ab6a3bede4b0d5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/520//#testresult/74ab6a3bede4b0d5","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1757057096237,"stop":1757057096844,"duration":607}},{"uid":"ba791d5167e9e8f1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/519//#testresult/ba791d5167e9e8f1","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1756969633241,"stop":1756969634012,"duration":771}},{"uid":"c132e8b2670f13ec","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/518//#testresult/c132e8b2670f13ec","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1756910849104,"stop":1756910850364,"duration":1260}},{"uid":"b6dc322885bbeb30","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/517//#testresult/b6dc322885bbeb30","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1756883254914,"stop":1756883255774,"duration":860}},{"uid":"af0c9e806c515abb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/516//#testresult/af0c9e806c515abb","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1756797981141,"stop":1756797981857,"duration":716}},{"uid":"2d8aadac5812f1d1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/515//#testresult/2d8aadac5812f1d1","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1756796849583,"stop":1756796850323,"duration":740}},{"uid":"de5b4c3ceb641b26","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/514//#testresult/de5b4c3ceb641b26","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1756719577386,"stop":1756719578645,"duration":1259}}]},"tags":["auth","unhappy_path","deactivation"]},"source":"e0f06fa37896fc19.json","parameterValues":[]}