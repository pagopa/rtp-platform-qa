{"uid":"b4f76c01339e122e","name":"An RTP is sent through API","fullName":"tests.test_send_rtp#test_send_rtp_api","historyId":"6c14d2fbb180e49a106680915fe95577","time":{"start":1742713603680,"stop":1742713621755,"duration":18075},"status":"failed","statusMessage":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('An RTP is sent through API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    def test_send_rtp_api():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        activation_response = activate(debtor_service_provider_access_token, rtp_data['payer']['payerId'],\n                                       secrets.debtor_service_provider.service_provider_id)\n        assert activation_response.status_code == 201, 'Error activating debtor'\n    \n        send_response = send_rtp(access_token=creditor_service_provider_access_token, rtp_payload=rtp_data)\n>       assert send_response.status_code == 201\nE       assert 504 == 201\nE        +  where 504 = <Response [504]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:37: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1742713547026,"stop":1742713547089,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"fv-az2023-359"},{"name":"thread","value":"2345-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":38,"broken":0,"skipped":0,"passed":49,"unknown":0,"total":87},"items":[{"uid":"166526704915a36f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/252//#testresult/166526704915a36f","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1742627185532,"stop":1742627201560,"duration":16028}},{"uid":"34df72e6ea988d11","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/251//#testresult/34df72e6ea988d11","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1742576853297,"stop":1742576873861,"duration":20564}},{"uid":"bcface1781c96919","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/250//#testresult/bcface1781c96919","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1742540800879,"stop":1742540816953,"duration":16074}},{"uid":"c5d821a71fb241f5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/249//#testresult/c5d821a71fb241f5","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1742454398015,"stop":1742454414292,"duration":16277}},{"uid":"259e484fee133edd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/248//#testresult/259e484fee133edd","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1742368018197,"stop":1742368039703,"duration":21506}},{"uid":"c0109db7f378acc1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/247//#testresult/c0109db7f378acc1","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1742290399664,"stop":1742290416291,"duration":16627}},{"uid":"38233cdcddceb6a8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/246//#testresult/38233cdcddceb6a8","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1742281617761,"stop":1742281619750,"duration":1989}},{"uid":"dfdb6553db154f28","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/245//#testresult/dfdb6553db154f28","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742200612893,"stop":1742200614610,"duration":1717}},{"uid":"6555509737afe438","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/244//#testresult/6555509737afe438","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742195225234,"stop":1742195227380,"duration":2146}},{"uid":"240631a2f2d8e13c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/243//#testresult/240631a2f2d8e13c","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1742108784169,"stop":1742108800630,"duration":16461}},{"uid":"d3ed51269ab30e32","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/242//#testresult/d3ed51269ab30e32","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1742022376038,"stop":1742022392181,"duration":16143}},{"uid":"3078f210ba24892b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/241//#testresult/3078f210ba24892b","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741936001495,"stop":1741936022308,"duration":20813}},{"uid":"8afafb48e5499210","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/240//#testresult/8afafb48e5499210","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741849609232,"stop":1741849672595,"duration":63363}},{"uid":"ab2d339b88197fff","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/239//#testresult/ab2d339b88197fff","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741763218413,"stop":1741763282074,"duration":63661}},{"uid":"d1ad20997c5a8afc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/238//#testresult/d1ad20997c5a8afc","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741705699721,"stop":1741705762774,"duration":63053}},{"uid":"96e320c04f018bb8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/237//#testresult/96e320c04f018bb8","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741676815611,"stop":1741676881348,"duration":65737}},{"uid":"e9a1ee1b71ec2f1e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/236//#testresult/e9a1ee1b71ec2f1e","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741631452329,"stop":1741631515392,"duration":63063}},{"uid":"339645a811253b71","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/235//#testresult/339645a811253b71","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741628106505,"stop":1741628171570,"duration":65065}},{"uid":"bad3d9dedbd02722","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/234//#testresult/bad3d9dedbd02722","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741624727789,"stop":1741624791113,"duration":63324}},{"uid":"ae4e404379175fea","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/233//#testresult/ae4e404379175fea","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741603696204,"stop":1741603759474,"duration":63270}}]},"tags":["send","happy_path"]},"source":"b4f76c01339e122e.json","parameterValues":[]}