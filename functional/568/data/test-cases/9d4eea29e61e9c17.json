{"uid":"9d4eea29e61e9c17","name":"An RTP is sent through CBI API","fullName":"tests.test_debtor_service_provider_availability#test_send_rtp_to_cbi","historyId":"f80da3262bf8ce0e665c096b1873cbf4","time":{"start":1760434940614,"stop":1760434943265,"duration":2651},"status":"failed","statusMessage":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI directly')\n    @allure.title('An RTP is sent through CBI API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        rtp_data = generate_rtp_data()\n        cbi_payload = generate_epc_rtp_data(rtp_data, bic='UNCRITMM')\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id, secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(\n            secrets.CBI_client_PFX_base64,\n            secrets.CBI_client_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n        cbi_token = get_cbi_access_token(cert, key, auth)\n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 201\nE       assert 400 == 201\nE        +  where 400 = <Response [400]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider_availability.py:57: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1760434473986,"stop":1760434474068,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI directly"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider_availability"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2480-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":92,"broken":14,"skipped":0,"passed":104,"unknown":0,"total":210},"items":[{"uid":"13b94cb1d84db762","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/567//#testresult/13b94cb1d84db762","status":"passed","time":{"start":1760426988793,"stop":1760426999408,"duration":10615}},{"uid":"1f24ea4e145c6036","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/566//#testresult/1f24ea4e145c6036","status":"passed","time":{"start":1760340614714,"stop":1760340622765,"duration":8051}},{"uid":"8dbe5d821cc66f6d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/565//#testresult/8dbe5d821cc66f6d","status":"passed","time":{"start":1760254006161,"stop":1760254011781,"duration":5620}},{"uid":"aaf7eb78dc775e12","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/564//#testresult/aaf7eb78dc775e12","status":"passed","time":{"start":1760167574998,"stop":1760167582332,"duration":7334}},{"uid":"2a8cfcf854366743","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/563//#testresult/2a8cfcf854366743","status":"passed","time":{"start":1760081282338,"stop":1760081291693,"duration":9355}},{"uid":"3a6d3e39d3a57014","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/562//#testresult/3a6d3e39d3a57014","status":"passed","time":{"start":1759994921329,"stop":1759994924979,"duration":3650}},{"uid":"d64e5b0f061be600","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/561//#testresult/d64e5b0f061be600","status":"passed","time":{"start":1759929451303,"stop":1759929454626,"duration":3323}},{"uid":"d51f8509b8bae560","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/560//#testresult/d51f8509b8bae560","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1759921252511,"stop":1759921254359,"duration":1848}},{"uid":"49c17b2bb4f93a40","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/559//#testresult/49c17b2bb4f93a40","status":"passed","time":{"start":1759920013533,"stop":1759920019975,"duration":6442}},{"uid":"98604e057a606ac6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/558//#testresult/98604e057a606ac6","status":"passed","time":{"start":1759908327164,"stop":1759908336183,"duration":9019}},{"uid":"230ecb94d67bc29d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/557//#testresult/230ecb94d67bc29d","status":"passed","time":{"start":1759822108214,"stop":1759822111902,"duration":3688}},{"uid":"66ee7e5ac9d95830","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/556//#testresult/66ee7e5ac9d95830","status":"passed","time":{"start":1759735677836,"stop":1759735689856,"duration":12020}},{"uid":"99c4f86961250760","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/555//#testresult/99c4f86961250760","status":"passed","time":{"start":1759649947706,"stop":1759649953248,"duration":5542}},{"uid":"3cd24fe9ceb4e7a5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/554//#testresult/3cd24fe9ceb4e7a5","status":"passed","time":{"start":1759563598250,"stop":1759563604830,"duration":6580}},{"uid":"b04a3e4387973dbd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/553//#testresult/b04a3e4387973dbd","status":"passed","time":{"start":1759484799693,"stop":1759484809741,"duration":10048}},{"uid":"fc35ed3356a6c56","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/552//#testresult/fc35ed3356a6c56","status":"passed","time":{"start":1759476795899,"stop":1759476805120,"duration":9221}},{"uid":"ac415a8167d10176","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/551//#testresult/ac415a8167d10176","status":"passed","time":{"start":1759390790238,"stop":1759390797553,"duration":7315}},{"uid":"4abf09d9d5d9015e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/550//#testresult/4abf09d9d5d9015e","status":"passed","time":{"start":1759316187145,"stop":1759316197025,"duration":9880}},{"uid":"726d217f69e68a8b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/549//#testresult/726d217f69e68a8b","status":"passed","time":{"start":1759303760864,"stop":1759303769697,"duration":8833}},{"uid":"eb5fd3255035ea01","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/548//#testresult/eb5fd3255035ea01","status":"passed","time":{"start":1759217343665,"stop":1759217352435,"duration":8770}}]},"tags":["cbi","send","happy_path"]},"source":"9d4eea29e61e9c17.json","parameterValues":[]}