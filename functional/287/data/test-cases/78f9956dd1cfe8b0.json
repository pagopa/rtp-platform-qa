{"uid":"78f9956dd1cfe8b0","name":"RTP callback is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback","historyId":"564f1dce6aedb3cd53747bbee764bfb9","time":{"start":1744441588032,"stop":1744441588554,"duration":522},"status":"failed","statusMessage":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider receives RTP callback')\n    @allure.title('RTP callback is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback():\n        rtp_data = generate_rtp_data()\n    \n        cert, key = pfx_to_pem(secrets.debtor_service_provider_mock_PFX_base64,\n                               secrets.debtor_service_provider_mock_PFX_password_base64,\n                               config.cert_path,\n                               config.key_path)\n    \n        activation_response = srtp_callback(rtp_payload=rtp_data, cert_path=cert, key_path=key)\n>       assert activation_response.status_code == 200, 'Error from callback'\nE       AssertionError: Error from callback\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\nfunctional-tests/tests/test_callback.py:25: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1744441542481,"stop":1744441542542,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Callback"},{"name":"story","value":"Service provider receives RTP callback"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"fv-az1118-677"},{"name":"thread","value":"2398-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":24,"skipped":0,"passed":1,"unknown":0,"total":29},"items":[{"uid":"a866989112eff7d3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/285//#testresult/a866989112eff7d3","status":"failed","statusDetails":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1744355216219,"stop":1744355216880,"duration":661}},{"uid":"225b52a8e3d6a1da","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/284//#testresult/225b52a8e3d6a1da","status":"passed","time":{"start":1744296840495,"stop":1744296840969,"duration":474}},{"uid":"d4461fbdfdca7993","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/283//#testresult/d4461fbdfdca7993","status":"failed","statusDetails":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1744268803091,"stop":1744268803550,"duration":459}},{"uid":"ef8907b3aec62f79","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/282//#testresult/ef8907b3aec62f79","status":"failed","statusDetails":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1744215113979,"stop":1744215114390,"duration":411}},{"uid":"51101f52f9303d94","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/275//#testresult/51101f52f9303d94","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1744182409740,"stop":1744182409740,"duration":0}},{"uid":"a369497129f4207c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/273//#testresult/a369497129f4207c","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1744096027911,"stop":1744096027912,"duration":1}},{"uid":"4daadbb9aa090d07","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/272//#testresult/4daadbb9aa090d07","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1744009623590,"stop":1744009623591,"duration":1}},{"uid":"b714b17fe2260363","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/271//#testresult/b714b17fe2260363","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743923184749,"stop":1743923184750,"duration":1}},{"uid":"473d4b4727e2be6b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/270//#testresult/473d4b4727e2be6b","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743836801715,"stop":1743836801715,"duration":0}},{"uid":"4a2cfa993d19a00a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/269//#testresult/4a2cfa993d19a00a","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743755294818,"stop":1743755294819,"duration":1}},{"uid":"2add8cf8ffde4ed5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/268//#testresult/2add8cf8ffde4ed5","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743754330537,"stop":1743754330538,"duration":1}},{"uid":"2aec45c1ee9164ef","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/267//#testresult/2aec45c1ee9164ef","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743750399821,"stop":1743750399821,"duration":0}},{"uid":"1506441cba21da34","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/266//#testresult/1506441cba21da34","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743664017315,"stop":1743664017315,"duration":0}},{"uid":"d924a5c5d0a5eba7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/265//#testresult/d924a5c5d0a5eba7","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743577624986,"stop":1743577624987,"duration":1}},{"uid":"108106a805f5e6cb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/264//#testresult/108106a805f5e6cb","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743523471476,"stop":1743523471476,"duration":0}},{"uid":"fbcfa7b97aabb497","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/263//#testresult/fbcfa7b97aabb497","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743521034792,"stop":1743521034793,"duration":1}},{"uid":"29c65f7be148a9cd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/262//#testresult/29c65f7be148a9cd","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743491220317,"stop":1743491220318,"duration":1}},{"uid":"bf7a278e77d82b9e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/261//#testresult/bf7a278e77d82b9e","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743404833562,"stop":1743404833563,"duration":1}},{"uid":"1e92ebbd73db29fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/260//#testresult/1e92ebbd73db29fe","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743318391385,"stop":1743318391386,"duration":1}},{"uid":"5f3bb9f47e7107a7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/259//#testresult/5f3bb9f47e7107a7","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743231993128,"stop":1743231993129,"duration":1}}]},"tags":["callback","happy_path"]},"source":"78f9956dd1cfe8b0.json","parameterValues":[]}