{"uid":"11e83257f0869b2a","name":"Happy path: an already published debt position with VALID status is updated","fullName":"tests.test_debt_position_update#test_update_valid_already_published_debt_position","historyId":"0b7c62c7454094d3206fd6273e9965e0","time":{"start":1758699439743,"stop":1758699738319,"duration":298576},"description":"\nVerify that an already published debt position with VALID status\ncan be updated and changes are reflected in RTP lookups.\n","descriptionHtml":"<p>Verify that an already published debt position with VALID status<br />\ncan be updated and changes are reflected in RTP lookups.</p>\n","status":"failed","statusMessage":"Failed: Timeout (>300.0s) from pytest-timeout.","statusTrace":"setup_data = {'debtor_fc': 'GRDRGR54M70X000V', 'iupd': '31bf10da5c5444e8a', 'iuv': '13830970742012055', 'organization_id': '02438750586', ...}\n\n    @allure.feature('Debt Positions')\n    @allure.story('Update Valid Already Published Debt Position')\n    @pytest.mark.debt_positions\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.timeout(TEST_TIMEOUT_SEC)\n    def test_update_valid_already_published_debt_position(setup_data: dict[str, Any]) -> None:\n        \"\"\"\n        Verify that an already published debt position with VALID status\n        can be updated and changes are reflected in RTP lookups.\n        \"\"\"\n        allure.dynamic.title('Happy path: an already published debt position with VALID status is updated')\n    \n        update_data = _setup_update_test(setup_data, 'VALID')\n        access_token = _get_rtp_reader_access_token()\n        expected_status = 'SENT'\n    \n        while True:\n            response = get_rtp_by_notice_number(access_token, update_data.nav)\n    \n            if response.status_code != 200:\n                raise RuntimeError(\n                    f\"Error calling find_rtp_by_notice_number API. \"\n                    f\"Response {response.status_code}. Notice number: {update_data.nav}\"\n                )\n    \n            data = response.json()\n            assert isinstance(data, list), 'Invalid response body.'\n    \n            if len(data) == 0:\n>               time.sleep(POLLING_RATE_SEC)\nE               Failed: Timeout (>300.0s) from pytest-timeout.\n\nfunctional-tests/tests/test_debt_position_update.py:174: Failed","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758698467826,"stop":1758698467883,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_data","time":{"start":1758699438319,"stop":1758699439743,"duration":1424},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Update Valid Already Published Debt Position"},{"name":"feature","value":"Debt Positions"},{"name":"tag","value":"timeout(300)"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"tag","value":"debt_positions"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debt_position_update"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2484-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debt_position_update"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":1,"skipped":0,"passed":4,"unknown":0,"total":14},"items":[{"uid":"67b0f3527a35531e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/541//#testresult/67b0f3527a35531e","status":"passed","time":{"start":1758612544959,"stop":1758612557399,"duration":12440}},{"uid":"9959e48f3d27cd87","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/540//#testresult/9959e48f3d27cd87","status":"passed","time":{"start":1758526212167,"stop":1758526224726,"duration":12559}},{"uid":"46cc2c159f447576","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/539//#testresult/46cc2c159f447576","status":"passed","time":{"start":1758439554635,"stop":1758439568051,"duration":13416}},{"uid":"f893b509cf05d758","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/538//#testresult/f893b509cf05d758","status":"passed","time":{"start":1758353214671,"stop":1758353227316,"duration":12645}},{"uid":"79da5cad0d4021c6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/537//#testresult/79da5cad0d4021c6","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1758271014366,"stop":1758271014366,"duration":0}},{"uid":"b09c8079193d33be","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/536//#testresult/b09c8079193d33be","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1758266797942,"stop":1758267096883,"duration":298941}},{"uid":"300051264cd046e3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/535//#testresult/300051264cd046e3","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1758180395023,"stop":1758180693559,"duration":298536}},{"uid":"97560f8910f78b19","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/534//#testresult/97560f8910f78b19","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1758093981315,"stop":1758094280205,"duration":298890}},{"uid":"6291624b9009faa0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/533//#testresult/6291624b9009faa0","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1758007644663,"stop":1758007943495,"duration":298832}},{"uid":"f8ddca9800b79dfc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/532//#testresult/f8ddca9800b79dfc","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1757921270690,"stop":1757921569604,"duration":298914}},{"uid":"48b60a223de4c99f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/531//#testresult/48b60a223de4c99f","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1757834779475,"stop":1757835078015,"duration":298540}},{"uid":"5d2e27c362bcc915","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/530//#testresult/5d2e27c362bcc915","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1757748305744,"stop":1757748604597,"duration":298853}},{"uid":"ef280a2d1ed71652","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/529//#testresult/ef280a2d1ed71652","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1757666180915,"stop":1757666479366,"duration":298451}}]},"tags":["debt_positions","timeout(300)","send","happy_path"]},"source":"11e83257f0869b2a.json","parameterValues":[]}