{"uid":"7ebf49ab64853772","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1753081917570,"stop":1753081918462,"duration":892},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1753081872830,"stop":1753081872885,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmq0rgcvqdmg"},{"name":"thread","value":"2481-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":56,"broken":10,"skipped":0,"passed":28,"unknown":0,"total":94},"items":[{"uid":"fedda1776f56cf43","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/449//#testresult/fedda1776f56cf43","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1752995282645,"stop":1752995290523,"duration":7878}},{"uid":"166399e2b34bcbc7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/448//#testresult/166399e2b34bcbc7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1752908927207,"stop":1752908935038,"duration":7831}},{"uid":"ce65aad7676aa172","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/447//#testresult/ce65aad7676aa172","status":"passed","time":{"start":1752822651611,"stop":1752822657701,"duration":6090}},{"uid":"33a35a0f025331bf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/446//#testresult/33a35a0f025331bf","status":"passed","time":{"start":1752736199756,"stop":1752736202662,"duration":2906}},{"uid":"8e16a86e3789a158","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/445//#testresult/8e16a86e3789a158","status":"passed","time":{"start":1752672667035,"stop":1752672669481,"duration":2446}},{"uid":"5fd361b06a3fd0fd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/444//#testresult/5fd361b06a3fd0fd","status":"passed","time":{"start":1752649794008,"stop":1752649800203,"duration":6195}},{"uid":"19df53ec890445a0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/443//#testresult/19df53ec890445a0","status":"passed","time":{"start":1752569323306,"stop":1752569326228,"duration":2922}},{"uid":"f8d2081343c042ac","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/442//#testresult/f8d2081343c042ac","status":"passed","time":{"start":1752563405279,"stop":1752563411688,"duration":6409}},{"uid":"3a473a7a38cdf133","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/441//#testresult/3a473a7a38cdf133","status":"passed","time":{"start":1752477014766,"stop":1752477018227,"duration":3461}},{"uid":"a304bd6f75d9e4ac","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/440//#testresult/a304bd6f75d9e4ac","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1752390581871,"stop":1752390589206,"duration":7335}},{"uid":"6e7c0f3571236755","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/439//#testresult/6e7c0f3571236755","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1752304114148,"stop":1752304122777,"duration":8629}},{"uid":"8f9ceab8a5b70be3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/438//#testresult/8f9ceab8a5b70be3","status":"passed","time":{"start":1752217746712,"stop":1752217754343,"duration":7631}},{"uid":"ac4d25b7e2dcbd50","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/437//#testresult/ac4d25b7e2dcbd50","status":"passed","time":{"start":1752163226698,"stop":1752163229893,"duration":3195}},{"uid":"b4024a2f40d10788","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/436//#testresult/b4024a2f40d10788","status":"passed","time":{"start":1752160541890,"stop":1752160544254,"duration":2364}},{"uid":"313a59880d344083","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/435//#testresult/313a59880d344083","status":"passed","time":{"start":1752145276871,"stop":1752145281209,"duration":4338}},{"uid":"e843f049eef75adb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/434//#testresult/e843f049eef75adb","status":"passed","time":{"start":1752131355500,"stop":1752131362737,"duration":7237}},{"uid":"f7f68b406fc2a25b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/433//#testresult/f7f68b406fc2a25b","status":"passed","time":{"start":1752049298838,"stop":1752049301854,"duration":3016}},{"uid":"95157195ac631f19","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/432//#testresult/95157195ac631f19","status":"passed","time":{"start":1752044928535,"stop":1752044934742,"duration":6207}},{"uid":"9cccedec30ef29fb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/431//#testresult/9cccedec30ef29fb","status":"passed","time":{"start":1751958526848,"stop":1751958530995,"duration":4147}},{"uid":"6840750f47aa30fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/430//#testresult/6840750f47aa30fe","status":"passed","time":{"start":1751882705844,"stop":1751882709109,"duration":3265}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"7ebf49ab64853772.json","parameterValues":[]}