{"uid":"15b0d73a9edb3bd1","name":"An RTP is sent to ICCREA service with activated fiscal code","fullName":"functional-tests.tests.test_send_rtp#test_send_rtp_to_iccrea","historyId":"1eb8d3de0b6a65dd591cf5aa10130f4c","time":{"start":1761978129029,"stop":1761978132133,"duration":3104},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider')\n    @allure.title('An RTP is sent to ICCREA service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.iccrea\n    def test_send_rtp_to_iccrea():\n        rtp_data = generate_rtp_data(payer_id=secrets.iccrea_activated_fiscal_code)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:143: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761978018312,"stop":1761978018382,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider"},{"name":"tag","value":"iccrea"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"functional-tests.tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervmf2e7y"},{"name":"thread","value":"2451-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"functional-tests.tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":32,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":32},"items":[{"uid":"da1f5c2d5f2552","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/600//#testresult/da1f5c2d5f2552","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761891918015,"stop":1761891921365,"duration":3350}},{"uid":"6d1358638a1f6a5f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/599//#testresult/6d1358638a1f6a5f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761837122320,"stop":1761837125071,"duration":2751}},{"uid":"585089e9f254bd6f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/598//#testresult/585089e9f254bd6f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761818904168,"stop":1761818907403,"duration":3235}},{"uid":"1193811e52077349","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/597//#testresult/1193811e52077349","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761805428890,"stop":1761805431755,"duration":2865}},{"uid":"7179b43486407c60","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/596//#testresult/7179b43486407c60","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761752127291,"stop":1761752130434,"duration":3143}},{"uid":"8c86bdab704d5dcd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/595//#testresult/8c86bdab704d5dcd","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1761719132124,"stop":1761719133326,"duration":1202}},{"uid":"9791e7792af35e4e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/594//#testresult/9791e7792af35e4e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761632757336,"stop":1761632760582,"duration":3246}},{"uid":"a1c7889fbdd55ebb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/593//#testresult/a1c7889fbdd55ebb","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761546423044,"stop":1761546426251,"duration":3207}},{"uid":"d13cd43a1ecf3b6b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/592//#testresult/d13cd43a1ecf3b6b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761459769412,"stop":1761459772397,"duration":2985}},{"uid":"42f4cad71dcf8a8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/591//#testresult/42f4cad71dcf8a8","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761373330343,"stop":1761373333753,"duration":3410}},{"uid":"372b391f0a697db9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/590//#testresult/372b391f0a697db9","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761287013940,"stop":1761287016855,"duration":2915}},{"uid":"9acefcc337c630","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/589//#testresult/9acefcc337c630","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761200626104,"stop":1761200629673,"duration":3569}},{"uid":"3f82f9611b88b3fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/588//#testresult/3f82f9611b88b3fe","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761114285474,"stop":1761114288766,"duration":3292}},{"uid":"5de777bc845207a5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/587//#testresult/5de777bc845207a5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761053863702,"stop":1761053866936,"duration":3234}},{"uid":"2a97b4d268c76522","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/586//#testresult/2a97b4d268c76522","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761040708817,"stop":1761040711629,"duration":2812}},{"uid":"63c3894fc6ce5220","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/585//#testresult/63c3894fc6ce5220","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761027835629,"stop":1761027838203,"duration":2574}},{"uid":"f6fb59857d483100","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/584//#testresult/f6fb59857d483100","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760941476006,"stop":1760941479025,"duration":3019}},{"uid":"c397b97f7c067e2e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/583//#testresult/c397b97f7c067e2e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760854973935,"stop":1760854976808,"duration":2873}},{"uid":"3b4b4c9afe1fb4d5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/582//#testresult/3b4b4c9afe1fb4d5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760768509305,"stop":1760768512005,"duration":2700}},{"uid":"70e6360125ed66c6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/581//#testresult/70e6360125ed66c6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760682164493,"stop":1760682167331,"duration":2838}}]},"tags":["iccrea","real_integration","send","happy_path"]},"source":"15b0d73a9edb3bd1.json","parameterValues":[]}