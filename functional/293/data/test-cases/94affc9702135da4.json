{"uid":"94affc9702135da4","name":"An RTP is sent through CBI API","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi","historyId":"b7843ec0a9572280c9663808e1141c5c","time":{"start":1744726253558,"stop":1744726255135,"duration":1577},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('An RTP is sent through CBI API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        rtp_data = generate_rtp_data()\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1744726244342,"stop":1744726244406,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"tag","value":"cbi"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az798-412"},{"name":"thread","value":"2384-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":59,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":59},"items":[{"uid":"9dfe3db7f8c39288","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/292//#testresult/9dfe3db7f8c39288","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744725396979,"stop":1744725398554,"duration":1575}},{"uid":"732b4a1555246c10","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/291//#testresult/732b4a1555246c10","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744700825865,"stop":1744700827600,"duration":1735}},{"uid":"31994391cf811a48","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/290//#testresult/31994391cf811a48","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744640110690,"stop":1744640112289,"duration":1599}},{"uid":"16306723dbebdd9d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/289//#testresult/16306723dbebdd9d","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744614440623,"stop":1744614442204,"duration":1581}},{"uid":"764d00b6c4376d83","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/288//#testresult/764d00b6c4376d83","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744528017840,"stop":1744528020113,"duration":2273}},{"uid":"4ff436d8adaad58d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/287//#testresult/4ff436d8adaad58d","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744441591287,"stop":1744441592771,"duration":1484}},{"uid":"c00be15be590740c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/285//#testresult/c00be15be590740c","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744355221949,"stop":1744355224431,"duration":2482}},{"uid":"66782f2a017f72e9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/284//#testresult/66782f2a017f72e9","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744296844672,"stop":1744296846174,"duration":1502}},{"uid":"2d871d3b88788716","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/283//#testresult/2d871d3b88788716","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744268806806,"stop":1744268809328,"duration":2522}},{"uid":"42552f18ab7dfae0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/282//#testresult/42552f18ab7dfae0","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744215118562,"stop":1744215119972,"duration":1410}},{"uid":"811f07b505000165","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/275//#testresult/811f07b505000165","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744182412535,"stop":1744182413881,"duration":1346}},{"uid":"49ca4ee6e541ba9c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/273//#testresult/49ca4ee6e541ba9c","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744096032140,"stop":1744096033807,"duration":1667}},{"uid":"34e884996a47c52f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/272//#testresult/34e884996a47c52f","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744009627532,"stop":1744009628988,"duration":1456}},{"uid":"d53c0a76cc4d1478","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/271//#testresult/d53c0a76cc4d1478","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743923189039,"stop":1743923190968,"duration":1929}},{"uid":"fd76d3eca08d9889","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/270//#testresult/fd76d3eca08d9889","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743836805761,"stop":1743836808101,"duration":2340}},{"uid":"cd52aa75bd09e745","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/269//#testresult/cd52aa75bd09e745","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743755302018,"stop":1743755303441,"duration":1423}},{"uid":"e3c587eb071ea6e7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/268//#testresult/e3c587eb071ea6e7","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743754338108,"stop":1743754340556,"duration":2448}},{"uid":"e21651a9843020f5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/267//#testresult/e21651a9843020f5","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743750399831,"stop":1743750402358,"duration":2527}},{"uid":"e66475734a925891","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/266//#testresult/e66475734a925891","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743664017325,"stop":1743664020660,"duration":3335}},{"uid":"981ba860dcc786a7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/265//#testresult/981ba860dcc786a7","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743577624996,"stop":1743577627201,"duration":2205}}]},"tags":["cbi","send","happy_path"]},"source":"94affc9702135da4.json","parameterValues":[]}