{"uid":"f9cac773e9ced65e","name":"The service returns the mocked server error","fullName":"tests.test_send_rtp#test_receive_server_error_from_mock","historyId":"df79497008225556c6105188e0be1c16","time":{"start":1740553603519,"stop":1740553667323,"duration":63804},"status":"failed","statusMessage":"AssertionError: assert 504 == 500\n +  where 504 = <Response [504]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('The service returns the mocked server error')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_receive_server_error_from_mock():\n        mock_fiscal_code = 'RSSMRA85T10X000D'\n        expected_mocked_failure_status_code = 500\n    \n        rtp_data = generate_rtp_data()\n    \n        rtp_data['payer']['payerId'] = mock_fiscal_code\n    \n        debtor_service_provider_access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                                                      client_secret=secrets.debtor_service_provider.client_secret)\n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret)\n    \n        activate(debtor_service_provider_access_token, rtp_data['payer']['payerId'],\n                 secrets.debtor_service_provider.service_provider_id)\n    \n        response = send_rtp(access_token=creditor_service_provider_access_token, rtp_payload=rtp_data)\n>       assert response.status_code == expected_mocked_failure_status_code\nE       assert 504 == 500\nE        +  where 504 = <Response [504]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:86: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1740553578672,"stop":1740553578728,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"fv-az1675-162"},{"name":"thread","value":"2291-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":42},"items":[{"uid":"4b53edc07ce5fd15","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/214//#testresult/4b53edc07ce5fd15","status":"passed","time":{"start":1740467198628,"stop":1740467203950,"duration":5322}},{"uid":"3f8e7dd7fe6b1ec1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/213//#testresult/3f8e7dd7fe6b1ec1","status":"passed","time":{"start":1740391822617,"stop":1740391827235,"duration":4618}},{"uid":"27e6095f5cf21033","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/212//#testresult/27e6095f5cf21033","status":"passed","time":{"start":1740380823026,"stop":1740380828118,"duration":5092}},{"uid":"32bde9d79778240f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/211//#testresult/32bde9d79778240f","status":"passed","time":{"start":1740294356511,"stop":1740294360911,"duration":4400}},{"uid":"10d30fb743875e12","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/210//#testresult/10d30fb743875e12","status":"passed","time":{"start":1740207947831,"stop":1740207953060,"duration":5229}},{"uid":"c97064235de44bb4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/209//#testresult/c97064235de44bb4","status":"passed","time":{"start":1740144058080,"stop":1740144062645,"duration":4565}},{"uid":"fb1adac7121b75d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/208//#testresult/fb1adac7121b75d","status":"passed","time":{"start":1740121615910,"stop":1740121621084,"duration":5174}},{"uid":"bca92b4689e73513","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/207//#testresult/bca92b4689e73513","status":"passed","time":{"start":1740039483932,"stop":1740039488376,"duration":4444}},{"uid":"51539bafe7c942b6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/206//#testresult/51539bafe7c942b6","status":"passed","time":{"start":1740035206943,"stop":1740035212661,"duration":5718}},{"uid":"13455c7f5a9aefa6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/205//#testresult/13455c7f5a9aefa6","status":"passed","time":{"start":1739977936338,"stop":1739977940803,"duration":4465}},{"uid":"7d1d005e1f4defd6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/204//#testresult/7d1d005e1f4defd6","status":"passed","time":{"start":1739948781609,"stop":1739948786726,"duration":5117}},{"uid":"a9f83757c620a12e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/203//#testresult/a9f83757c620a12e","status":"passed","time":{"start":1739909379593,"stop":1739909384972,"duration":5379}},{"uid":"18e6c8f512875621","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/202//#testresult/18e6c8f512875621","status":"passed","time":{"start":1739862393611,"stop":1739862399184,"duration":5573}},{"uid":"92d84317bf473160","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/201//#testresult/92d84317bf473160","status":"passed","time":{"start":1739776017249,"stop":1739776022771,"duration":5522}},{"uid":"249cd30f8349c11","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/200//#testresult/249cd30f8349c11","status":"passed","time":{"start":1739689541713,"stop":1739689546578,"duration":4865}},{"uid":"6e06792e2259bb36","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/199//#testresult/6e06792e2259bb36","status":"passed","time":{"start":1739603145492,"stop":1739603150574,"duration":5082}},{"uid":"a1fa40c02f0f12f6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/198//#testresult/a1fa40c02f0f12f6","status":"passed","time":{"start":1739516774901,"stop":1739516779150,"duration":4249}},{"uid":"fca1cc070efb6ced","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/197//#testresult/fca1cc070efb6ced","status":"passed","time":{"start":1739430418019,"stop":1739430422032,"duration":4013}},{"uid":"7597df632b13195e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/196//#testresult/7597df632b13195e","status":"passed","time":{"start":1739343983225,"stop":1739343987178,"duration":3953}},{"uid":"637509242c6e0b0a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/195//#testresult/637509242c6e0b0a","status":"passed","time":{"start":1739257592152,"stop":1739257597414,"duration":5262}}]},"tags":["unhappy_path","send"]},"source":"f9cac773e9ced65e.json","parameterValues":[]}