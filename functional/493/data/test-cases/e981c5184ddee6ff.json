{"uid":"e981c5184ddee6ff","name":"Deactivation fails for non-existing activation","fullName":"tests.test_deactivation#test_deactivate_nonexistent_debtor","historyId":"2ffd1762fe591d3febabea74bd74c05d","time":{"start":1755414411050,"stop":1755414411785,"duration":735},"status":"failed","statusMessage":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('Deactivation')\n    @allure.story('Debtor deactivation')\n    @allure.title('Deactivation fails for non-existing activation')\n    @pytest.mark.auth\n    @pytest.mark.deactivation\n    @pytest.mark.unhappy_path\n    def test_deactivate_nonexistent_debtor():\n        access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n    \n        fake_activation_id = str(uuid.uuid4())\n    \n        deactivation_response = deactivate(access_token, fake_activation_id)\n>       assert deactivation_response.status_code == 404, f'Expected 404 status code for non-existent activation, got {deactivation_response.status_code}'\nE       AssertionError: Expected 404 status code for non-existent activation, got 500\nE       assert 500 == 404\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_deactivation.py:58: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755414381991,"stop":1755414382049,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Deactivation"},{"name":"story","value":"Debtor deactivation"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"deactivation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_deactivation"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2547-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_deactivation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":57,"broken":10,"skipped":0,"passed":77,"unknown":0,"total":144},"items":[{"uid":"8c2a5c8f18f21338","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/492//#testresult/8c2a5c8f18f21338","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1755328002590,"stop":1755328003304,"duration":714}},{"uid":"324567245e695ca7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/491//#testresult/324567245e695ca7","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1755241689213,"stop":1755241689945,"duration":732}},{"uid":"fadb538061683fc8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/490//#testresult/fadb538061683fc8","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1755166793291,"stop":1755166794238,"duration":947}},{"uid":"6d1c01250e41232a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/489//#testresult/6d1c01250e41232a","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1755158306559,"stop":1755158307307,"duration":748}},{"uid":"cf037fba8728756f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/488//#testresult/cf037fba8728756f","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1755155331126,"stop":1755155332381,"duration":1255}},{"uid":"31bd110f723686cf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/487//#testresult/31bd110f723686cf","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1755068915680,"stop":1755068916568,"duration":888}},{"uid":"840ff663f8c8dce0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/486//#testresult/840ff663f8c8dce0","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754982521568,"stop":1754982522822,"duration":1254}},{"uid":"77340bbbafacc150","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/485//#testresult/77340bbbafacc150","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754907848143,"stop":1754907848990,"duration":847}},{"uid":"81badc5eb7b2009e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/483//#testresult/81badc5eb7b2009e","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754896278539,"stop":1754896279803,"duration":1264}},{"uid":"dd63177dc5c5795f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/482//#testresult/dd63177dc5c5795f","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754809615688,"stop":1754809616550,"duration":862}},{"uid":"a04853e0c2f07cc3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/481//#testresult/a04853e0c2f07cc3","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754723230554,"stop":1754723231289,"duration":735}},{"uid":"d9c8ff4f2c32c6be","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/480//#testresult/d9c8ff4f2c32c6be","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754637110687,"stop":1754637111947,"duration":1260}},{"uid":"f77f779e3325d844","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/479//#testresult/f77f779e3325d844","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754550684366,"stop":1754550685350,"duration":984}},{"uid":"3e2479682d386328","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/478//#testresult/3e2479682d386328","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754464789296,"stop":1754464790559,"duration":1263}},{"uid":"c6ebe80aeb5550f9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/476//#testresult/c6ebe80aeb5550f9","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754464728214,"stop":1754464728919,"duration":705}},{"uid":"4c3a06a314ec6997","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/475//#testresult/4c3a06a314ec6997","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754464292791,"stop":1754464294077,"duration":1286}},{"uid":"ad58dddd54b88f52","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/474//#testresult/ad58dddd54b88f52","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754387685747,"stop":1754387686456,"duration":709}},{"uid":"3833c7bbfdaa5b2d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/473//#testresult/3833c7bbfdaa5b2d","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754377956375,"stop":1754377957276,"duration":901}},{"uid":"d165e459b8534590","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/472//#testresult/d165e459b8534590","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754377891401,"stop":1754377892774,"duration":1373}},{"uid":"9830b4c98f718135","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/471//#testresult/9830b4c98f718135","status":"failed","statusDetails":"AssertionError: Expected 404 status code for non-existent activation, got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754319188278,"stop":1754319189101,"duration":823}}]},"tags":["auth","unhappy_path","deactivation"]},"source":"e981c5184ddee6ff.json","parameterValues":[]}