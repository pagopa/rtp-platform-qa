{"uid":"2cb889e938f93340","name":"malformed rtp_id → 400 Bad Request","fullName":"tests.test_get_rtp#test_get_rtp_invalid_id_format","historyId":"c21612d12b7544d1e793acec3594d7a6","time":{"start":1753945847260,"stop":1753945847860,"duration":600},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Get')\n    @allure.story('Service provider retrieves an RTP')\n    @allure.title('malformed rtp_id → 400 Bad Request')\n    @pytest.mark.get\n    @pytest.mark.unhappy_path\n    def test_get_rtp_invalid_id_format():\n        bad_id = '123-not-a-uuid'\n>       token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_get_rtp.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1753945769730,"stop":1753945769788,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider retrieves an RTP"},{"name":"feature","value":"RTP Get"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"pkrvmjbmru5nbw0"},{"name":"thread","value":"2573-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":70,"unknown":0,"total":78},"items":[{"uid":"a98a3160d711cd21","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/463//#testresult/a98a3160d711cd21","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753878282606,"stop":1753878283263,"duration":657}},{"uid":"f3bcc8fd07010891","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/462//#testresult/f3bcc8fd07010891","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753859495250,"stop":1753859495889,"duration":639}},{"uid":"d9cb6b1c266a4300","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/461//#testresult/d9cb6b1c266a4300","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753773053826,"stop":1753773054462,"duration":636}},{"uid":"8b1d8e964e4558e2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/460//#testresult/8b1d8e964e4558e2","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753686728138,"stop":1753686728630,"duration":492}},{"uid":"d26907c5059d1ff5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/459//#testresult/d26907c5059d1ff5","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753600065718,"stop":1753600066078,"duration":360}},{"uid":"6f8366d99ce4c1c2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/458//#testresult/6f8366d99ce4c1c2","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753513678346,"stop":1753513678719,"duration":373}},{"uid":"4d152702d5670788","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/457//#testresult/4d152702d5670788","status":"passed","time":{"start":1753433584361,"stop":1753433585615,"duration":1254}},{"uid":"e57195af0dab2370","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/456//#testresult/e57195af0dab2370","status":"passed","time":{"start":1753427403155,"stop":1753427404082,"duration":927}},{"uid":"11ecd8c59fb15969","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/455//#testresult/11ecd8c59fb15969","status":"passed","time":{"start":1753367003061,"stop":1753367004196,"duration":1135}},{"uid":"b9aa1505b5ee4926","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/454//#testresult/b9aa1505b5ee4926","status":"passed","time":{"start":1753351363646,"stop":1753351364496,"duration":850}},{"uid":"4ef662563c1bc686","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/453//#testresult/4ef662563c1bc686","status":"passed","time":{"start":1753341014038,"stop":1753341014977,"duration":939}},{"uid":"6b85812b7d1e5e64","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/452//#testresult/6b85812b7d1e5e64","status":"passed","time":{"start":1753254632603,"stop":1753254633416,"duration":813}},{"uid":"7e093a65ee48b420","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/451//#testresult/7e093a65ee48b420","status":"passed","time":{"start":1753168191504,"stop":1753168192596,"duration":1092}},{"uid":"bec77e99f3be0d57","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/450//#testresult/bec77e99f3be0d57","status":"passed","time":{"start":1753081912399,"stop":1753081913114,"duration":715}},{"uid":"8b040e74c7aa2bb4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/449//#testresult/8b040e74c7aa2bb4","status":"passed","time":{"start":1752995277643,"stop":1752995278344,"duration":701}},{"uid":"aaa124458703dd43","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/448//#testresult/aaa124458703dd43","status":"passed","time":{"start":1752908918107,"stop":1752908919372,"duration":1265}},{"uid":"b8ac371a309a71d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/447//#testresult/b8ac371a309a71d","status":"passed","time":{"start":1752822642698,"stop":1752822643956,"duration":1258}},{"uid":"d30c3c6a808343d4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/446//#testresult/d30c3c6a808343d4","status":"passed","time":{"start":1752736192646,"stop":1752736193604,"duration":958}},{"uid":"a8b39b86118881e5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/445//#testresult/a8b39b86118881e5","status":"passed","time":{"start":1752672661574,"stop":1752672662284,"duration":710}},{"uid":"2559b32555be70e7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/444//#testresult/2559b32555be70e7","status":"passed","time":{"start":1752649787094,"stop":1752649788032,"duration":938}}]},"tags":["get","unhappy_path"]},"source":"2cb889e938f93340.json","parameterValues":[]}