{"uid":"1111157e7ea8544a","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1750329808572,"stop":1750329813747,"duration":5175},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        rtp_data = generate_rtp_data(payer_id=fiscal_code)\n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        send_response = send_rtp(access_token=creditor_service_provider_access_token, rtp_payload=rtp_data)\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:61: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750329626327,"stop":1750329626385,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2604-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":33,"broken":9,"skipped":0,"passed":1,"unknown":0,"total":43},"items":[{"uid":"e96d4f2ae82c7689","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/395//#testresult/e96d4f2ae82c7689","status":"passed","time":{"start":1750328737185,"stop":1750328740772,"duration":3587}},{"uid":"a564931b437e290d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/394//#testresult/a564931b437e290d","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750317697571,"stop":1750317705890,"duration":8319}},{"uid":"a95bef62ca1302c1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/393//#testresult/a95bef62ca1302c1","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750317029795,"stop":1750317036389,"duration":6594}},{"uid":"8f21bb4855e14d1f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/392//#testresult/8f21bb4855e14d1f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750230644770,"stop":1750230654053,"duration":9283}},{"uid":"4ffd84fb9c66f8a7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/391//#testresult/4ffd84fb9c66f8a7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750170289770,"stop":1750170295140,"duration":5370}},{"uid":"5d336ad17440465c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/389//#testresult/5d336ad17440465c","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750144209526,"stop":1750144213563,"duration":4037}},{"uid":"6a0f9f96f91f326f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/388//#testresult/6a0f9f96f91f326f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750069187023,"stop":1750069190474,"duration":3451}},{"uid":"2ad83e20f403e598","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/387//#testresult/2ad83e20f403e598","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750057868531,"stop":1750057872634,"duration":4103}},{"uid":"bfc4174e159424a6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/386//#testresult/bfc4174e159424a6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749971406667,"stop":1749971411477,"duration":4810}},{"uid":"1ff3357dfa88fd74","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/385//#testresult/1ff3357dfa88fd74","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749885011508,"stop":1749885015130,"duration":3622}},{"uid":"c22933c550c92b84","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/384//#testresult/c22933c550c92b84","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749810275063,"stop":1749810278154,"duration":3091}},{"uid":"1b4ea694d48a1011","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/383//#testresult/1b4ea694d48a1011","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749805505416,"stop":1749805509016,"duration":3600}},{"uid":"860d688c00fd2fbb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/382//#testresult/860d688c00fd2fbb","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749804026510,"stop":1749804030064,"duration":3554}},{"uid":"8e52057629adb0aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/381//#testresult/8e52057629adb0aa","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749802747448,"stop":1749802751522,"duration":4074}},{"uid":"83b5b14b3ef721b8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/380//#testresult/83b5b14b3ef721b8","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749801683281,"stop":1749801686934,"duration":3653}},{"uid":"9139f102a399981d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/378//#testresult/9139f102a399981d","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749800524571,"stop":1749800524949,"duration":378}},{"uid":"9b78be258ba327f3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/377//#testresult/9b78be258ba327f3","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749799858533,"stop":1749799859310,"duration":777}},{"uid":"fc4a3451616658ec","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/376//#testresult/fc4a3451616658ec","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749798587439,"stop":1749798591398,"duration":3959}},{"uid":"4a6b6e42fc090f11","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/375//#testresult/4a6b6e42fc090f11","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749712201719,"stop":1749712205925,"duration":4206}},{"uid":"d948cc7bb83a52e7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/374//#testresult/d948cc7bb83a52e7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749625789494,"stop":1749625792728,"duration":3234}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"1111157e7ea8544a.json","parameterValues":[]}