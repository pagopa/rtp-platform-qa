{"uid":"fd76d3eca08d9889","name":"An RTP is sent through CBI API","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi","historyId":"b7843ec0a9572280c9663808e1141c5c","time":{"start":1743836805761,"stop":1743836808101,"duration":2340},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('An RTP is sent through CBI API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        rtp_data = generate_rtp_data()\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1743836763328,"stop":1743836763385,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1695-570"},{"name":"thread","value":"2335-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":44,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":44},"items":[{"uid":"cd52aa75bd09e745","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/269//#testresult/cd52aa75bd09e745","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743755302018,"stop":1743755303441,"duration":1423}},{"uid":"e3c587eb071ea6e7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/268//#testresult/e3c587eb071ea6e7","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743754338108,"stop":1743754340556,"duration":2448}},{"uid":"e21651a9843020f5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/267//#testresult/e21651a9843020f5","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743750399831,"stop":1743750402358,"duration":2527}},{"uid":"e66475734a925891","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/266//#testresult/e66475734a925891","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743664017325,"stop":1743664020660,"duration":3335}},{"uid":"981ba860dcc786a7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/265//#testresult/981ba860dcc786a7","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743577624996,"stop":1743577627201,"duration":2205}},{"uid":"f5a77f5069fa056e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/264//#testresult/f5a77f5069fa056e","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743523471486,"stop":1743523473499,"duration":2013}},{"uid":"fa869d24a50e7f31","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/263//#testresult/fa869d24a50e7f31","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743521034802,"stop":1743521037648,"duration":2846}},{"uid":"bafab3a902a5b417","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/262//#testresult/bafab3a902a5b417","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743491220328,"stop":1743491221716,"duration":1388}},{"uid":"85b8c7275ecbef60","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/261//#testresult/85b8c7275ecbef60","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743404833574,"stop":1743404835156,"duration":1582}},{"uid":"68297a6198bc832c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/260//#testresult/68297a6198bc832c","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743318391396,"stop":1743318393129,"duration":1733}},{"uid":"b0a266d30bd7322b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/259//#testresult/b0a266d30bd7322b","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743231993138,"stop":1743231999342,"duration":6204}},{"uid":"430394cb93c36212","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/258//#testresult/430394cb93c36212","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743145626711,"stop":1743145629180,"duration":2469}},{"uid":"49b73a59fbd3b486","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/257//#testresult/49b73a59fbd3b486","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743059220285,"stop":1743059222487,"duration":2202}},{"uid":"c0a87e9420466467","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/256//#testresult/c0a87e9420466467","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742972814204,"stop":1742972815895,"duration":1691}},{"uid":"6b201ea48dd0e6e2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/255//#testresult/6b201ea48dd0e6e2","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742886423782,"stop":1742886426025,"duration":2243}},{"uid":"68e677ef2c967512","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/254//#testresult/68e677ef2c967512","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742800024497,"stop":1742800026783,"duration":2286}},{"uid":"e40654c57bf2da84","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/253//#testresult/e40654c57bf2da84","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742713595600,"stop":1742713598497,"duration":2897}},{"uid":"f6a9e9a75a8481e4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/252//#testresult/f6a9e9a75a8481e4","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742627176068,"stop":1742627181740,"duration":5672}},{"uid":"6920d4602af00ad8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/251//#testresult/6920d4602af00ad8","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742576847793,"stop":1742576849242,"duration":1449}},{"uid":"4f3e0f8652f4f73d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/250//#testresult/4f3e0f8652f4f73d","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742540796541,"stop":1742540798122,"duration":1581}}]},"tags":["cbi","send","happy_path"]},"source":"fd76d3eca08d9889.json","parameterValues":[]}