{"uid":"6bbf9bee4fab018b","name":"An RTP is sent through CBI API","fullName":"tests.test_debtor_service_provider_availability#test_send_rtp_to_cbi","historyId":"f80da3262bf8ce0e665c096b1873cbf4","time":{"start":1753168179528,"stop":1753168181115,"duration":1587},"status":"failed","statusMessage":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI directly')\n    @allure.title('An RTP is sent through CBI API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        rtp_data = generate_rtp_data()\n        cbi_payload = generate_epc_rtp_data(rtp_data, bic='UNCRITMM')\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id, secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(\n            secrets.CBI_client_PFX_base64,\n            secrets.CBI_client_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n        cbi_token = get_cbi_access_token(cert, key, auth)\n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 201\nE       assert 400 == 201\nE        +  where 400 = <Response [400]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider_availability.py:57: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1753168152226,"stop":1753168152283,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to CBI directly"},{"name":"tag","value":"cbi"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider_availability"},{"name":"host","value":"pkrvmq0rgcvqdmg"},{"name":"thread","value":"2538-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":62,"broken":11,"skipped":0,"passed":22,"unknown":0,"total":95},"items":[{"uid":"13346a324958434e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/450//#testresult/13346a324958434e","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='stgcbiglobeopenbankingapigateway.nexi.it', port=443): Max retries exceeded with url: /nexi/oauth/v2/token (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))","time":{"start":1753081900969,"stop":1753081901375,"duration":406}},{"uid":"634ee8e3224a9324","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/449//#testresult/634ee8e3224a9324","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1752995257208,"stop":1752995266298,"duration":9090}},{"uid":"76bfc18920e2155a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/448//#testresult/76bfc18920e2155a","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1752908896421,"stop":1752908903019,"duration":6598}},{"uid":"632917b452f4f3bc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/447//#testresult/632917b452f4f3bc","status":"passed","time":{"start":1752822620758,"stop":1752822628170,"duration":7412}},{"uid":"cc7a2380658fb42e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/446//#testresult/cc7a2380658fb42e","status":"passed","time":{"start":1752736171395,"stop":1752736179882,"duration":8487}},{"uid":"40a379bda33fd7a3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/445//#testresult/40a379bda33fd7a3","status":"passed","time":{"start":1752672647738,"stop":1752672650526,"duration":2788}},{"uid":"b37fe782ddaacf6b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/444//#testresult/b37fe782ddaacf6b","status":"passed","time":{"start":1752649755716,"stop":1752649774654,"duration":18938}},{"uid":"56497794bc042e61","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/443//#testresult/56497794bc042e61","status":"passed","time":{"start":1752569304514,"stop":1752569307442,"duration":2928}},{"uid":"93e156a8f724afd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/442//#testresult/93e156a8f724afd","status":"passed","time":{"start":1752563371611,"stop":1752563379231,"duration":7620}},{"uid":"b1d45838fd55ef3a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/441//#testresult/b1d45838fd55ef3a","status":"passed","time":{"start":1752476990369,"stop":1752476998939,"duration":8570}},{"uid":"dfd25d32edb527f7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/440//#testresult/dfd25d32edb527f7","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1752390553453,"stop":1752390566354,"duration":12901}},{"uid":"967f32b701933eb2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/439//#testresult/967f32b701933eb2","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1752304092455,"stop":1752304098229,"duration":5774}},{"uid":"e32492a5efda6fd7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/438//#testresult/e32492a5efda6fd7","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='stgcbiglobeopenbankingapigateway.nexi.it', port=443): Max retries exceeded with url: /srtp/core/v1/1.0.0/sepa-request-to-pay-requests (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))","time":{"start":1752217724766,"stop":1752217726302,"duration":1536}},{"uid":"fbd0fd4993d4077e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/437//#testresult/fbd0fd4993d4077e","status":"passed","time":{"start":1752163209291,"stop":1752163212524,"duration":3233}},{"uid":"e846eec8f92e3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/436//#testresult/e846eec8f92e3","status":"passed","time":{"start":1752160521207,"stop":1752160524006,"duration":2799}},{"uid":"a8d819017eea7a4d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/435//#testresult/a8d819017eea7a4d","status":"passed","time":{"start":1752145253939,"stop":1752145258944,"duration":5005}},{"uid":"db6d6d877e5928f5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/434//#testresult/db6d6d877e5928f5","status":"passed","time":{"start":1752131319175,"stop":1752131331772,"duration":12597}},{"uid":"e84fb6e582b9bbe4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/433//#testresult/e84fb6e582b9bbe4","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1752049273147,"stop":1752049275205,"duration":2058}},{"uid":"6a5a94834c0a5b74","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/432//#testresult/6a5a94834c0a5b74","status":"passed","time":{"start":1752044905036,"stop":1752044913134,"duration":8098}},{"uid":"30772812d4beec59","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/431//#testresult/30772812d4beec59","status":"passed","time":{"start":1751958496364,"stop":1751958501582,"duration":5218}}]},"tags":["cbi","send","happy_path"]},"source":"6bbf9bee4fab018b.json","parameterValues":[]}