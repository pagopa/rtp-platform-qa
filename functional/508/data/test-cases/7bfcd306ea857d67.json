{"uid":"7bfcd306ea857d67","name":"An RTP is sent to ICCREA service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_iccrea","historyId":"43c6e6f1884b3efb611eee04b5b6eb0c","time":{"start":1756364945481,"stop":1756364948804,"duration":3323},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider')\n    @allure.title('An RTP is sent to ICCREA service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.iccrea\n    def test_send_rtp_to_iccrea():\n        rtp_data = generate_rtp_data(payer_id=secrets.iccrea_activated_fiscal_code)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:143: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1756364819271,"stop":1756364819328,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider"},{"name":"tag","value":"iccrea"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmccyg1gnepe"},{"name":"thread","value":"2561-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":48,"broken":17,"skipped":0,"passed":20,"unknown":0,"total":85},"items":[{"uid":"1f35d21f64a35bb2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/507//#testresult/1f35d21f64a35bb2","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756278532208,"stop":1756278535805,"duration":3597}},{"uid":"6f840f68cd864caf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/506//#testresult/6f840f68cd864caf","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756192121711,"stop":1756192124158,"duration":2447}},{"uid":"d15727aa803793f7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/505//#testresult/d15727aa803793f7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756105767835,"stop":1756105770452,"duration":2617}},{"uid":"5152b051a8444b26","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/504//#testresult/5152b051a8444b26","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756019255639,"stop":1756019258317,"duration":2678}},{"uid":"f4d0d072c6208a5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/503//#testresult/f4d0d072c6208a5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755932850097,"stop":1755932853490,"duration":3393}},{"uid":"e1996dc0e3ac5985","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/502//#testresult/e1996dc0e3ac5985","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755847723107,"stop":1755847726329,"duration":3222}},{"uid":"7a285f4dbef5dafd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/501//#testresult/7a285f4dbef5dafd","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755846505816,"stop":1755846508966,"duration":3150}},{"uid":"a35d991ef4d05230","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/500//#testresult/a35d991ef4d05230","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755843971586,"stop":1755843974301,"duration":2715}},{"uid":"644e37fb984fce90","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/499//#testresult/644e37fb984fce90","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755760238948,"stop":1755760241654,"duration":2706}},{"uid":"2ae7a9613756f663","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/498//#testresult/2ae7a9613756f663","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755673761620,"stop":1755673765335,"duration":3715}},{"uid":"5d455b8c145c836","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/497//#testresult/5d455b8c145c836","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755613357038,"stop":1755613359717,"duration":2679}},{"uid":"808c1cd4435bab5a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/496//#testresult/808c1cd4435bab5a","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755588537905,"stop":1755588540469,"duration":2564}},{"uid":"de1425a93357bbe4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/495//#testresult/de1425a93357bbe4","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755587328219,"stop":1755587330742,"duration":2523}},{"uid":"77eb6be0e9bffbf7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/494//#testresult/77eb6be0e9bffbf7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755501075823,"stop":1755501079494,"duration":3671}},{"uid":"2dca013af42d4ca8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/493//#testresult/2dca013af42d4ca8","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755414465314,"stop":1755414468322,"duration":3008}},{"uid":"ba59d1782ae3372c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/492//#testresult/ba59d1782ae3372c","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755328056790,"stop":1755328059578,"duration":2788}},{"uid":"2509f04de3e01402","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/491//#testresult/2509f04de3e01402","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755241742360,"stop":1755241745323,"duration":2963}},{"uid":"c787ff91cbe12723","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/490//#testresult/c787ff91cbe12723","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755166856090,"stop":1755166858916,"duration":2826}},{"uid":"812cf4adef4f8fea","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/489//#testresult/812cf4adef4f8fea","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755158359042,"stop":1755158362212,"duration":3170}},{"uid":"bae7e7637cc68127","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/488//#testresult/bae7e7637cc68127","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755155406030,"stop":1755155409531,"duration":3501}}]},"tags":["iccrea","real_integration","send","happy_path"]},"source":"7bfcd306ea857d67.json","parameterValues":[]}