{"uid":"d78334bde8126294","name":"inexistent RTP -> empty body","fullName":"tests.test_get_rtp#test_get_rtp_not_found","historyId":"f374baeb8e6aa77fbe08e6036a22e13b","time":{"start":1756364929742,"stop":1756364931006,"duration":1264},"status":"failed","statusMessage":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","statusTrace":"@allure.feature('RTP Get')\n    @allure.story('Service provider retrieves an RTP')\n    @allure.title('inexistent RTP -> empty body')\n    @pytest.mark.get\n    @pytest.mark.unhappy_path\n    def test_get_rtp_not_found():\n        fake_rtp_id = str(uuid.uuid4())\n    \n        token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        resp = get_rtp(access_token=token, rtp_id=fake_rtp_id)\n    \n>       assert resp.status_code in (\n            404,\n            204,\n        ), f\"Status code: {resp.status_code}, body: {resp.text}\"\nE       AssertionError: Status code: 403, body: \nE       assert 403 in (404, 204)\nE        +  where 403 = <Response [403]>.status_code\n\nfunctional-tests/tests/test_get_rtp.py:75: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1756364819271,"stop":1756364819328,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider retrieves an RTP"},{"name":"feature","value":"RTP Get"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"pkrvmccyg1gnepe"},{"name":"thread","value":"2561-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":32,"broken":18,"skipped":0,"passed":70,"unknown":0,"total":120},"items":[{"uid":"df9bc8efc29ba9a8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/507//#testresult/df9bc8efc29ba9a8","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1756278516244,"stop":1756278517567,"duration":1323}},{"uid":"df449fdb32b3a5d6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/506//#testresult/df449fdb32b3a5d6","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1756192109941,"stop":1756192110746,"duration":805}},{"uid":"fd2da99d489e721a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/505//#testresult/fd2da99d489e721a","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1756105757464,"stop":1756105758256,"duration":792}},{"uid":"1f10e95a7d48cb40","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/504//#testresult/1f10e95a7d48cb40","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1756019245074,"stop":1756019245830,"duration":756}},{"uid":"28b2e9eeae4d4899","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/503//#testresult/28b2e9eeae4d4899","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755932837638,"stop":1755932838535,"duration":897}},{"uid":"30327171f57d6f87","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/502//#testresult/30327171f57d6f87","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755847704601,"stop":1755847705779,"duration":1178}},{"uid":"7df0d11fe2a24e18","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/501//#testresult/7df0d11fe2a24e18","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755846493690,"stop":1755846494609,"duration":919}},{"uid":"8ad7dcf2f1e168a1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/500//#testresult/8ad7dcf2f1e168a1","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755843958914,"stop":1755843959801,"duration":887}},{"uid":"13d0adbc2b73630a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/499//#testresult/13d0adbc2b73630a","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755760226893,"stop":1755760227657,"duration":764}},{"uid":"caaa25d27666c8dd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/498//#testresult/caaa25d27666c8dd","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755673747155,"stop":1755673748401,"duration":1246}},{"uid":"5483f48f137ce8b0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/497//#testresult/5483f48f137ce8b0","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755613346461,"stop":1755613347251,"duration":790}},{"uid":"ad4fbae427bdaa7a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/496//#testresult/ad4fbae427bdaa7a","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755588527640,"stop":1755588528415,"duration":775}},{"uid":"44132a3466d2cd2a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/495//#testresult/44132a3466d2cd2a","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755587316729,"stop":1755587317618,"duration":889}},{"uid":"b86a058057fd4d58","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/494//#testresult/b86a058057fd4d58","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755501060689,"stop":1755501061993,"duration":1304}},{"uid":"79ee3cf04e41d6bb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/493//#testresult/79ee3cf04e41d6bb","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755414454621,"stop":1755414455406,"duration":785}},{"uid":"98b9a654792ec982","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/492//#testresult/98b9a654792ec982","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755328047064,"stop":1755328047784,"duration":720}},{"uid":"7db2dddc3599bf65","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/491//#testresult/7db2dddc3599bf65","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755241732126,"stop":1755241732911,"duration":785}},{"uid":"f8fe2dccf4996509","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/490//#testresult/f8fe2dccf4996509","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755166843075,"stop":1755166844132,"duration":1057}},{"uid":"599794a908ee7c7a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/489//#testresult/599794a908ee7c7a","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755158348649,"stop":1755158349411,"duration":762}},{"uid":"614207ceebf1272d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/488//#testresult/614207ceebf1272d","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755155390618,"stop":1755155391870,"duration":1252}}]},"tags":["get","unhappy_path"]},"source":"d78334bde8126294.json","parameterValues":[]}