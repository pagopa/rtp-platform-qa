{"uid":"c9acec515280fbb6","name":"An RTP is sent through API","fullName":"tests.test_send_rtp#test_cannot_send_rtp_not_activated_user","historyId":"6160dd4465c6621e0038ef4589227e7c","time":{"start":1756364953808,"stop":1756364955136,"duration":1328},"status":"failed","statusMessage":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a non-activated debtor')\n    @allure.title('An RTP is sent through API')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_cannot_send_rtp_not_activated_user():\n        rtp_data = generate_rtp_data()\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n>       assert send_response.status_code == 422\nE       assert 404 == 422\nE        +  where 404 = <Response [404]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:241: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1756364819271,"stop":1756364819328,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a non-activated debtor"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmccyg1gnepe"},{"name":"thread","value":"2561-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":27,"skipped":0,"passed":204,"unknown":0,"total":241},"items":[{"uid":"290d787d427182da","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/507//#testresult/290d787d427182da","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1756278540990,"stop":1756278542352,"duration":1362}},{"uid":"bc52d4188a956040","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/506//#testresult/bc52d4188a956040","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1756192127396,"stop":1756192128247,"duration":851}},{"uid":"1a2943c7ca343e7b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/505//#testresult/1a2943c7ca343e7b","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1756105773989,"stop":1756105774760,"duration":771}},{"uid":"3035bd7b3cf09071","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/504//#testresult/3035bd7b3cf09071","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1756019261235,"stop":1756019262023,"duration":788}},{"uid":"3ea4516e5f465e08","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/503//#testresult/3ea4516e5f465e08","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1755932856887,"stop":1755932857795,"duration":908}},{"uid":"4ace41366ac8a9cb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/502//#testresult/4ace41366ac8a9cb","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1755847730848,"stop":1755847732027,"duration":1179}},{"uid":"e65af897c183dc7c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/501//#testresult/e65af897c183dc7c","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1755846512330,"stop":1755846513219,"duration":889}},{"uid":"67717078c19d8c0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/500//#testresult/67717078c19d8c0","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1755843977738,"stop":1755843978655,"duration":917}},{"uid":"b98812d3263c51d0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/499//#testresult/b98812d3263c51d0","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1755760245035,"stop":1755760245881,"duration":846}},{"uid":"6a3bf356b871c33c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/498//#testresult/6a3bf356b871c33c","status":"passed","time":{"start":1755673770583,"stop":1755673772498,"duration":1915}},{"uid":"5fe505039521fffd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/497//#testresult/5fe505039521fffd","status":"passed","time":{"start":1755613362588,"stop":1755613363369,"duration":781}},{"uid":"43bbfee6474f95b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/496//#testresult/43bbfee6474f95b","status":"passed","time":{"start":1755588543274,"stop":1755588544018,"duration":744}},{"uid":"dcc0e4ccffd16e6b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/495//#testresult/dcc0e4ccffd16e6b","status":"passed","time":{"start":1755587334122,"stop":1755587335034,"duration":912}},{"uid":"586f20309ca4a161","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/494//#testresult/586f20309ca4a161","status":"passed","time":{"start":1755501084412,"stop":1755501085707,"duration":1295}},{"uid":"2659ae2815e06899","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/493//#testresult/2659ae2815e06899","status":"passed","time":{"start":1755414471261,"stop":1755414472031,"duration":770}},{"uid":"a39d715dc4aef606","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/492//#testresult/a39d715dc4aef606","status":"passed","time":{"start":1755328062381,"stop":1755328063127,"duration":746}},{"uid":"18b147776737487","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/491//#testresult/18b147776737487","status":"passed","time":{"start":1755241748260,"stop":1755241749040,"duration":780}},{"uid":"e2c29bf62a5ea490","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/490//#testresult/e2c29bf62a5ea490","status":"passed","time":{"start":1755166862888,"stop":1755166863860,"duration":972}},{"uid":"2d039db32a48878","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/489//#testresult/2d039db32a48878","status":"passed","time":{"start":1755158365248,"stop":1755158366024,"duration":776}},{"uid":"6efb1e113653bceb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/488//#testresult/6efb1e113653bceb","status":"passed","time":{"start":1755155414318,"stop":1755155415601,"duration":1283}}]},"tags":["unhappy_path","send"]},"source":"c9acec515280fbb6.json","parameterValues":[]}