{"uid":"5a94b843a59b15e5","name":"An RTP is sent to ICCREA service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_iccrea","historyId":"43c6e6f1884b3efb611eee04b5b6eb0c","time":{"start":1752569327145,"stop":1752569329958,"duration":2813},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider')\n    @allure.title('An RTP is sent to ICCREA service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.iccrea\n    def test_send_rtp_to_iccrea():\n        rtp_data = generate_rtp_data(payer_id=secrets.iccrea_activated_fiscal_code)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:143: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1752569277840,"stop":1752569277895,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"iccrea"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmq0rgcvqdmg"},{"name":"thread","value":"2508-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":13,"unknown":0,"total":22},"items":[{"uid":"85943c8a1ce5156","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/442//#testresult/85943c8a1ce5156","status":"passed","time":{"start":1752563413104,"stop":1752563417113,"duration":4009}},{"uid":"83a653e926fe909b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/441//#testresult/83a653e926fe909b","status":"passed","time":{"start":1752477019162,"stop":1752477020326,"duration":1164}},{"uid":"f07e11787b25eb21","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/440//#testresult/f07e11787b25eb21","status":"passed","time":{"start":1752390590106,"stop":1752390591337,"duration":1231}},{"uid":"2326f220a2199e49","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/439//#testresult/2326f220a2199e49","status":"passed","time":{"start":1752304123658,"stop":1752304124939,"duration":1281}},{"uid":"ee1cc4fde4b1ddf6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/438//#testresult/ee1cc4fde4b1ddf6","status":"passed","time":{"start":1752217755651,"stop":1752217757253,"duration":1602}},{"uid":"b5ecaaec91a41176","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/437//#testresult/b5ecaaec91a41176","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1752163230817,"stop":1752163233813,"duration":2996}},{"uid":"9619544d8ee1c91b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/436//#testresult/9619544d8ee1c91b","status":"passed","time":{"start":1752160545129,"stop":1752160546279,"duration":1150}},{"uid":"6f1033efec5b4b97","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/435//#testresult/6f1033efec5b4b97","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1752145282207,"stop":1752145285847,"duration":3640}},{"uid":"f0975da31e5cdcd3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/434//#testresult/f0975da31e5cdcd3","status":"passed","time":{"start":1752131364176,"stop":1752131366158,"duration":1982}},{"uid":"fdcf9a5a4b30fe7f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/433//#testresult/fdcf9a5a4b30fe7f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1752049303457,"stop":1752049307145,"duration":3688}},{"uid":"c0af897c95ed6b31","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/432//#testresult/c0af897c95ed6b31","status":"passed","time":{"start":1752044935608,"stop":1752044936879,"duration":1271}},{"uid":"673b4ac52f9a1c3f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/431//#testresult/673b4ac52f9a1c3f","status":"passed","time":{"start":1751958532438,"stop":1751958534067,"duration":1629}},{"uid":"ab4eac5c61a9b73e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/430//#testresult/ab4eac5c61a9b73e","status":"passed","time":{"start":1751882710224,"stop":1751882711833,"duration":1609}},{"uid":"dd54fb136986258f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/429//#testresult/dd54fb136986258f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751872165318,"stop":1751872169748,"duration":4430}},{"uid":"f3ed8639631b134c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/428//#testresult/f3ed8639631b134c","status":"passed","time":{"start":1751785673523,"stop":1751785674812,"duration":1289}},{"uid":"49e3c27753a1305e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/427//#testresult/49e3c27753a1305e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751699280410,"stop":1751699293918,"duration":13508}},{"uid":"dbb154ef892b2e63","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/426//#testresult/dbb154ef892b2e63","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751612915061,"stop":1751612918326,"duration":3265}},{"uid":"23e983e572bbe981","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/425//#testresult/23e983e572bbe981","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751526538988,"stop":1751526542650,"duration":3662}},{"uid":"5b4a50e234908a8a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/424//#testresult/5b4a50e234908a8a","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751440133209,"stop":1751440136541,"duration":3332}},{"uid":"b1167bee0fc7b368","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/423//#testresult/b1167bee0fc7b368","status":"passed","time":{"start":1751383909199,"stop":1751383910640,"duration":1441}}]},"tags":["iccrea","real_integration","send","happy_path"]},"source":"5a94b843a59b15e5.json","parameterValues":[]}