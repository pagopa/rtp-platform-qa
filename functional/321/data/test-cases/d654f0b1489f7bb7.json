{"uid":"d654f0b1489f7bb7","name":"An RTP is sent through CBI API","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi","historyId":"b7843ec0a9572280c9663808e1141c5c","time":{"start":1746774440183,"stop":1746774442379,"duration":2196},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('An RTP is sent through CBI API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        rtp_data = generate_rtp_data()\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1746774414998,"stop":1746774415053,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az791-527"},{"name":"thread","value":"2403-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":87,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":87},"items":[{"uid":"f64a3e212da9285d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/320//#testresult/f64a3e212da9285d","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746688022460,"stop":1746688023648,"duration":1188}},{"uid":"fcb5dea8eb22633c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/319//#testresult/fcb5dea8eb22633c","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746601640898,"stop":1746601642050,"duration":1152}},{"uid":"8edc113ae62b8469","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/318//#testresult/8edc113ae62b8469","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746515235105,"stop":1746515236920,"duration":1815}},{"uid":"4ce9c4fce7b22ed8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/317//#testresult/4ce9c4fce7b22ed8","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746428867420,"stop":1746428868622,"duration":1202}},{"uid":"5e0e0add6d421955","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/316//#testresult/5e0e0add6d421955","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746342421881,"stop":1746342424043,"duration":2162}},{"uid":"84dbf9e2f9f382d2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/315//#testresult/84dbf9e2f9f382d2","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746255998746,"stop":1746256000629,"duration":1883}},{"uid":"582212b8d24e1d95","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/314//#testresult/582212b8d24e1d95","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746169630561,"stop":1746169632634,"duration":2073}},{"uid":"81ecb8bbf497b1f2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/313//#testresult/81ecb8bbf497b1f2","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746083255016,"stop":1746083256868,"duration":1852}},{"uid":"239e721f72b05a41","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/312//#testresult/239e721f72b05a41","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745996836278,"stop":1745996837502,"duration":1224}},{"uid":"567cd8013a52bb50","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/311//#testresult/567cd8013a52bb50","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745910440188,"stop":1745910441652,"duration":1464}},{"uid":"d94c14c2854c6ea","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/310//#testresult/d94c14c2854c6ea","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745824815991,"stop":1745824817600,"duration":1609}},{"uid":"d0d7463576f626ec","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/309//#testresult/d0d7463576f626ec","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745737594961,"stop":1745737596479,"duration":1518}},{"uid":"abcc938c6bd3e6a5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/308//#testresult/abcc938c6bd3e6a5","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745651196102,"stop":1745651197930,"duration":1828}},{"uid":"4e2fb923dfffbad0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/307//#testresult/4e2fb923dfffbad0","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745564823984,"stop":1745564825840,"duration":1856}},{"uid":"350a10673338b1c3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/306//#testresult/350a10673338b1c3","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745491301090,"stop":1745491302980,"duration":1890}},{"uid":"6f9bf8d1f495c0cf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/305//#testresult/6f9bf8d1f495c0cf","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745478444095,"stop":1745478445528,"duration":1433}},{"uid":"a5de775cf3ffc790","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/304//#testresult/a5de775cf3ffc790","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745392047441,"stop":1745392049796,"duration":2355}},{"uid":"5337a43d23e70d22","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/303//#testresult/5337a43d23e70d22","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745305626800,"stop":1745305628485,"duration":1685}},{"uid":"c76f28948740ed30","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/302//#testresult/c76f28948740ed30","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745219266731,"stop":1745219268809,"duration":2078}},{"uid":"12ab1737e57efcfd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/301//#testresult/12ab1737e57efcfd","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745132796164,"stop":1745132798692,"duration":2528}}]},"tags":["cbi","send","happy_path"]},"source":"d654f0b1489f7bb7.json","parameterValues":[]}