{"uid":"fad4238acb3d0c84","name":"An RTP callback is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback_DS_08P_compliant","historyId":"e98ff8a1e43c45b6eec2e1ce025e4cfc","time":{"start":1750662490702,"stop":1750662491372,"duration":670},"status":"failed","statusMessage":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('An RTP callback is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback_DS_08P_compliant():\n        callback_data = generate_callback_data_DS_08P_compliant()\n    \n        cert, key = pfx_to_pem(secrets.debtor_service_provider_mock_PFX_base64,\n                               secrets.debtor_service_provider_mock_PFX_password_base64,\n                               config.cert_path,\n                               config.key_path)\n    \n        callback_response = srtp_callback(rtp_payload=callback_data,\n                                          cert_path=cert,\n                                          key_path=key)\n>       assert callback_response.status_code == 200, f'Error from callback, expected 200 got {callback_response.status_code}'\nE       AssertionError: Error from callback, expected 200 got 400\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\nfunctional-tests/tests/test_callback.py:47: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750662476762,"stop":1750662476819,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2489-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":41,"broken":9,"skipped":0,"passed":50,"unknown":0,"total":100},"items":[{"uid":"92fe871d3bdd32c8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/400//#testresult/92fe871d3bdd32c8","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750576069593,"stop":1750576070048,"duration":455}},{"uid":"f223d4abde0a4aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/399//#testresult/f223d4abde0a4aa","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750489633026,"stop":1750489633829,"duration":803}},{"uid":"21f0d97e336bb399","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/398//#testresult/21f0d97e336bb399","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750403232315,"stop":1750403232804,"duration":489}},{"uid":"447fcc417cf0441d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/397//#testresult/447fcc417cf0441d","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750334998859,"stop":1750334999842,"duration":983}},{"uid":"4a297ca0271247f2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/396//#testresult/4a297ca0271247f2","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750329638052,"stop":1750329638876,"duration":824}},{"uid":"1c8de5f39d633c30","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/395//#testresult/1c8de5f39d633c30","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750328581363,"stop":1750328581746,"duration":383}},{"uid":"12975e1df4012808","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/394//#testresult/12975e1df4012808","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750317540921,"stop":1750317541303,"duration":382}},{"uid":"72b131cd29d66cfd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/393//#testresult/72b131cd29d66cfd","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750316858738,"stop":1750316859413,"duration":675}},{"uid":"75ddf9a39e514853","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/392//#testresult/75ddf9a39e514853","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750230472924,"stop":1750230473550,"duration":626}},{"uid":"964555bc00e89e0c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/391//#testresult/964555bc00e89e0c","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750170133372,"stop":1750170133778,"duration":406}},{"uid":"5484689f344054b1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/389//#testresult/5484689f344054b1","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750144040593,"stop":1750144041261,"duration":668}},{"uid":"d16a45c59208ff5d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/388//#testresult/d16a45c59208ff5d","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750069025115,"stop":1750069025627,"duration":512}},{"uid":"f6b0bdce9228923d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/387//#testresult/f6b0bdce9228923d","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750057707126,"stop":1750057707585,"duration":459}},{"uid":"df0f44d459df2b90","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/386//#testresult/df0f44d459df2b90","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749971243545,"stop":1749971244037,"duration":492}},{"uid":"10783c1545f0a9ee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/385//#testresult/10783c1545f0a9ee","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749884851262,"stop":1749884851715,"duration":453}},{"uid":"de8929338fd2ac50","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/384//#testresult/de8929338fd2ac50","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749810118738,"stop":1749810119252,"duration":514}},{"uid":"5c4bfc0c24dd5f94","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/383//#testresult/5c4bfc0c24dd5f94","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749805339835,"stop":1749805340667,"duration":832}},{"uid":"340a8d3b8513f1bb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/382//#testresult/340a8d3b8513f1bb","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749803872344,"stop":1749803872872,"duration":528}},{"uid":"ffc2967603d71897","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/381//#testresult/ffc2967603d71897","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749802595865,"stop":1749802596319,"duration":454}},{"uid":"795fda4ed47554b4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/380//#testresult/795fda4ed47554b4","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749801527886,"stop":1749801528397,"duration":511}}]},"tags":["callback","happy_path"]},"source":"fad4238acb3d0c84.json","parameterValues":[]}