{"uid":"dcc9c97b12215edc","name":"A debtor is activated and retrieved by activation id","fullName":"tests.test_activation#test_get_activation_by_id","historyId":"5802a301b59e0c151ffcd2948b2fd364","time":{"start":1754550654528,"stop":1754550656124,"duration":1596},"status":"failed","statusMessage":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('Activation')\n    @allure.story('Get Debtor activation by ID')\n    @allure.title('A debtor is activated and retrieved by activation id')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.happy_path\n    def test_get_activation_by_id():\n        access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n        debtor_fc = fake_fc()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, 'Error activating debtor'\n    \n        location = res.headers['Location']\n        activation_id = location.split('/')[-1]\n        assert bool(uuidv4_pattern.fullmatch(activation_id))\n    \n        res = get_activation_by_id(access_token, activation_id)\n>       assert res.status_code == 200, f'Expected 200 but got {res.status_code}'\nE       AssertionError: Expected 200 but got 500\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_activation.py:91: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1754550650397,"stop":1754550650451,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Activation"},{"name":"story","value":"Get Debtor activation by ID"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"pkrvmjbmru5nbw0"},{"name":"thread","value":"2512-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":30,"unknown":0,"total":43},"items":[{"uid":"794bb94697428b86","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/478//#testresult/794bb94697428b86","status":"passed","time":{"start":1754464751135,"stop":1754464753051,"duration":1916}},{"uid":"423cf4a2e5e6d11","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/476//#testresult/423cf4a2e5e6d11","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1754464705780,"stop":1754464707108,"duration":1328}},{"uid":"41c486e9b70a1087","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/475//#testresult/41c486e9b70a1087","status":"passed","time":{"start":1754464254494,"stop":1754464256633,"duration":2139}},{"uid":"b3d653f985bad075","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/474//#testresult/b3d653f985bad075","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1754387669333,"stop":1754387670536,"duration":1203}},{"uid":"12305ec089ec712d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/473//#testresult/12305ec089ec712d","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1754377937867,"stop":1754377939436,"duration":1569}},{"uid":"5cf965c7a87861c0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/472//#testresult/5cf965c7a87861c0","status":"passed","time":{"start":1754377864231,"stop":1754377866209,"duration":1978}},{"uid":"31a15625ec1c80a3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/471//#testresult/31a15625ec1c80a3","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1754319170306,"stop":1754319171861,"duration":1555}},{"uid":"efb1cfa912d56c97","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/470//#testresult/efb1cfa912d56c97","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1754291624926,"stop":1754291626990,"duration":2064}},{"uid":"ee5c35396202a921","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/469//#testresult/ee5c35396202a921","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1754204833716,"stop":1754204835003,"duration":1287}},{"uid":"80e5f2debb1c595a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/468//#testresult/80e5f2debb1c595a","status":"passed","time":{"start":1754118431490,"stop":1754118433564,"duration":2074}},{"uid":"67b80946f499fbc3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/467//#testresult/67b80946f499fbc3","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1754051869185,"stop":1754051870549,"duration":1364}},{"uid":"e852d748cdade831","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/466//#testresult/e852d748cdade831","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1754032242095,"stop":1754032243559,"duration":1464}},{"uid":"ff68b7d0dd78cc4e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/465//#testresult/ff68b7d0dd78cc4e","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1753973987592,"stop":1753973989228,"duration":1636}},{"uid":"a4161a44a8627c8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/464//#testresult/a4161a44a8627c8","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1753945785946,"stop":1753945787987,"duration":2041}},{"uid":"e14f9f61ffcefc6a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/463//#testresult/e14f9f61ffcefc6a","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1753878222694,"stop":1753878225919,"duration":3225}},{"uid":"df6808e1c00a8612","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/462//#testresult/df6808e1c00a8612","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1753859427434,"stop":1753859429515,"duration":2081}},{"uid":"3891dba04c5a4d57","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/461//#testresult/3891dba04c5a4d57","status":"passed","time":{"start":1753772987941,"stop":1753772989852,"duration":1911}},{"uid":"42e20ecd583c76f0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/460//#testresult/42e20ecd583c76f0","status":"passed","time":{"start":1753686673197,"stop":1753686674696,"duration":1499}},{"uid":"863b32088bd7683c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/459//#testresult/863b32088bd7683c","status":"passed","time":{"start":1753600017560,"stop":1753600018804,"duration":1244}},{"uid":"386a96f5d930748d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/458//#testresult/386a96f5d930748d","status":"passed","time":{"start":1753513628155,"stop":1753513629587,"duration":1432}}]},"tags":["auth","activation","happy_path"]},"source":"dcc9c97b12215edc.json","parameterValues":[]}