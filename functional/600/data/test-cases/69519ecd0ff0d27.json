{"uid":"69519ecd0ff0d27","name":"Get a page of activations","fullName":"functional-tests.tests.test_activation#test_get_all_activations","historyId":"66267a3409d96dfc9a077ff3adf38f69","time":{"start":1761891834537,"stop":1761891836173,"duration":1636},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761891772938,"stop":1761891772995,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"access_token","time":{"start":1761891833998,"stop":1761891834537,"duration":539},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"next_cursor","time":{"start":1761891834537,"stop":1761891834537,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"List Activations"},{"name":"feature","value":"Activation"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"functional-tests.tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2498-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"functional-tests.tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":28,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":31},"items":[{"uid":"cbd033c34863ac47","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/599//#testresult/cbd033c34863ac47","status":"passed","time":{"start":1761837047288,"stop":1761837048497,"duration":1209}},{"uid":"7ad266ba98509a6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/598//#testresult/7ad266ba98509a6","status":"passed","time":{"start":1761818828995,"stop":1761818830264,"duration":1269}},{"uid":"d1e3875a1baea09f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/597//#testresult/d1e3875a1baea09f","status":"failed","statusDetails":"AssertionError: Expected 'page' metadata to be present and be a dict\nassert False\n +  where False = isinstance(None, dict)\n +    where None = <built-in method get of dict object at 0x7faf5204a4c0>('page')\n +      where <built-in method get of dict object at 0x7faf5204a4c0> = {'activations': [{'effectiveActivationDate': '2025-07-31T13:13:14.456', 'id': '00003ce7-7b36-41ad-abff-b70f4f412273', ...', 'rtpSpId': 'MOCKSP04'}}, ...], 'metadata': {'nextActivationId': '00033cdf-1775-4436-8f2a-7e30b36d92a4', 'size': 16}}.get","time":{"start":1761805343672,"stop":1761805345123,"duration":1451}},{"uid":"19e1a8f51932247d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/596//#testresult/19e1a8f51932247d","status":"failed","statusDetails":"AssertionError: Expected 'page' metadata to be present and be a dict\nassert False\n +  where False = isinstance(None, dict)\n +    where None = <built-in method get of dict object at 0x7f6e99218b00>('page')\n +      where <built-in method get of dict object at 0x7f6e99218b00> = {'activations': [{'effectiveActivationDate': '2025-07-31T13:13:14.456', 'id': '00003ce7-7b36-41ad-abff-b70f4f412273', ...', 'rtpSpId': 'MOCKSP04'}}, ...], 'metadata': {'nextActivationId': '00033cdf-1775-4436-8f2a-7e30b36d92a4', 'size': 16}}.get","time":{"start":1761752066040,"stop":1761752067048,"duration":1008}},{"uid":"68e370a94c7bab1a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/595//#testresult/68e370a94c7bab1a","status":"failed","statusDetails":"AssertionError: Expected 'page' metadata to be present and be a dict\nassert False\n +  where False = isinstance(None, dict)\n +    where None = <built-in method get of dict object at 0x7f2fc29d2180>('page')\n +      where <built-in method get of dict object at 0x7f2fc29d2180> = {'activations': [{'effectiveActivationDate': '2025-07-31T13:13:14.456', 'id': '00003ce7-7b36-41ad-abff-b70f4f412273', ...', 'rtpSpId': 'MOCKSP04'}}, ...], 'metadata': {'nextActivationId': '00033cdf-1775-4436-8f2a-7e30b36d92a4', 'size': 16}}.get","time":{"start":1761719054315,"stop":1761719055884,"duration":1569}},{"uid":"ccbb3d7a4efe0d69","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/594//#testresult/ccbb3d7a4efe0d69","status":"failed","statusDetails":"AssertionError: Expected 'page' metadata to be present and be a dict\nassert False\n +  where False = isinstance(None, dict)\n +    where None = <built-in method get of dict object at 0x7f89c0cf9ec0>('page')\n +      where <built-in method get of dict object at 0x7f89c0cf9ec0> = {'activations': [{'effectiveActivationDate': '2025-07-31T13:13:14.456', 'id': '00003ce7-7b36-41ad-abff-b70f4f412273', ...', 'rtpSpId': 'MOCKSP04'}}, ...], 'metadata': {'nextActivationId': '00033cdf-1775-4436-8f2a-7e30b36d92a4', 'size': 16}}.get","time":{"start":1761632690097,"stop":1761632691208,"duration":1111}},{"uid":"2ab0440f01d5117e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/593//#testresult/2ab0440f01d5117e","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761546330797,"stop":1761546333783,"duration":2986}},{"uid":"4bc9a669a62add96","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/592//#testresult/4bc9a669a62add96","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761459694425,"stop":1761459696464,"duration":2039}},{"uid":"d69255322b21b465","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/591//#testresult/d69255322b21b465","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761373250691,"stop":1761373253237,"duration":2546}},{"uid":"e146b8df4e0c80f2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/590//#testresult/e146b8df4e0c80f2","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761286926101,"stop":1761286929000,"duration":2899}},{"uid":"fbfce277f8a0744d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/589//#testresult/fbfce277f8a0744d","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761200549945,"stop":1761200551982,"duration":2037}},{"uid":"a7eabb0d55623a6c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/588//#testresult/a7eabb0d55623a6c","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761114216283,"stop":1761114222991,"duration":6708}},{"uid":"af67f73a53741934","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/587//#testresult/af67f73a53741934","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761053791855,"stop":1761053794552,"duration":2697}},{"uid":"8ec72de8fcf91a5c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/586//#testresult/8ec72de8fcf91a5c","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761040652059,"stop":1761040654386,"duration":2327}},{"uid":"2a9d8b1ea7499cc0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/585//#testresult/2a9d8b1ea7499cc0","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761027771197,"stop":1761027773692,"duration":2495}},{"uid":"fa6ce47a2b44de18","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/584//#testresult/fa6ce47a2b44de18","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1760941410362,"stop":1760941412683,"duration":2321}},{"uid":"bb208dc5a7d36e28","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/583//#testresult/bb208dc5a7d36e28","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1760854910865,"stop":1760854912898,"duration":2033}},{"uid":"5794129001367110","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/582//#testresult/5794129001367110","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1760768437434,"stop":1760768439947,"duration":2513}},{"uid":"94572fe0b166698","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/581//#testresult/94572fe0b166698","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1760682104988,"stop":1760682107257,"duration":2269}},{"uid":"37836635ccfe1a1b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/580//#testresult/37836635ccfe1a1b","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1760624449281,"stop":1760624451505,"duration":2224}}]},"tags":["auth","activation","happy_path"]},"source":"69519ecd0ff0d27.json","parameterValues":[]}