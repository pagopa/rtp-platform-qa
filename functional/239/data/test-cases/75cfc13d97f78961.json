{"uid":"75cfc13d97f78961","name":"The response body contains a comprehensible error message","fullName":"tests.test_send_rtp#test_field_error_in_body","historyId":"dd6ce34dc9b4737f86cbefdca52b3610","time":{"start":1741763348647,"stop":1741763352550,"duration":3903},"status":"failed","statusMessage":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('The response body contains a comprehensible error message')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_field_error_in_body():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        res = activate(debtor_service_provider_access_token, rtp_data['payer']['payerId'],\n                       secrets.debtor_service_provider.service_provider_id)\n>       assert res.status_code == 201, 'Error activating debtor'\nE       AssertionError: Error activating debtor\nE       assert 401 == 201\nE        +  where 401 = <Response [401]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:120: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1741763199430,"stop":1741763199490,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"fv-az1909-324"},{"name":"thread","value":"2283-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":35,"unknown":0,"total":36},"items":[{"uid":"54f8f7e8f465407d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/238//#testresult/54f8f7e8f465407d","status":"passed","time":{"start":1741705828926,"stop":1741705831935,"duration":3009}},{"uid":"6a3ac6f8161c9129","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/237//#testresult/6a3ac6f8161c9129","status":"passed","time":{"start":1741676950291,"stop":1741676955348,"duration":5057}},{"uid":"46fb1649b6c11d7a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/236//#testresult/46fb1649b6c11d7a","status":"passed","time":{"start":1741631581546,"stop":1741631584602,"duration":3056}},{"uid":"7e42cc1a0f1a32cb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/235//#testresult/7e42cc1a0f1a32cb","status":"passed","time":{"start":1741628239611,"stop":1741628243814,"duration":4203}},{"uid":"d2957ca786507384","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/234//#testresult/d2957ca786507384","status":"passed","time":{"start":1741624857374,"stop":1741624860463,"duration":3089}},{"uid":"bc65f1d34b328021","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/233//#testresult/bc65f1d34b328021","status":"passed","time":{"start":1741603825372,"stop":1741603828636,"duration":3264}},{"uid":"abe07743005ef468","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/232//#testresult/abe07743005ef468","status":"passed","time":{"start":1741590429901,"stop":1741590433155,"duration":3254}},{"uid":"486c52b37fccc1ae","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/231//#testresult/486c52b37fccc1ae","status":"passed","time":{"start":1741503971524,"stop":1741503975404,"duration":3880}},{"uid":"90e3743a986ec48f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/230//#testresult/90e3743a986ec48f","status":"passed","time":{"start":1741417546047,"stop":1741417548944,"duration":2897}},{"uid":"ae1bf9f83440a23","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/229//#testresult/ae1bf9f83440a23","status":"passed","time":{"start":1741368343281,"stop":1741368346438,"duration":3157}},{"uid":"18a7e0e42ee84a6a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/228//#testresult/18a7e0e42ee84a6a","status":"passed","time":{"start":1741365954601,"stop":1741365958572,"duration":3971}},{"uid":"9fcd555a0c90f2b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/227//#testresult/9fcd555a0c90f2b","status":"passed","time":{"start":1741364162297,"stop":1741364166174,"duration":3877}},{"uid":"a38cb07de28cab5d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/225//#testresult/a38cb07de28cab5d","status":"passed","time":{"start":1741331226821,"stop":1741331230635,"duration":3814}},{"uid":"15b08f57b2dbf856","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/224//#testresult/15b08f57b2dbf856","status":"passed","time":{"start":1741244815655,"stop":1741244819076,"duration":3421}},{"uid":"e37c9d8258bf2595","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/223//#testresult/e37c9d8258bf2595","status":"passed","time":{"start":1741158401790,"stop":1741158405441,"duration":3651}},{"uid":"fa1b0b367deb608b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/222//#testresult/fa1b0b367deb608b","status":"passed","time":{"start":1741072018092,"stop":1741072021500,"duration":3408}},{"uid":"ac3a7aa57734850d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/221//#testresult/ac3a7aa57734850d","status":"passed","time":{"start":1740985624077,"stop":1740985627432,"duration":3355}},{"uid":"10bf805b0362286c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/220//#testresult/10bf805b0362286c","status":"passed","time":{"start":1740899158153,"stop":1740899161325,"duration":3172}},{"uid":"833ca18ea9f2df3e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/219//#testresult/833ca18ea9f2df3e","status":"passed","time":{"start":1740812758310,"stop":1740812761429,"duration":3119}},{"uid":"8f09607828f6b3c2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/218//#testresult/8f09607828f6b3c2","status":"passed","time":{"start":1740726415970,"stop":1740726419501,"duration":3531}}]},"tags":["unhappy_path","send"]},"source":"75cfc13d97f78961.json","parameterValues":[]}