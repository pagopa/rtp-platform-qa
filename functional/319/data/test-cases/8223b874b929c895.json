{"uid":"8223b874b929c895","name":"Cannot send RTP with invalid amount","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi_invalid_amount","historyId":"3a2d68c98ccbf254d83aa6a209f2af2f","time":{"start":1746601642061,"stop":1746601643239,"duration":1178},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with invalid amount')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_invalid_amount():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['amount'] = -1\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:54: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1746601622224,"stop":1746601622280,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1951-301"},{"name":"thread","value":"2339-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":84,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":85},"items":[{"uid":"e12c490557954211","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/318//#testresult/e12c490557954211","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746515236930,"stop":1746515238732,"duration":1802}},{"uid":"d19b1c0789cae76","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/317//#testresult/d19b1c0789cae76","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746428868633,"stop":1746428869831,"duration":1198}},{"uid":"9ee652d80298dd2c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/316//#testresult/9ee652d80298dd2c","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746342424054,"stop":1746342425386,"duration":1332}},{"uid":"d867737d11a0fe47","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/315//#testresult/d867737d11a0fe47","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746256000639,"stop":1746256002313,"duration":1674}},{"uid":"84698637573fa100","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/314//#testresult/84698637573fa100","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746169632645,"stop":1746169634338,"duration":1693}},{"uid":"d5b545ab76838d91","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/313//#testresult/d5b545ab76838d91","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1746083256878,"stop":1746083258051,"duration":1173}},{"uid":"6c53090696b4a8a8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/312//#testresult/6c53090696b4a8a8","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745996837513,"stop":1745996838501,"duration":988}},{"uid":"95211d0c5ddb683d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/311//#testresult/95211d0c5ddb683d","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745910441662,"stop":1745910442970,"duration":1308}},{"uid":"86a4c8b765a83dae","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/310//#testresult/86a4c8b765a83dae","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745824817610,"stop":1745824818836,"duration":1226}},{"uid":"da81e6b3ac82d26e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/309//#testresult/da81e6b3ac82d26e","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745737596490,"stop":1745737597925,"duration":1435}},{"uid":"1be716b877987989","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/308//#testresult/1be716b877987989","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745651197940,"stop":1745651199098,"duration":1158}},{"uid":"f30197258ebc64df","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/307//#testresult/f30197258ebc64df","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745564825843,"stop":1745564827301,"duration":1458}},{"uid":"20393800940424dc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/306//#testresult/20393800940424dc","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745491302990,"stop":1745491304410,"duration":1420}},{"uid":"e2b04fce7e480cea","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/305//#testresult/e2b04fce7e480cea","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745478445538,"stop":1745478447008,"duration":1470}},{"uid":"523b1ff45f0eb3ed","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/304//#testresult/523b1ff45f0eb3ed","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745392049806,"stop":1745392051669,"duration":1863}},{"uid":"919a71a185f145f9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/303//#testresult/919a71a185f145f9","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745305628495,"stop":1745305629829,"duration":1334}},{"uid":"10543cd0e030da9f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/302//#testresult/10543cd0e030da9f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745219268820,"stop":1745219270557,"duration":1737}},{"uid":"83af5b9f1f7a16e0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/301//#testresult/83af5b9f1f7a16e0","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745132798702,"stop":1745132800261,"duration":1559}},{"uid":"5054901ff3e63daf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/300//#testresult/5054901ff3e63daf","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745046394761,"stop":1745046396254,"duration":1493}},{"uid":"fc81e5a33cd69ece","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/299//#testresult/fc81e5a33cd69ece","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744960017194,"stop":1744960018526,"duration":1332}}]},"tags":["cbi","unhappy_path","send"]},"source":"8223b874b929c895.json","parameterValues":[]}