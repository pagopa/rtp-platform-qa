{"uid":"a791c53c6968ddf","name":"An RTP is sent through CBI API","fullName":"tests.test_debtor_service_provider_availability#test_send_rtp_to_cbi","historyId":"f80da3262bf8ce0e665c096b1873cbf4","time":{"start":1756710561182,"stop":1756710568770,"duration":7588},"status":"failed","statusMessage":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI directly')\n    @allure.title('An RTP is sent through CBI API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        rtp_data = generate_rtp_data()\n        cbi_payload = generate_epc_rtp_data(rtp_data, bic='UNCRITMM')\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id, secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(\n            secrets.CBI_client_PFX_base64,\n            secrets.CBI_client_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n        cbi_token = get_cbi_access_token(cert, key, auth)\n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 201\nE       assert 400 == 201\nE        +  where 400 = <Response [400]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider_availability.py:57: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1756710484103,"stop":1756710484162,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI directly"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider_availability"},{"name":"host","value":"pkrvmccyg1gnepe"},{"name":"thread","value":"2545-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":74,"broken":14,"skipped":0,"passed":67,"unknown":0,"total":155},"items":[{"uid":"733acaec2cdd3654","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/512//#testresult/733acaec2cdd3654","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1756624037198,"stop":1756624042237,"duration":5039}},{"uid":"8c0f82d7f9925217","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/511//#testresult/8c0f82d7f9925217","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1756537629082,"stop":1756537633573,"duration":4491}},{"uid":"dfd6f80baafd0637","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/510//#testresult/dfd6f80baafd0637","status":"passed","time":{"start":1756451281369,"stop":1756451289882,"duration":8513}},{"uid":"8a2e287d60688d49","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/509//#testresult/8a2e287d60688d49","status":"passed","time":{"start":1756385943253,"stop":1756385949318,"duration":6065}},{"uid":"816a855fcf3de704","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/508//#testresult/816a855fcf3de704","status":"passed","time":{"start":1756364906498,"stop":1756364916278,"duration":9780}},{"uid":"4b85b8cf0463ac47","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/507//#testresult/4b85b8cf0463ac47","status":"passed","time":{"start":1756278496373,"stop":1756278501282,"duration":4909}},{"uid":"a7f0789469eed077","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/506//#testresult/a7f0789469eed077","status":"passed","time":{"start":1756192095633,"stop":1756192100323,"duration":4690}},{"uid":"7d9a05e3d8913735","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/505//#testresult/7d9a05e3d8913735","status":"failed","statusDetails":"AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code","time":{"start":1756105725543,"stop":1756105747888,"duration":22345}},{"uid":"77a4bfceb5d3287f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/504//#testresult/77a4bfceb5d3287f","status":"passed","time":{"start":1756019229410,"stop":1756019235419,"duration":6009}},{"uid":"f7f1df3ab65ed4fa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/503//#testresult/f7f1df3ab65ed4fa","status":"passed","time":{"start":1755932821859,"stop":1755932827267,"duration":5408}},{"uid":"86165e8798b81fcf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/502//#testresult/86165e8798b81fcf","status":"passed","time":{"start":1755847688747,"stop":1755847692533,"duration":3786}},{"uid":"8c05a42ea91b581d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/501//#testresult/8c05a42ea91b581d","status":"passed","time":{"start":1755846480479,"stop":1755846483726,"duration":3247}},{"uid":"4d4f058373b87cce","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/500//#testresult/4d4f058373b87cce","status":"passed","time":{"start":1755843940501,"stop":1755843948822,"duration":8321}},{"uid":"9f87cdd1c071ebd3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/499//#testresult/9f87cdd1c071ebd3","status":"passed","time":{"start":1755760211494,"stop":1755760217026,"duration":5532}},{"uid":"8166c1cbab8f95f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/498//#testresult/8166c1cbab8f95f","status":"passed","time":{"start":1755673727351,"stop":1755673732978,"duration":5627}},{"uid":"9104b0991af51f61","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/497//#testresult/9104b0991af51f61","status":"passed","time":{"start":1755613330774,"stop":1755613337099,"duration":6325}},{"uid":"529da254d522f207","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/496//#testresult/529da254d522f207","status":"passed","time":{"start":1755588514856,"stop":1755588518936,"duration":4080}},{"uid":"90edde8940b5a46f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/495//#testresult/90edde8940b5a46f","status":"passed","time":{"start":1755587298062,"stop":1755587305435,"duration":7373}},{"uid":"b0bed45ffba8b29d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/494//#testresult/b0bed45ffba8b29d","status":"passed","time":{"start":1755501042887,"stop":1755501047621,"duration":4734}},{"uid":"1e23564343d5697a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/493//#testresult/1e23564343d5697a","status":"passed","time":{"start":1755414440881,"stop":1755414445597,"duration":4716}}]},"tags":["cbi","send","happy_path"]},"source":"a791c53c6968ddf.json","parameterValues":[]}