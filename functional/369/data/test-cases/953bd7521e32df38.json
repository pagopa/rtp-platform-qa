{"uid":"953bd7521e32df38","name":"A debtor cannot be activated more than once","fullName":"tests.test_activation#test_fail_activate_debtor_two_times","historyId":"8704b37d564cbbe926da79ebe6202dbe","time":{"start":1749484254717,"stop":1749484255332,"duration":615},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('Activation')\n    @allure.story('Debtor activation')\n    @allure.title('A debtor cannot be activated more than once')\n    @pytest.mark.activation\n    @pytest.mark.unhappy_path\n    def test_fail_activate_debtor_two_times():\n>       access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                              client_secret=secrets.debtor_service_provider.client_secret,\n                                              access_token_function=get_access_token)\n\nfunctional-tests/tests/test_activation.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749484251618,"stop":1749484251676,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Debtor activation"},{"name":"feature","value":"Activation"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"activation"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2508-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":58,"broken":4,"skipped":0,"passed":0,"unknown":0,"total":62},"items":[{"uid":"c8d5a8c5f4c3130f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/368//#testresult/c8d5a8c5f4c3130f","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749483913445,"stop":1749483914428,"duration":983}},{"uid":"cb470e7219d6cf30","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/365//#testresult/cb470e7219d6cf30","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749482089416,"stop":1749482090764,"duration":1348}},{"uid":"1a1a142097c64587","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/367//#testresult/1a1a142097c64587","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749482220426,"stop":1749482221203,"duration":777}},{"uid":"a8857fbc4d698887","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/a8857fbc4d698887","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749452875635,"stop":1749452876907,"duration":1272}},{"uid":"d335c1e811d9f3d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/362//#testresult/d335c1e811d9f3d","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749366416455,"stop":1749366418653,"duration":2198}},{"uid":"5bcce831911c7772","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/361//#testresult/5bcce831911c7772","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749280005778,"stop":1749280007063,"duration":1285}},{"uid":"ba731e5558346d81","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/ba731e5558346d81","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749193615070,"stop":1749193616151,"duration":1081}},{"uid":"a480dfe108409793","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/359//#testresult/a480dfe108409793","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749107237168,"stop":1749107239323,"duration":2155}},{"uid":"200d916580fb6ed6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/358//#testresult/200d916580fb6ed6","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749020824611,"stop":1749020825853,"duration":1242}},{"uid":"54ecc6f96b927d6a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/357//#testresult/54ecc6f96b927d6a","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748956560639,"stop":1748956561812,"duration":1173}},{"uid":"9455919501a0b56e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/356//#testresult/9455919501a0b56e","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748953126369,"stop":1748953127740,"duration":1371}},{"uid":"e1b344ea78a39982","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/355//#testresult/e1b344ea78a39982","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748934467339,"stop":1748934468536,"duration":1197}},{"uid":"d6edcec1811dc522","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/354//#testresult/d6edcec1811dc522","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748848064975,"stop":1748848066212,"duration":1237}},{"uid":"ce05204493137f12","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/353//#testresult/ce05204493137f12","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748761616511,"stop":1748761618561,"duration":2050}},{"uid":"d44ef683a369838a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/352//#testresult/d44ef683a369838a","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748675212199,"stop":1748675213641,"duration":1442}},{"uid":"95f6f777b2620e16","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/351//#testresult/95f6f777b2620e16","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748588822851,"stop":1748588825051,"duration":2200}},{"uid":"37f910955a04b04c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/350//#testresult/37f910955a04b04c","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748534025297,"stop":1748534026563,"duration":1266}},{"uid":"480799fe8aec5030","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/349//#testresult/480799fe8aec5030","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748502443136,"stop":1748502445315,"duration":2179}},{"uid":"97fb7ddce17af9da","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/348//#testresult/97fb7ddce17af9da","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748449643628,"stop":1748449645251,"duration":1623}},{"uid":"9cad45d34024ceb5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/347//#testresult/9cad45d34024ceb5","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748442439224,"stop":1748442440466,"duration":1242}}]},"tags":["activation","unhappy_path"]},"source":"953bd7521e32df38.json","parameterValues":[]}