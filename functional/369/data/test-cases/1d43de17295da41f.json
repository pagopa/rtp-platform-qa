{"uid":"1d43de17295da41f","name":"Failed callback for non existing Service Provider - DS-04b compliant","fullName":"tests.test_callback#test_fail_send_rtp_callback_non_existing_service_provider_DS_04b_compliant","historyId":"0976199b3442c36a3644cccfb991668c","time":{"start":1749484257574,"stop":1749484257574,"duration":0},"status":"broken","statusMessage":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('Failed callback for non existing Service Provider - DS-04b compliant')\n    @pytest.mark.callback\n    @pytest.mark.unhappy_path\n    def test_fail_send_rtp_callback_non_existing_service_provider_DS_04b_compliant():\n        callback_data = generate_callback_data_DS_04b_compliant(BIC='MOCKSP99')\n    \n>       cert, key = pfx_to_pem(secrets.debtor_service_provider_mock_PFX_base64,\n                               secrets.debtor_service_provider_mock_PFX_password_base64,\n                               config.cert_path,\n                               config.key_path)\n\nfunctional-tests/tests/test_callback.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/cryptography.py:20: in pfx_to_pem\n    pfx_data = base64.b64decode(base64_pfx)\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/base64.py:83: in b64decode\n    s = _bytes_from_decode_data(s)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = None\n\n    def _bytes_from_decode_data(s):\n        if isinstance(s, str):\n            try:\n                return s.encode('ascii')\n            except UnicodeEncodeError:\n                raise ValueError('string argument should contain only ASCII characters')\n        if isinstance(s, bytes_types):\n            return s\n        try:\n            return memoryview(s).tobytes()\n        except TypeError:\n>           raise TypeError(\"argument should be a bytes-like object or ASCII \"\n                            \"string, not %r\" % s.__class__.__name__) from None\nE           TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'\n\n/opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/base64.py:45: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749484251618,"stop":1749484251676,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Callback"},{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2508-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":66,"unknown":0,"total":70},"items":[{"uid":"219d64ec0d731837","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/368//#testresult/219d64ec0d731837","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749483915711,"stop":1749483915712,"duration":1}},{"uid":"696897d7588ceece","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/365//#testresult/696897d7588ceece","status":"passed","time":{"start":1749482098373,"stop":1749482098772,"duration":399}},{"uid":"d7bde1acdf31321b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/367//#testresult/d7bde1acdf31321b","status":"broken","statusDetails":"TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'","time":{"start":1749482223428,"stop":1749482223428,"duration":0}},{"uid":"cd75a1b20bbef4b5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/cd75a1b20bbef4b5","status":"passed","time":{"start":1749452881724,"stop":1749452882178,"duration":454}},{"uid":"eb4ebfaabba5c1cd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/362//#testresult/eb4ebfaabba5c1cd","status":"passed","time":{"start":1749366425952,"stop":1749366426616,"duration":664}},{"uid":"9670cb95c2795a8b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/361//#testresult/9670cb95c2795a8b","status":"passed","time":{"start":1749280010867,"stop":1749280011337,"duration":470}},{"uid":"54c324a92fcf29b6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/54c324a92fcf29b6","status":"passed","time":{"start":1749193619786,"stop":1749193620185,"duration":399}},{"uid":"4ab90294371a66ee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/359//#testresult/4ab90294371a66ee","status":"passed","time":{"start":1749107245215,"stop":1749107245871,"duration":656}},{"uid":"69a6e1d02b2408a6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/358//#testresult/69a6e1d02b2408a6","status":"passed","time":{"start":1749020829434,"stop":1749020829901,"duration":467}},{"uid":"9efba1433ab978f7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/357//#testresult/9efba1433ab978f7","status":"passed","time":{"start":1748956565024,"stop":1748956565514,"duration":490}},{"uid":"3ecf8e5f3cf02c99","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/356//#testresult/3ecf8e5f3cf02c99","status":"passed","time":{"start":1748953131088,"stop":1748953131486,"duration":398}},{"uid":"b9f27ae84a746dfe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/355//#testresult/b9f27ae84a746dfe","status":"passed","time":{"start":1748934473893,"stop":1748934474284,"duration":391}},{"uid":"deb9b1778783a190","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/354//#testresult/deb9b1778783a190","status":"passed","time":{"start":1748848071340,"stop":1748848071749,"duration":409}},{"uid":"76410110b402f172","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/353//#testresult/76410110b402f172","status":"passed","time":{"start":1748761625999,"stop":1748761626652,"duration":653}},{"uid":"19d3daab7558fb6e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/352//#testresult/19d3daab7558fb6e","status":"passed","time":{"start":1748675217306,"stop":1748675217774,"duration":468}},{"uid":"b359db9d41ddd075","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/351//#testresult/b359db9d41ddd075","status":"passed","time":{"start":1748588830314,"stop":1748588830990,"duration":676}},{"uid":"be0401c88522beee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/350//#testresult/be0401c88522beee","status":"passed","time":{"start":1748534030010,"stop":1748534030473,"duration":463}},{"uid":"36a8bc389e2c3aa4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/349//#testresult/36a8bc389e2c3aa4","status":"passed","time":{"start":1748502455044,"stop":1748502455705,"duration":661}},{"uid":"ae69ee862a61c2df","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/348//#testresult/ae69ee862a61c2df","status":"passed","time":{"start":1748449649970,"stop":1748449650546,"duration":576}},{"uid":"eacc76c866af802","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/347//#testresult/eacc76c866af802","status":"passed","time":{"start":1748442443879,"stop":1748442444280,"duration":401}}]},"tags":["callback","unhappy_path"]},"source":"1d43de17295da41f.json","parameterValues":[]}