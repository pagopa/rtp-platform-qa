{"uid":"dac9a1be528fc694","name":"An RTP is sent to Poste service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_poste","historyId":"93feaaf7c0853e784de388e64bc6e877","time":{"start":1749805509021,"stop":1749805570217,"duration":61196},"status":"failed","statusMessage":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider')\n    @allure.title('An RTP is sent to Poste service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.poste\n    def test_send_rtp_to_poste():\n        fiscal_code = secrets.poste_activated_fiscal_code\n        rtp_data = generate_rtp_data(payer_id=fiscal_code)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        send_response = send_rtp(access_token=creditor_service_provider_access_token, rtp_payload=rtp_data)\n>       assert send_response.status_code == 201\nE       assert 504 == 201\nE        +  where 504 = <Response [504]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:86: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749805326544,"stop":1749805326601,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider"},{"name":"tag","value":"poste"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2490-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":22,"broken":9,"skipped":0,"passed":0,"unknown":0,"total":31},"items":[{"uid":"7d9baa1d127a106d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/382//#testresult/7d9baa1d127a106d","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749804030069,"stop":1749804090741,"duration":60672}},{"uid":"396f76c12641a311","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/381//#testresult/396f76c12641a311","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749802751527,"stop":1749802812315,"duration":60788}},{"uid":"578a339c8f4f800e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/380//#testresult/578a339c8f4f800e","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749801686940,"stop":1749801747648,"duration":60708}},{"uid":"62063db5c0bdba62","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/378//#testresult/62063db5c0bdba62","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749800524964,"stop":1749800525434,"duration":470}},{"uid":"7020e6890af205cf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/377//#testresult/7020e6890af205cf","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749799859325,"stop":1749799859927,"duration":602}},{"uid":"acd8b71fee75769b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/376//#testresult/acd8b71fee75769b","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749798591404,"stop":1749798652225,"duration":60821}},{"uid":"9933db930006e060","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/375//#testresult/9933db930006e060","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749712205930,"stop":1749712267098,"duration":61168}},{"uid":"5e55475ef2e67b7a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/374//#testresult/5e55475ef2e67b7a","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749625792733,"stop":1749625853536,"duration":60803}},{"uid":"163f0b80560e7f62","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/373//#testresult/163f0b80560e7f62","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749539387239,"stop":1749539448043,"duration":60804}},{"uid":"24c63398e2e5dfdc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/372//#testresult/24c63398e2e5dfdc","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749485091143,"stop":1749485091758,"duration":615}},{"uid":"1aa77adaea79b252","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/371//#testresult/1aa77adaea79b252","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484932631,"stop":1749484933246,"duration":615}},{"uid":"90bd507fce5fd67a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/370//#testresult/90bd507fce5fd67a","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484609302,"stop":1749484609708,"duration":406}},{"uid":"a4ae18b1de3d4ada","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/369//#testresult/a4ae18b1de3d4ada","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484265955,"stop":1749484266569,"duration":614}},{"uid":"d3a12e6d2115246a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/368//#testresult/d3a12e6d2115246a","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749483924129,"stop":1749483924627,"duration":498}},{"uid":"ab397e57b65090ad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/365//#testresult/ab397e57b65090ad","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749482252423,"stop":1749482313276,"duration":60853}},{"uid":"27b285b556d93003","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/367//#testresult/27b285b556d93003","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749482231629,"stop":1749482232238,"duration":609}},{"uid":"1698bad986e879b7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/1698bad986e879b7","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749453038786,"stop":1749453099582,"duration":60796}},{"uid":"c99b436b7d41376f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/362//#testresult/c99b436b7d41376f","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749366592759,"stop":1749366653974,"duration":61215}},{"uid":"9f8c46674abd110b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/361//#testresult/9f8c46674abd110b","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749280166022,"stop":1749280226856,"duration":60834}},{"uid":"fdd96d1d16baa5e4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/fdd96d1d16baa5e4","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749193775028,"stop":1749193835693,"duration":60665}}]},"tags":["poste","real_integration","send","happy_path"]},"source":"dac9a1be528fc694.json","parameterValues":[]}