{"uid":"1b4ea694d48a1011","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1749805505416,"stop":1749805509016,"duration":3600},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        rtp_data = generate_rtp_data(payer_id=fiscal_code)\n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        send_response = send_rtp(access_token=creditor_service_provider_access_token, rtp_payload=rtp_data)\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:61: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749805326544,"stop":1749805326601,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2490-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":22,"broken":9,"skipped":0,"passed":0,"unknown":0,"total":31},"items":[{"uid":"860d688c00fd2fbb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/382//#testresult/860d688c00fd2fbb","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749804026510,"stop":1749804030064,"duration":3554}},{"uid":"8e52057629adb0aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/381//#testresult/8e52057629adb0aa","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749802747448,"stop":1749802751522,"duration":4074}},{"uid":"83b5b14b3ef721b8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/380//#testresult/83b5b14b3ef721b8","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749801683281,"stop":1749801686934,"duration":3653}},{"uid":"9139f102a399981d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/378//#testresult/9139f102a399981d","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749800524571,"stop":1749800524949,"duration":378}},{"uid":"9b78be258ba327f3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/377//#testresult/9b78be258ba327f3","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749799858533,"stop":1749799859310,"duration":777}},{"uid":"fc4a3451616658ec","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/376//#testresult/fc4a3451616658ec","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749798587439,"stop":1749798591398,"duration":3959}},{"uid":"4a6b6e42fc090f11","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/375//#testresult/4a6b6e42fc090f11","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749712201719,"stop":1749712205925,"duration":4206}},{"uid":"d948cc7bb83a52e7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/374//#testresult/d948cc7bb83a52e7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749625789494,"stop":1749625792728,"duration":3234}},{"uid":"46dafcca2288995a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/373//#testresult/46dafcca2288995a","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749539378927,"stop":1749539387234,"duration":8307}},{"uid":"d56d67b6ebe70a90","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/372//#testresult/d56d67b6ebe70a90","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749485090512,"stop":1749485091126,"duration":614}},{"uid":"93d7177ebd0807c8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/371//#testresult/93d7177ebd0807c8","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484932006,"stop":1749484932616,"duration":610}},{"uid":"8bcdd301f48fead8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/370//#testresult/8bcdd301f48fead8","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484608863,"stop":1749484609286,"duration":423}},{"uid":"1df9152f231356a6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/369//#testresult/1df9152f231356a6","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749484265322,"stop":1749484265940,"duration":618}},{"uid":"d7c20b1789d9e15f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/368//#testresult/d7c20b1789d9e15f","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749483923749,"stop":1749483924114,"duration":365}},{"uid":"9da44e3c12ee959e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/365//#testresult/9da44e3c12ee959e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749482248670,"stop":1749482252418,"duration":3748}},{"uid":"cec2e31ed25e6e61","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/367//#testresult/cec2e31ed25e6e61","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1749482231005,"stop":1749482231614,"duration":609}},{"uid":"403a5f964459774","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/363//#testresult/403a5f964459774","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749453034869,"stop":1749453038781,"duration":3912}},{"uid":"53b1f91217a0aae5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/362//#testresult/53b1f91217a0aae5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749366588871,"stop":1749366592754,"duration":3883}},{"uid":"e939779fff95774a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/361//#testresult/e939779fff95774a","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749280162175,"stop":1749280166017,"duration":3842}},{"uid":"90bb5c7f44c38a60","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/360//#testresult/90bb5c7f44c38a60","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1749193771642,"stop":1749193775023,"duration":3381}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"1b4ea694d48a1011.json","parameterValues":[]}