{"uid":"e308e3a3cac33d13","name":"A debtor cannot be activated more than once","fullName":"tests.test_activation#test_fail_activate_debtor_two_times","historyId":"8704b37d564cbbe926da79ebe6202dbe","time":{"start":1745824805980,"stop":1745824807172,"duration":1192},"status":"failed","statusMessage":"AssertionError: assert '01000000F' == '01031000F'\n  \n  - 01031000F\n  + 01000000F","statusTrace":"@allure.feature('Activation')\n    @allure.story('Debtor activation')\n    @allure.title('A debtor cannot be activated more than once')\n    @pytest.mark.activation\n    @pytest.mark.unhappy_path\n    def test_fail_activate_debtor_two_times():\n        access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                              client_secret=secrets.debtor_service_provider.client_secret,\n                                              access_token_function=get_access_token)\n        debtor_fc = fake_fc()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, f'Error activating debtor, expected 201 but got {res.status_code}'\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 409, f'Error activating debtor, expected 409 but got {res.status_code}'\n>       assert res.json()['errors'][0]['code'] == '01031000F'\nE       AssertionError: assert '01000000F' == '01031000F'\nE         \nE         - 01031000F\nE         + 01000000F\n\nfunctional-tests/tests/test_activation.py:115: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1745824798945,"stop":1745824799002,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Activation"},{"name":"story","value":"Debtor activation"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"activation"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"fv-az1391-519"},{"name":"thread","value":"2367-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"2957a411beae6bf1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/309//#testresult/2957a411beae6bf1","status":"failed","statusDetails":"AssertionError: assert '01000000F' == '01031000F'\n  \n  - 01031000F\n  + 01000000F","time":{"start":1745737586431,"stop":1745737587639,"duration":1208}},{"uid":"f65a6af116947b6f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/308//#testresult/f65a6af116947b6f","status":"failed","statusDetails":"AssertionError: assert '01000000F' == '01031000F'\n  \n  - 01031000F\n  + 01000000F","time":{"start":1745651188118,"stop":1745651189340,"duration":1222}},{"uid":"d076cda4fa74dcca","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/307//#testresult/d076cda4fa74dcca","status":"failed","statusDetails":"AssertionError: assert '01000000F' == '01031000F'\n  \n  - 01031000F\n  + 01000000F","time":{"start":1745564814425,"stop":1745564815830,"duration":1405}},{"uid":"eded64f9290cbd5f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/306//#testresult/eded64f9290cbd5f","status":"failed","statusDetails":"AssertionError: assert '01000000F' == '01031000F'\n  \n  - 01031000F\n  + 01000000F","time":{"start":1745491289520,"stop":1745491291288,"duration":1768}}]},"tags":["activation","unhappy_path"]},"source":"e308e3a3cac33d13.json","parameterValues":[]}