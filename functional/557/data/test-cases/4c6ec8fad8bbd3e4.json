{"uid":"4c6ec8fad8bbd3e4","name":"A debtor is activated and retrieved by activation id","fullName":"tests.test_activation#test_get_activation_by_id","historyId":"5802a301b59e0c151ffcd2948b2fd364","time":{"start":1759821663155,"stop":1759821664482,"duration":1327},"status":"failed","statusMessage":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('Activation')\n    @allure.story('Get Debtor activation by ID')\n    @allure.title('A debtor is activated and retrieved by activation id')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.happy_path\n    def test_get_activation_by_id():\n        access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n        debtor_fc = fake_fc()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, 'Error activating debtor'\n    \n        location = res.headers['Location']\n        activation_id = location.split('/')[-1]\n        assert bool(uuidv4_pattern.fullmatch(activation_id))\n    \n        res = get_activation_by_id(access_token, activation_id)\n>       assert res.status_code == 200, f'Expected 200 but got {res.status_code}'\nE       AssertionError: Expected 200 but got 500\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_activation.py:91: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759821659153,"stop":1759821659212,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Activation"},{"name":"story","value":"Get Debtor activation by ID"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2561-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":69,"broken":2,"skipped":0,"passed":49,"unknown":0,"total":120},"items":[{"uid":"3f26553566b05b93","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/556//#testresult/3f26553566b05b93","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759735307062,"stop":1759735309228,"duration":2166}},{"uid":"13f6c04314b65f6d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/555//#testresult/13f6c04314b65f6d","status":"passed","time":{"start":1759648695051,"stop":1759648696461,"duration":1410}},{"uid":"dc675ee85c2476bd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/554//#testresult/dc675ee85c2476bd","status":"passed","time":{"start":1759562325730,"stop":1759562327812,"duration":2082}},{"uid":"e5b6a4a317963b0e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/553//#testresult/e5b6a4a317963b0e","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759483527654,"stop":1759483529786,"duration":2132}},{"uid":"19168b7d5e714a00","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/552//#testresult/19168b7d5e714a00","status":"passed","time":{"start":1759476005723,"stop":1759476007917,"duration":2194}},{"uid":"f6b118d8396f5e12","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/551//#testresult/f6b118d8396f5e12","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759389590419,"stop":1759389591748,"duration":1329}},{"uid":"c404daea0ffa1797","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/550//#testresult/c404daea0ffa1797","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759315744700,"stop":1759315746106,"duration":1406}},{"uid":"2a580fa1e9371792","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/549//#testresult/2a580fa1e9371792","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759303321371,"stop":1759303322751,"duration":1380}},{"uid":"f858f0926cab83ad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/548//#testresult/f858f0926cab83ad","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759216924804,"stop":1759216926632,"duration":1828}},{"uid":"cbe0434956812672","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/547//#testresult/cbe0434956812672","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759130541689,"stop":1759130543138,"duration":1449}},{"uid":"a46c2fc297e4f55f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/546//#testresult/a46c2fc297e4f55f","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759043934307,"stop":1759043936514,"duration":2207}},{"uid":"504ae735ddc87ddc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/545//#testresult/504ae735ddc87ddc","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758957508273,"stop":1758957509713,"duration":1440}},{"uid":"d3448b1da1afa3a1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/544//#testresult/d3448b1da1afa3a1","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758871255734,"stop":1758871258122,"duration":2388}},{"uid":"923e8f79cd0796f0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/543//#testresult/923e8f79cd0796f0","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758784881247,"stop":1758784882625,"duration":1378}},{"uid":"24061907110d9131","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/542//#testresult/24061907110d9131","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758698473191,"stop":1758698475238,"duration":2047}},{"uid":"55a54f54066bfb11","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/541//#testresult/55a54f54066bfb11","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758612095299,"stop":1758612097386,"duration":2087}},{"uid":"beb2d1ba8fa3e9f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/540//#testresult/beb2d1ba8fa3e9f","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758525759611,"stop":1758525761820,"duration":2209}},{"uid":"b01458f352ddecbb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/539//#testresult/b01458f352ddecbb","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758439107438,"stop":1758439109521,"duration":2083}},{"uid":"a62dcaf50e67ac29","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/538//#testresult/a62dcaf50e67ac29","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758352764189,"stop":1758352766318,"duration":2129}},{"uid":"ea5862357484fe88","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/537//#testresult/ea5862357484fe88","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1758270981022,"stop":1758270981591,"duration":569}}]},"tags":["auth","activation","happy_path"]},"source":"4c6ec8fad8bbd3e4.json","parameterValues":[]}