{"uid":"62518ba2cea5e81e","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1751267333942,"stop":1751267336919,"duration":2977},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        send_response = send_rtp(access_token=creditor_service_provider_access_token, rtp_payload=rtp_data)\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:66: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1751267281654,"stop":1751267281710,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmbietmlfzoi"},{"name":"thread","value":"2594-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":45,"broken":10,"skipped":0,"passed":8,"unknown":0,"total":63},"items":[{"uid":"ad4254cc558bc7fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/417//#testresult/ad4254cc558bc7fe","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751180878485,"stop":1751180881187,"duration":2702}},{"uid":"e2200759708f0957","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/416//#testresult/e2200759708f0957","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751094461160,"stop":1751094463474,"duration":2314}},{"uid":"36b491b8a89ce30a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/415//#testresult/36b491b8a89ce30a","status":"passed","time":{"start":1751008107819,"stop":1751008114199,"duration":6380}},{"uid":"6e353fb9c2abee34","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/414//#testresult/6e353fb9c2abee34","status":"passed","time":{"start":1750947035061,"stop":1750947037995,"duration":2934}},{"uid":"3ec4703318014487","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/413//#testresult/3ec4703318014487","status":"passed","time":{"start":1750924208329,"stop":1750924211481,"duration":3152}},{"uid":"536818518b739ef8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/412//#testresult/536818518b739ef8","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750921689868,"stop":1750921699008,"duration":9140}},{"uid":"df6cb48b5862a812","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/411//#testresult/df6cb48b5862a812","status":"passed","time":{"start":1750856392829,"stop":1750856395301,"duration":2472}},{"uid":"37c5ab18f3005971","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/408//#testresult/37c5ab18f3005971","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750835450516,"stop":1750835454199,"duration":3683}},{"uid":"d719bf79857bf8b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/407//#testresult/d719bf79857bf8b","status":"passed","time":{"start":1750780679560,"stop":1750780682301,"duration":2741}},{"uid":"f67075b6ab4eadbc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/406//#testresult/f67075b6ab4eadbc","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750779211083,"stop":1750779213828,"duration":2745}},{"uid":"f51590ea0b494b86","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/405//#testresult/f51590ea0b494b86","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1750777971098,"stop":1750777971565,"duration":467}},{"uid":"724360d6a51a9e84","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/404//#testresult/724360d6a51a9e84","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750756870796,"stop":1750756873292,"duration":2496}},{"uid":"4f99d91a3d339ef","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/403//#testresult/4f99d91a3d339ef","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750749018097,"stop":1750749020934,"duration":2837}},{"uid":"26672bcea134b914","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/402//#testresult/26672bcea134b914","status":"passed","time":{"start":1750685016842,"stop":1750685021271,"duration":4429}},{"uid":"e643b413e3fff82c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/401//#testresult/e643b413e3fff82c","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750662660424,"stop":1750662670019,"duration":9595}},{"uid":"6fbdb04d14a27bc7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/400//#testresult/6fbdb04d14a27bc7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750576231506,"stop":1750576234407,"duration":2901}},{"uid":"a6b5db0cf1acaf7b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/399//#testresult/a6b5db0cf1acaf7b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750489800844,"stop":1750489806011,"duration":5167}},{"uid":"9cc6a8d836bc6a9c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/398//#testresult/9cc6a8d836bc6a9c","status":"passed","time":{"start":1750403392498,"stop":1750403395333,"duration":2835}},{"uid":"999b69ba275d369a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/397//#testresult/999b69ba275d369a","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750335167751,"stop":1750335171843,"duration":4092}},{"uid":"1111157e7ea8544a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/396//#testresult/1111157e7ea8544a","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750329808572,"stop":1750329813747,"duration":5175}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"62518ba2cea5e81e.json","parameterValues":[]}