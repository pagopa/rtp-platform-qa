{"uid":"604e80413c7203e4","name":"A Service Provider is authenticated","fullName":"tests.test_auth#test_get_valid_token","historyId":"e813f3b4e17d0411820f4d08ba7e7042","time":{"start":1753513638023,"stop":1753513638855,"duration":832},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('Authentication')\n    @allure.story('Service Provider authentication')\n    @allure.title('A Service Provider is authenticated')\n    @pytest.mark.auth\n    @pytest.mark.happy_path\n    def test_get_valid_token():\n>       access_token = get_valid_access_token(client_id=secrets.creditor_service_provider.client_id,\n                                              client_secret=secrets.creditor_service_provider.client_secret,\n                                              access_token_function=get_access_token)\n\nfunctional-tests/tests/test_auth.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1753513625012,"stop":1753513625068,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Authentication"},{"name":"story","value":"Service Provider authentication"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_auth"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"2481-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_auth"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":11,"skipped":0,"passed":266,"unknown":0,"total":277},"items":[{"uid":"41e4fe7978201c0e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/457//#testresult/41e4fe7978201c0e","status":"passed","time":{"start":1753433520326,"stop":1753433521185,"duration":859}},{"uid":"d0dd4ec987e26ff3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/456//#testresult/d0dd4ec987e26ff3","status":"passed","time":{"start":1753427361563,"stop":1753427362287,"duration":724}},{"uid":"42727bfddeefc4aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/455//#testresult/42727bfddeefc4aa","status":"passed","time":{"start":1753366957362,"stop":1753366958358,"duration":996}},{"uid":"913446e37754ce76","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/454//#testresult/913446e37754ce76","status":"passed","time":{"start":1753351329358,"stop":1753351330017,"duration":659}},{"uid":"f7bde0fc31e4c73f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/453//#testresult/f7bde0fc31e4c73f","status":"passed","time":{"start":1753340973281,"stop":1753340973994,"duration":713}},{"uid":"a8f51b1191a1c340","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/452//#testresult/a8f51b1191a1c340","status":"passed","time":{"start":1753254598488,"stop":1753254599121,"duration":633}},{"uid":"b6fe1090f0aa3839","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/451//#testresult/b6fe1090f0aa3839","status":"passed","time":{"start":1753168165688,"stop":1753168166025,"duration":337}},{"uid":"265cd25d8fb3a882","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/450//#testresult/265cd25d8fb3a882","status":"passed","time":{"start":1753081884670,"stop":1753081885274,"duration":604}},{"uid":"8ff4eb6b54a8fa53","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/449//#testresult/8ff4eb6b54a8fa53","status":"passed","time":{"start":1752995241057,"stop":1752995241752,"duration":695}},{"uid":"7d9ec9cbda2469ff","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/448//#testresult/7d9ec9cbda2469ff","status":"passed","time":{"start":1752908869844,"stop":1752908870688,"duration":844}},{"uid":"be10976db66e93d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/447//#testresult/be10976db66e93d","status":"passed","time":{"start":1752822595078,"stop":1752822595926,"duration":848}},{"uid":"bd28fb629df1b239","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/446//#testresult/bd28fb629df1b239","status":"passed","time":{"start":1752736151558,"stop":1752736152981,"duration":1423}},{"uid":"9856b47ee4190b77","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/445//#testresult/9856b47ee4190b77","status":"passed","time":{"start":1752672632461,"stop":1752672633054,"duration":593}},{"uid":"452397e2cd7fb827","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/444//#testresult/452397e2cd7fb827","status":"passed","time":{"start":1752649736663,"stop":1752649737429,"duration":766}},{"uid":"6911d47e3aac7d9b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/443//#testresult/6911d47e3aac7d9b","status":"passed","time":{"start":1752569289483,"stop":1752569289839,"duration":356}},{"uid":"7671adde57fff827","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/442//#testresult/7671adde57fff827","status":"passed","time":{"start":1752563347672,"stop":1752563348565,"duration":893}},{"uid":"3cfcd28cfe98d917","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/441//#testresult/3cfcd28cfe98d917","status":"passed","time":{"start":1752476973569,"stop":1752476974572,"duration":1003}},{"uid":"d4b826c267494bc2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/440//#testresult/d4b826c267494bc2","status":"passed","time":{"start":1752390537508,"stop":1752390538108,"duration":600}},{"uid":"d722c671e6c8dc9e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/439//#testresult/d722c671e6c8dc9e","status":"passed","time":{"start":1752304077233,"stop":1752304077854,"duration":621}},{"uid":"24f48373b2043dc8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/438//#testresult/24f48373b2043dc8","status":"passed","time":{"start":1752217698385,"stop":1752217699215,"duration":830}}]},"tags":["auth","happy_path"]},"source":"604e80413c7203e4.json","parameterValues":[]}