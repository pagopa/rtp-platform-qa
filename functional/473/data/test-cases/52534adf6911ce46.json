{"uid":"52534adf6911ce46","name":"A Service Provider is authenticated","fullName":"tests.test_auth#test_get_valid_token","historyId":"e813f3b4e17d0411820f4d08ba7e7042","time":{"start":1754377948348,"stop":1754377948838,"duration":490},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('Authentication')\n    @allure.story('Service Provider authentication')\n    @allure.title('A Service Provider is authenticated')\n    @pytest.mark.auth\n    @pytest.mark.happy_path\n    def test_get_valid_token():\n>       access_token = get_valid_access_token(client_id=secrets.creditor_service_provider.client_id,\n                                              client_secret=secrets.creditor_service_provider.client_secret,\n                                              access_token_function=get_access_token)\n\nfunctional-tests/tests/test_auth.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1754377935028,"stop":1754377935084,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service Provider authentication"},{"name":"feature","value":"Authentication"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_auth"},{"name":"host","value":"pkrvmjbmru5nbw0"},{"name":"thread","value":"2498-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_auth"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":26,"skipped":0,"passed":266,"unknown":0,"total":292},"items":[{"uid":"56058f9879980e77","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/472//#testresult/56058f9879980e77","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754377878960,"stop":1754377879586,"duration":626}},{"uid":"a158f98c82eb313e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/471//#testresult/a158f98c82eb313e","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754319180409,"stop":1754319180962,"duration":553}},{"uid":"a2ef3166d2608f14","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/470//#testresult/a2ef3166d2608f14","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754291639637,"stop":1754291640296,"duration":659}},{"uid":"3e52bf7ac55c96b7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/469//#testresult/3e52bf7ac55c96b7","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754204842287,"stop":1754204842680,"duration":393}},{"uid":"728031b221c0f460","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/468//#testresult/728031b221c0f460","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754118444803,"stop":1754118445400,"duration":597}},{"uid":"c6e8e76d0ad46cb8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/467//#testresult/c6e8e76d0ad46cb8","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754051880288,"stop":1754051880739,"duration":451}},{"uid":"ea1d2c4225ca11cf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/466//#testresult/ea1d2c4225ca11cf","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754032251007,"stop":1754032251405,"duration":398}},{"uid":"24c8fb803c40f7ed","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/465//#testresult/24c8fb803c40f7ed","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753973997480,"stop":1753973997880,"duration":400}},{"uid":"b7c24606d263ba24","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/464//#testresult/b7c24606d263ba24","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753945800422,"stop":1753945801093,"duration":671}},{"uid":"ef68a200f3b04000","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/463//#testresult/ef68a200f3b04000","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753878238342,"stop":1753878238995,"duration":653}},{"uid":"fccf556321649bf9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/462//#testresult/fccf556321649bf9","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753859442325,"stop":1753859442980,"duration":655}},{"uid":"44a20a6b78ddd0e7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/461//#testresult/44a20a6b78ddd0e7","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753773002297,"stop":1753773002946,"duration":649}},{"uid":"3252f077b7f0dfc1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/460//#testresult/3252f077b7f0dfc1","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753686683805,"stop":1753686684313,"duration":508}},{"uid":"768ab7f14937e5f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/459//#testresult/768ab7f14937e5f","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753600026198,"stop":1753600026571,"duration":373}},{"uid":"604e80413c7203e4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/458//#testresult/604e80413c7203e4","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753513638023,"stop":1753513638855,"duration":832}},{"uid":"41e4fe7978201c0e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/457//#testresult/41e4fe7978201c0e","status":"passed","time":{"start":1753433520326,"stop":1753433521185,"duration":859}},{"uid":"d0dd4ec987e26ff3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/456//#testresult/d0dd4ec987e26ff3","status":"passed","time":{"start":1753427361563,"stop":1753427362287,"duration":724}},{"uid":"42727bfddeefc4aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/455//#testresult/42727bfddeefc4aa","status":"passed","time":{"start":1753366957362,"stop":1753366958358,"duration":996}},{"uid":"913446e37754ce76","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/454//#testresult/913446e37754ce76","status":"passed","time":{"start":1753351329358,"stop":1753351330017,"duration":659}},{"uid":"f7bde0fc31e4c73f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/453//#testresult/f7bde0fc31e4c73f","status":"passed","time":{"start":1753340973281,"stop":1753340973994,"duration":713}}]},"tags":["auth","happy_path"]},"source":"52534adf6911ce46.json","parameterValues":[]}