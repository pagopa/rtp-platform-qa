{"uid":"dc4e490fba97dcad","name":"An RTP is sent to ICCREA service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_iccrea","historyId":"43c6e6f1884b3efb611eee04b5b6eb0c","time":{"start":1753367017510,"stop":1753367020511,"duration":3001},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider')\n    @allure.title('An RTP is sent to ICCREA service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.iccrea\n    def test_send_rtp_to_iccrea():\n        rtp_data = generate_rtp_data(payer_id=secrets.iccrea_activated_fiscal_code)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:143: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1753366939946,"stop":1753366940004,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"iccrea"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"2485-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":34},"items":[{"uid":"528a7297a0b31aaf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/454//#testresult/528a7297a0b31aaf","status":"passed","time":{"start":1753351374275,"stop":1753351375721,"duration":1446}},{"uid":"9f2c7e015c16c0ba","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/453//#testresult/9f2c7e015c16c0ba","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1753341028458,"stop":1753341031947,"duration":3489}},{"uid":"66e8616d9297944","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/452//#testresult/66e8616d9297944","status":"passed","time":{"start":1753254648073,"stop":1753254649146,"duration":1073}},{"uid":"78281b9397874a1c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/451//#testresult/78281b9397874a1c","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1753168199954,"stop":1753168202535,"duration":2581}},{"uid":"5ba08e752037da03","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/450//#testresult/5ba08e752037da03","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1753081919527,"stop":1753081922856,"duration":3329}},{"uid":"22cf238d75765fee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/449//#testresult/22cf238d75765fee","status":"passed","time":{"start":1752995291509,"stop":1752995292598,"duration":1089}},{"uid":"fbbb7292271d449c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/448//#testresult/fbbb7292271d449c","status":"passed","time":{"start":1752908936616,"stop":1752908938313,"duration":1697}},{"uid":"6149274e1818ae05","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/447//#testresult/6149274e1818ae05","status":"passed","time":{"start":1752822659224,"stop":1752822660846,"duration":1622}},{"uid":"ee7a9a4479e2f814","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/446//#testresult/ee7a9a4479e2f814","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1752736203907,"stop":1752736207309,"duration":3402}},{"uid":"76390342b3c9cf41","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/445//#testresult/76390342b3c9cf41","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1752672670480,"stop":1752672674594,"duration":4114}},{"uid":"85733fa899fe28f1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/444//#testresult/85733fa899fe28f1","status":"passed","time":{"start":1752649801439,"stop":1752649803049,"duration":1610}},{"uid":"5a94b843a59b15e5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/443//#testresult/5a94b843a59b15e5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1752569327145,"stop":1752569329958,"duration":2813}},{"uid":"85943c8a1ce5156","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/442//#testresult/85943c8a1ce5156","status":"passed","time":{"start":1752563413104,"stop":1752563417113,"duration":4009}},{"uid":"83a653e926fe909b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/441//#testresult/83a653e926fe909b","status":"passed","time":{"start":1752477019162,"stop":1752477020326,"duration":1164}},{"uid":"f07e11787b25eb21","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/440//#testresult/f07e11787b25eb21","status":"passed","time":{"start":1752390590106,"stop":1752390591337,"duration":1231}},{"uid":"2326f220a2199e49","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/439//#testresult/2326f220a2199e49","status":"passed","time":{"start":1752304123658,"stop":1752304124939,"duration":1281}},{"uid":"ee1cc4fde4b1ddf6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/438//#testresult/ee1cc4fde4b1ddf6","status":"passed","time":{"start":1752217755651,"stop":1752217757253,"duration":1602}},{"uid":"b5ecaaec91a41176","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/437//#testresult/b5ecaaec91a41176","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1752163230817,"stop":1752163233813,"duration":2996}},{"uid":"9619544d8ee1c91b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/436//#testresult/9619544d8ee1c91b","status":"passed","time":{"start":1752160545129,"stop":1752160546279,"duration":1150}},{"uid":"6f1033efec5b4b97","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/435//#testresult/6f1033efec5b4b97","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1752145282207,"stop":1752145285847,"duration":3640}}]},"tags":["iccrea","real_integration","send","happy_path"]},"source":"dc4e490fba97dcad.json","parameterValues":[]}