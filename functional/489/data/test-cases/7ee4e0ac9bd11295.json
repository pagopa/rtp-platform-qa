{"uid":"7ee4e0ac9bd11295","name":"Retrieving non-existent activation returns 404","fullName":"tests.test_activation#test_get_activation_by_id_not_found","historyId":"fe0e3af7d2c0e3d43283eba69b21d3f8","time":{"start":1755158287613,"stop":1755158288466,"duration":853},"status":"failed","statusMessage":"AssertionError: assert 500 == 404\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('Activation')\n    @allure.story('Get Debtor activation by ID')\n    @allure.title('Retrieving non-existent activation returns 404')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.unhappy_path\n    def test_get_activation_by_id_not_found():\n        access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n        random_id = str(uuid.uuid4())\n        res = get_activation_by_id(access_token, random_id)\n>       assert res.status_code == 404\nE       assert 500 == 404\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_activation.py:185: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755158278856,"stop":1755158278913,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Activation"},{"name":"story","value":"Get Debtor activation by ID"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"pkrvmsl9tci6h6u"},{"name":"thread","value":"2514-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":18,"broken":0,"skipped":0,"passed":34,"unknown":0,"total":52},"items":[{"uid":"18ad8d202993f0d5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/488//#testresult/18ad8d202993f0d5","status":"passed","time":{"start":1755155301096,"stop":1755155302476,"duration":1380}},{"uid":"df3b132cc0dc2e9a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/487//#testresult/df3b132cc0dc2e9a","status":"passed","time":{"start":1755068892508,"stop":1755068893385,"duration":877}},{"uid":"80a4ca8f105ff7e5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/486//#testresult/80a4ca8f105ff7e5","status":"failed","statusDetails":"AssertionError: assert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754982487221,"stop":1754982488482,"duration":1261}},{"uid":"59955dbdae8922eb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/485//#testresult/59955dbdae8922eb","status":"passed","time":{"start":1754907826641,"stop":1754907827494,"duration":853}},{"uid":"a6aed24e04850099","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/483//#testresult/a6aed24e04850099","status":"failed","statusDetails":"AssertionError: assert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754896247019,"stop":1754896248286,"duration":1267}},{"uid":"cb6753b4d31c3963","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/482//#testresult/cb6753b4d31c3963","status":"failed","statusDetails":"AssertionError: assert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754809592807,"stop":1754809593659,"duration":852}},{"uid":"e37717a752cfae00","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/481//#testresult/e37717a752cfae00","status":"failed","statusDetails":"AssertionError: assert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754723210191,"stop":1754723210943,"duration":752}},{"uid":"9fcd0e342e95bb61","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/480//#testresult/9fcd0e342e95bb61","status":"failed","statusDetails":"AssertionError: assert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754637076492,"stop":1754637077783,"duration":1291}},{"uid":"adefb75cea54a0ba","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/479//#testresult/adefb75cea54a0ba","status":"failed","statusDetails":"AssertionError: assert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754550660562,"stop":1754550661536,"duration":974}},{"uid":"e56417e2ea8f8c77","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/478//#testresult/e56417e2ea8f8c77","status":"passed","time":{"start":1754464759569,"stop":1754464761009,"duration":1440}},{"uid":"ae07159c52fb6b5c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/476//#testresult/ae07159c52fb6b5c","status":"failed","statusDetails":"AssertionError: assert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754464710775,"stop":1754464711525,"duration":750}},{"uid":"4e1c4507cfed8f32","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/475//#testresult/4e1c4507cfed8f32","status":"passed","time":{"start":1754464262771,"stop":1754464264058,"duration":1287}},{"uid":"d92c6e47b96c86e9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/474//#testresult/d92c6e47b96c86e9","status":"failed","statusDetails":"AssertionError: assert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754387674821,"stop":1754387675667,"duration":846}},{"uid":"934c260c1e9c4bf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/473//#testresult/934c260c1e9c4bf","status":"failed","statusDetails":"AssertionError: assert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754377943641,"stop":1754377944659,"duration":1018}},{"uid":"99db8ff55005e581","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/472//#testresult/99db8ff55005e581","status":"passed","time":{"start":1754377872849,"stop":1754377874040,"duration":1191}},{"uid":"87f37b0f9f3ac518","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/471//#testresult/87f37b0f9f3ac518","status":"failed","statusDetails":"AssertionError: assert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754319176057,"stop":1754319176946,"duration":889}},{"uid":"2f7e87f9d5fa86b8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/470//#testresult/2f7e87f9d5fa86b8","status":"failed","statusDetails":"AssertionError: assert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754291632886,"stop":1754291634310,"duration":1424}},{"uid":"e9f4504ea53a216f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/469//#testresult/e9f4504ea53a216f","status":"failed","statusDetails":"AssertionError: assert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754204838517,"stop":1754204839304,"duration":787}},{"uid":"e4269fec41c2742e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/468//#testresult/e4269fec41c2742e","status":"passed","time":{"start":1754118439114,"stop":1754118440260,"duration":1146}},{"uid":"88d61528d5076e44","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/467//#testresult/88d61528d5076e44","status":"failed","statusDetails":"AssertionError: assert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1754051875369,"stop":1754051876238,"duration":869}}]},"tags":["auth","activation","unhappy_path"]},"source":"7ee4e0ac9bd11295.json","parameterValues":[]}