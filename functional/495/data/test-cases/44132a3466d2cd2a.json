{"uid":"44132a3466d2cd2a","name":"inexistent RTP -> empty body","fullName":"tests.test_get_rtp#test_get_rtp_not_found","historyId":"f374baeb8e6aa77fbe08e6036a22e13b","time":{"start":1755587316729,"stop":1755587317618,"duration":889},"status":"failed","statusMessage":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","statusTrace":"@allure.feature('RTP Get')\n    @allure.story('Service provider retrieves an RTP')\n    @allure.title('inexistent RTP -> empty body')\n    @pytest.mark.get\n    @pytest.mark.unhappy_path\n    def test_get_rtp_not_found():\n        fake_rtp_id = str(uuid.uuid4())\n    \n        token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        resp = get_rtp(access_token=token, rtp_id=fake_rtp_id)\n    \n>       assert resp.status_code in (\n            404,\n            204,\n        ), f\"Status code: {resp.status_code}, body: {resp.text}\"\nE       AssertionError: Status code: 403, body: \nE       assert 403 in (404, 204)\nE        +  where 403 = <Response [403]>.status_code\n\nfunctional-tests/tests/test_get_rtp.py:75: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755587235623,"stop":1755587235685,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Get"},{"name":"story","value":"Service provider retrieves an RTP"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":19,"broken":18,"skipped":0,"passed":70,"unknown":0,"total":107},"items":[{"uid":"b86a058057fd4d58","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/494//#testresult/b86a058057fd4d58","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755501060689,"stop":1755501061993,"duration":1304}},{"uid":"79ee3cf04e41d6bb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/493//#testresult/79ee3cf04e41d6bb","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755414454621,"stop":1755414455406,"duration":785}},{"uid":"98b9a654792ec982","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/492//#testresult/98b9a654792ec982","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755328047064,"stop":1755328047784,"duration":720}},{"uid":"7db2dddc3599bf65","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/491//#testresult/7db2dddc3599bf65","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755241732126,"stop":1755241732911,"duration":785}},{"uid":"f8fe2dccf4996509","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/490//#testresult/f8fe2dccf4996509","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755166843075,"stop":1755166844132,"duration":1057}},{"uid":"599794a908ee7c7a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/489//#testresult/599794a908ee7c7a","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755158348649,"stop":1755158349411,"duration":762}},{"uid":"614207ceebf1272d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/488//#testresult/614207ceebf1272d","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755155390618,"stop":1755155391870,"duration":1252}},{"uid":"5ff3b6a05335d3fd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/487//#testresult/5ff3b6a05335d3fd","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755068963764,"stop":1755068964668,"duration":904}},{"uid":"f7f0ca5380fe218c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/486//#testresult/f7f0ca5380fe218c","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1754982575509,"stop":1754982576805,"duration":1296}},{"uid":"8df7206426d19c66","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/485//#testresult/8df7206426d19c66","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1754907888642,"stop":1754907889546,"duration":904}},{"uid":"62b53e9d865440ec","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/483//#testresult/62b53e9d865440ec","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1754896333357,"stop":1754896334648,"duration":1291}},{"uid":"d9bf771d5ea466a6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/482//#testresult/d9bf771d5ea466a6","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1754809664624,"stop":1754809665537,"duration":913}},{"uid":"6776b3093918ab90","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/481//#testresult/6776b3093918ab90","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1754723274641,"stop":1754723275396,"duration":755}},{"uid":"e8882ef5c19d961c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/480//#testresult/e8882ef5c19d961c","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1754637179269,"stop":1754637180550,"duration":1281}},{"uid":"60d27fa03ec7deb6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/479//#testresult/60d27fa03ec7deb6","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1754550752284,"stop":1754550753272,"duration":988}},{"uid":"2250e42680dda9ea","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/478//#testresult/2250e42680dda9ea","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1754464840772,"stop":1754464842004,"duration":1232}},{"uid":"5569f752a2ed9ee8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/476//#testresult/5569f752a2ed9ee8","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1754464767174,"stop":1754464767928,"duration":754}},{"uid":"d8e57e568c59dd3c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/475//#testresult/d8e57e568c59dd3c","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1754464348782,"stop":1754464350111,"duration":1329}},{"uid":"dbb9d9a8733abd63","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/474//#testresult/dbb9d9a8733abd63","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754387730487,"stop":1754387730868,"duration":381}},{"uid":"5778c381c316679d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/473//#testresult/5778c381c316679d","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754377998946,"stop":1754377999388,"duration":442}}]},"tags":["get","unhappy_path"]},"source":"44132a3466d2cd2a.json","parameterValues":[]}