{"uid":"5fe9e3fadac31ab2","name":"RTP is successfully retrieved","fullName":"tests.test_get_rtp#test_get_rtp_success","historyId":"caeb9610ab96a7a077f09cf26a913a9a","time":{"start":1754896330115,"stop":1754896333353,"duration":3238},"status":"failed","statusMessage":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","statusTrace":"@allure.feature('RTP Get')\n    @allure.story('Service provider retrieves an RTP')\n    @allure.title('RTP is successfully retrieved')\n    @pytest.mark.get\n    @pytest.mark.happy_path\n    def test_get_rtp_success():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        activation_response = activate(\n            debtor_service_provider_access_token,\n            rtp_data['payer']['payerId'],\n            secrets.debtor_service_provider.service_provider_id,\n        )\n        assert activation_response.status_code == 201, 'Error activating debtor'\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n        assert send_response.status_code == 201\n    \n        location = send_response.headers['Location']\n        resource_id = location.split('/')[-1]\n    \n        get_response = get_rtp(\n            access_token=creditor_service_provider_access_token, rtp_id=resource_id\n        )\n>       assert get_response.status_code == 200\nE       assert 403 == 200\nE        +  where 403 = <Response [403]>.status_code\n\nfunctional-tests/tests/test_get_rtp.py:54: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1754896234626,"stop":1754896234685,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Get"},{"name":"story","value":"Service provider retrieves an RTP"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"pkrvmsl9tci6h6u"},{"name":"thread","value":"2747-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":18,"skipped":0,"passed":70,"unknown":0,"total":96},"items":[{"uid":"ad848fea8d10630","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/482//#testresult/ad848fea8d10630","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1754809662403,"stop":1754809664620,"duration":2217}},{"uid":"b0b20fa550f1e922","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/481//#testresult/b0b20fa550f1e922","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1754723272713,"stop":1754723274636,"duration":1923}},{"uid":"4e4fc92270c5af0f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/480//#testresult/4e4fc92270c5af0f","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1754637175915,"stop":1754637179265,"duration":3350}},{"uid":"b5b8e156e1512b09","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/479//#testresult/b5b8e156e1512b09","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1754550749776,"stop":1754550752280,"duration":2504}},{"uid":"17ac97065d14805","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/478//#testresult/17ac97065d14805","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1754464837491,"stop":1754464840768,"duration":3277}},{"uid":"96d3262683d1eba8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/476//#testresult/96d3262683d1eba8","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1754464765272,"stop":1754464767169,"duration":1897}},{"uid":"70796a77134ff76","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/475//#testresult/70796a77134ff76","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1754464345476,"stop":1754464348778,"duration":3302}},{"uid":"88ef9fcab9129187","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/474//#testresult/88ef9fcab9129187","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754387729723,"stop":1754387730473,"duration":750}},{"uid":"755a93c907ca0919","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/473//#testresult/755a93c907ca0919","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754377998047,"stop":1754377998931,"duration":884}},{"uid":"f90505e2c924273a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/472//#testresult/f90505e2c924273a","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754377948563,"stop":1754377949754,"duration":1191}},{"uid":"aa803381efde5914","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/471//#testresult/aa803381efde5914","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754319231713,"stop":1754319232544,"duration":831}},{"uid":"2589f8228ae84737","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/470//#testresult/2589f8228ae84737","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754291684092,"stop":1754291685347,"duration":1255}},{"uid":"e567ca961d2de16a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/469//#testresult/e567ca961d2de16a","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754204873024,"stop":1754204873715,"duration":691}},{"uid":"77ffdd760a93d928","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/468//#testresult/77ffdd760a93d928","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754118485732,"stop":1754118486854,"duration":1122}},{"uid":"86f57bf84f856d65","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/467//#testresult/86f57bf84f856d65","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754051912847,"stop":1754051913712,"duration":865}},{"uid":"90f1f5449dcb12f1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/466//#testresult/90f1f5449dcb12f1","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754032279724,"stop":1754032281177,"duration":1453}},{"uid":"a633557df0bd6f2d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/465//#testresult/a633557df0bd6f2d","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753974033238,"stop":1753974033985,"duration":747}},{"uid":"83cdf3e6f5727736","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/464//#testresult/83cdf3e6f5727736","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753945845373,"stop":1753945846601,"duration":1228}},{"uid":"952bae5f5607243a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/463//#testresult/952bae5f5607243a","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753878280686,"stop":1753878281940,"duration":1254}},{"uid":"4e3baec762084d7a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/462//#testresult/4e3baec762084d7a","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753859493290,"stop":1753859494534,"duration":1244}}]},"tags":["get","happy_path"]},"source":"5fe9e3fadac31ab2.json","parameterValues":[]}