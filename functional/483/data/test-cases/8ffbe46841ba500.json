{"uid":"8ffbe46841ba500","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1754896343518,"stop":1754896347116,"duration":3598},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1754896234626,"stop":1754896234685,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmsl9tci6h6u"},{"name":"thread","value":"2747-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":67,"broken":27,"skipped":0,"passed":32,"unknown":0,"total":126},"items":[{"uid":"c7cff80d2dd2a37b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/482//#testresult/c7cff80d2dd2a37b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754809671326,"stop":1754809674353,"duration":3027}},{"uid":"6b7424670f079f9c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/481//#testresult/6b7424670f079f9c","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754723280768,"stop":1754723283835,"duration":3067}},{"uid":"ab6a43634c93115f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/480//#testresult/ab6a43634c93115f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754637189171,"stop":1754637193065,"duration":3894}},{"uid":"64b27839ec7b9862","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/479//#testresult/64b27839ec7b9862","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754550760104,"stop":1754550763328,"duration":3224}},{"uid":"35cb3839893e0550","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/478//#testresult/35cb3839893e0550","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754464850362,"stop":1754464853861,"duration":3499}},{"uid":"b334ab5c53d12e68","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/476//#testresult/b334ab5c53d12e68","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754464773533,"stop":1754464776109,"duration":2576}},{"uid":"ee5380230bf120d4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/475//#testresult/ee5380230bf120d4","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754464359319,"stop":1754464362557,"duration":3238}},{"uid":"ff5b48f236ad2bcd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/474//#testresult/ff5b48f236ad2bcd","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754387735849,"stop":1754387736231,"duration":382}},{"uid":"f74906647bf7a4ea","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/473//#testresult/f74906647bf7a4ea","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754378003891,"stop":1754378004363,"duration":472}},{"uid":"97ea28b95bc154d2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/472//#testresult/97ea28b95bc154d2","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754377957329,"stop":1754377957935,"duration":606}},{"uid":"726d40680f84a6a2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/471//#testresult/726d40680f84a6a2","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754319238246,"stop":1754319238700,"duration":454}},{"uid":"8fc23b5a358ddd6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/470//#testresult/8fc23b5a358ddd6","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754291692416,"stop":1754291693056,"duration":640}},{"uid":"ce3b4eafea5a52c8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/469//#testresult/ce3b4eafea5a52c8","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754204877687,"stop":1754204878047,"duration":360}},{"uid":"324c6a9fbae0bd17","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/468//#testresult/324c6a9fbae0bd17","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754118493859,"stop":1754118494443,"duration":584}},{"uid":"df29ea1463efa776","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/467//#testresult/df29ea1463efa776","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754051919102,"stop":1754051919547,"duration":445}},{"uid":"f004ee97cd8c7a51","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/466//#testresult/f004ee97cd8c7a51","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754032285473,"stop":1754032286719,"duration":1246}},{"uid":"15188aa0cb6758b3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/465//#testresult/15188aa0cb6758b3","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753974039116,"stop":1753974039499,"duration":383}},{"uid":"6db727a9e453a682","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/464//#testresult/6db727a9e453a682","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753945853404,"stop":1753945854026,"duration":622}},{"uid":"92e6b2da150cde9f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/463//#testresult/92e6b2da150cde9f","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753878289817,"stop":1753878290448,"duration":631}},{"uid":"98e4fae3ef0d4f57","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/462//#testresult/98e4fae3ef0d4f57","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753859502401,"stop":1753859503035,"duration":634}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"8ffbe46841ba500.json","parameterValues":[]}