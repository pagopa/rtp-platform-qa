{"uid":"11f75433be1630ff","name":"An RTP is sent to Poste service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_poste","historyId":"93feaaf7c0853e784de388e64bc6e877","time":{"start":1750749020940,"stop":1750749023161,"duration":2221},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider')\n    @allure.title('An RTP is sent to Poste service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.poste\n    def test_send_rtp_to_poste():\n        fiscal_code = secrets.poste_activated_fiscal_code\n        rtp_data = generate_rtp_data(payer_id=fiscal_code)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        send_response = send_rtp(access_token=creditor_service_provider_access_token, rtp_payload=rtp_data)\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:88: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750748847689,"stop":1750748847745,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"poste"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2483-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":41,"broken":9,"skipped":0,"passed":0,"unknown":0,"total":50},"items":[{"uid":"14f25201b9957a8f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/402//#testresult/14f25201b9957a8f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750685021273,"stop":1750685023630,"duration":2357}},{"uid":"8dd45ed9333a5872","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/401//#testresult/8dd45ed9333a5872","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750662670024,"stop":1750662672999,"duration":2975}},{"uid":"8cad965d062978b6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/400//#testresult/8cad965d062978b6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750576234412,"stop":1750576237625,"duration":3213}},{"uid":"dfecd0cd3e60f8f2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/399//#testresult/dfecd0cd3e60f8f2","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750489806016,"stop":1750489808930,"duration":2914}},{"uid":"834b37fbf8ba94e7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/398//#testresult/834b37fbf8ba94e7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750403395334,"stop":1750403397892,"duration":2558}},{"uid":"f4ef7d45f175022e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/397//#testresult/f4ef7d45f175022e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750335171848,"stop":1750335174164,"duration":2316}},{"uid":"eb463e6a31e90f53","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/396//#testresult/eb463e6a31e90f53","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750329813752,"stop":1750329816752,"duration":3000}},{"uid":"35bf37e4b7b80a06","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/395//#testresult/35bf37e4b7b80a06","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750328740773,"stop":1750328743227,"duration":2454}},{"uid":"ade8e7fad2a1a1f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/394//#testresult/ade8e7fad2a1a1f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750317705896,"stop":1750317708288,"duration":2392}},{"uid":"41798bf5bcbbb938","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/393//#testresult/41798bf5bcbbb938","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750317036394,"stop":1750317039422,"duration":3028}},{"uid":"fd4005d7028be90c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/392//#testresult/fd4005d7028be90c","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1750230654058,"stop":1750230715186,"duration":61128}},{"uid":"6cc95070f5577e84","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/391//#testresult/6cc95070f5577e84","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1750170295146,"stop":1750170355854,"duration":60708}},{"uid":"f4f499ca57485a05","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/389//#testresult/f4f499ca57485a05","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1750144213569,"stop":1750144274744,"duration":61175}},{"uid":"861d9870532f966b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/388//#testresult/861d9870532f966b","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1750069190479,"stop":1750069251399,"duration":60920}},{"uid":"c2ba6e8d2527417b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/387//#testresult/c2ba6e8d2527417b","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1750057872639,"stop":1750057933446,"duration":60807}},{"uid":"e380b47d487f9510","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/386//#testresult/e380b47d487f9510","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749971411482,"stop":1749971472363,"duration":60881}},{"uid":"be9fa45bc9ffd424","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/385//#testresult/be9fa45bc9ffd424","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749885015135,"stop":1749885075925,"duration":60790}},{"uid":"c76ea0d16b9c386f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/384//#testresult/c76ea0d16b9c386f","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749810278159,"stop":1749810338831,"duration":60672}},{"uid":"dac9a1be528fc694","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/383//#testresult/dac9a1be528fc694","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749805509021,"stop":1749805570217,"duration":61196}},{"uid":"7d9baa1d127a106d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/382//#testresult/7d9baa1d127a106d","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1749804030069,"stop":1749804090741,"duration":60672}}]},"tags":["poste","real_integration","send","happy_path"]},"source":"11f75433be1630ff.json","parameterValues":[]}