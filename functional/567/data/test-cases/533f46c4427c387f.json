{"uid":"533f46c4427c387f","name":"An RTP is sent to ICCREA service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_iccrea","historyId":"43c6e6f1884b3efb611eee04b5b6eb0c","time":{"start":1760427059690,"stop":1760427062773,"duration":3083},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider')\n    @allure.title('An RTP is sent to ICCREA service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.iccrea\n    def test_send_rtp_to_iccrea():\n        rtp_data = generate_rtp_data(payer_id=secrets.iccrea_activated_fiscal_code)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:143: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1760426534545,"stop":1760426534604,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider"},{"name":"tag","value":"iccrea"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2489-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":103,"broken":21,"skipped":0,"passed":20,"unknown":0,"total":144},"items":[{"uid":"229665fa03fdb4a9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/566//#testresult/229665fa03fdb4a9","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760340687763,"stop":1760340691584,"duration":3821}},{"uid":"b927e42c6435017b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/565//#testresult/b927e42c6435017b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760254076054,"stop":1760254079684,"duration":3630}},{"uid":"84127abbd9a77374","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/564//#testresult/84127abbd9a77374","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760167634750,"stop":1760167638082,"duration":3332}},{"uid":"67e47f31ca087488","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/563//#testresult/67e47f31ca087488","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760081349978,"stop":1760081353268,"duration":3290}},{"uid":"bff3f3032a619dec","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/562//#testresult/bff3f3032a619dec","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759994981195,"stop":1759994984749,"duration":3554}},{"uid":"748ac02ab70ff6dd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/561//#testresult/748ac02ab70ff6dd","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759929512523,"stop":1759929515840,"duration":3317}},{"uid":"5117ec3bdd43f5fc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/560//#testresult/5117ec3bdd43f5fc","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759921303454,"stop":1759921304227,"duration":773}},{"uid":"12263d10ced226b4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/559//#testresult/12263d10ced226b4","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759920070097,"stop":1759920070898,"duration":801}},{"uid":"796188aa6d06ff6b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/558//#testresult/796188aa6d06ff6b","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1759908352605,"stop":1759908353104,"duration":499}},{"uid":"5a152bb10f58606e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/557//#testresult/5a152bb10f58606e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759822165262,"stop":1759822168235,"duration":2973}},{"uid":"d6fb3bb37e2391d7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/556//#testresult/d6fb3bb37e2391d7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759735755001,"stop":1759735758900,"duration":3899}},{"uid":"123970674b47ec0d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/555//#testresult/123970674b47ec0d","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759650044761,"stop":1759650047895,"duration":3134}},{"uid":"c8022fe1f98e8c65","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/554//#testresult/c8022fe1f98e8c65","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759563711697,"stop":1759563714957,"duration":3260}},{"uid":"bbe5c569f40cac07","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/553//#testresult/bbe5c569f40cac07","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759484877626,"stop":1759484881245,"duration":3619}},{"uid":"bb990594f58d4ea0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/552//#testresult/bb990594f58d4ea0","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1759476837380,"stop":1759476837990,"duration":610}},{"uid":"31d746ffdef3c249","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/551//#testresult/31d746ffdef3c249","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759390829715,"stop":1759390832795,"duration":3080}},{"uid":"409e00765acc6ff2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/550//#testresult/409e00765acc6ff2","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759316230328,"stop":1759316232860,"duration":2532}},{"uid":"d70b23f9af82e918","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/549//#testresult/d70b23f9af82e918","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759303790251,"stop":1759303793612,"duration":3361}},{"uid":"c12bdcab0dacb9ff","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/548//#testresult/c12bdcab0dacb9ff","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759217375865,"stop":1759217378997,"duration":3132}},{"uid":"473bb3a44ef25d2f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/547//#testresult/473bb3a44ef25d2f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759130918948,"stop":1759130921496,"duration":2548}}]},"tags":["iccrea","real_integration","send","happy_path"]},"source":"533f46c4427c387f.json","parameterValues":[]}