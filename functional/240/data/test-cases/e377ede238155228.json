{"uid":"e377ede238155228","name":"A debtor is activated by an authenticated service provider","fullName":"tests.test_activation#test_activate_debtor","historyId":"ac494fa39e43ac7e7a23514069507895","time":{"start":1741849585915,"stop":1741849594617,"duration":8702},"status":"failed","statusMessage":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","statusTrace":"@allure.feature('Activation')\n    @allure.story('Debtor activation')\n    @allure.title('A debtor is activated by an authenticated service provider')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.happy_path\n    def test_activate_debtor():\n        access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                              client_secret=secrets.debtor_service_provider.client_secret,\n                                              access_token_function=get_access_token)\n        debtor_fc = fake_fc()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n>       assert res.status_code == 201, 'Error activating debtor'\nE       AssertionError: Error activating debtor\nE       assert 401 == 201\nE        +  where 401 = <Response [401]>.status_code\n\nfunctional-tests/tests/test_activation.py:29: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1741849585850,"stop":1741849585914,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Activation"},{"name":"story","value":"Debtor activation"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"fv-az2020-399"},{"name":"thread","value":"2269-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":24,"broken":0,"skipped":0,"passed":50,"unknown":0,"total":74},"items":[{"uid":"40381ec527d793bb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/239//#testresult/40381ec527d793bb","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1741763199491,"stop":1741763204870,"duration":5379}},{"uid":"b092a10c78c9b2f2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/238//#testresult/b092a10c78c9b2f2","status":"passed","time":{"start":1741705685325,"stop":1741705688174,"duration":2849}},{"uid":"9121719379683322","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/237//#testresult/9121719379683322","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1741676792464,"stop":1741676798681,"duration":6217}},{"uid":"b44182c8268bd631","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/236//#testresult/b44182c8268bd631","status":"passed","time":{"start":1741631437920,"stop":1741631440401,"duration":2481}},{"uid":"9574217e9fa3bd75","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/235//#testresult/9574217e9fa3bd75","status":"passed","time":{"start":1741628086741,"stop":1741628090203,"duration":3462}},{"uid":"d883a7a8c6e04c75","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/234//#testresult/d883a7a8c6e04c75","status":"passed","time":{"start":1741624709904,"stop":1741624715250,"duration":5346}},{"uid":"5f9ad91bd0661f92","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/233//#testresult/5f9ad91bd0661f92","status":"passed","time":{"start":1741603680774,"stop":1741603683603,"duration":2829}},{"uid":"b5b397b1d6985452","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/232//#testresult/b5b397b1d6985452","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1741590400439,"stop":1741590405050,"duration":4611}},{"uid":"10ee35ef8601a09e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/231//#testresult/10ee35ef8601a09e","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1741503935317,"stop":1741503940933,"duration":5616}},{"uid":"5b1adf4c2ca32f88","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/230//#testresult/5b1adf4c2ca32f88","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1741417519516,"stop":1741417523691,"duration":4175}},{"uid":"a628eaa929faf9bc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/229//#testresult/a628eaa929faf9bc","status":"passed","time":{"start":1741368319303,"stop":1741368321872,"duration":2569}},{"uid":"26af3633fdb54dfb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/228//#testresult/26af3633fdb54dfb","status":"passed","time":{"start":1741365915011,"stop":1741365917942,"duration":2931}},{"uid":"2dda53d88ceac321","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/227//#testresult/2dda53d88ceac321","status":"passed","time":{"start":1741364132960,"stop":1741364136304,"duration":3344}},{"uid":"38031e033415489","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/225//#testresult/38031e033415489","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1741331190497,"stop":1741331199595,"duration":9098}},{"uid":"269fc53e90f9a189","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/224//#testresult/269fc53e90f9a189","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1741244790351,"stop":1741244794942,"duration":4591}},{"uid":"e756ff39e79209ad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/223//#testresult/e756ff39e79209ad","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1741158377584,"stop":1741158382193,"duration":4609}},{"uid":"49304cd31704c300","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/222//#testresult/49304cd31704c300","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1741071993593,"stop":1741071997858,"duration":4265}},{"uid":"903b91ff24d5b3c7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/221//#testresult/903b91ff24d5b3c7","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1740985598864,"stop":1740985603608,"duration":4744}},{"uid":"5fd838c29dc75e5f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/220//#testresult/5fd838c29dc75e5f","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1740899134038,"stop":1740899138732,"duration":4694}},{"uid":"ea568c27bdadf96","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/219//#testresult/ea568c27bdadf96","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","time":{"start":1740812728840,"stop":1740812737032,"duration":8192}}]},"tags":["auth","activation","happy_path"]},"source":"e377ede238155228.json","parameterValues":[]}