{"uid":"c6958e29fc3e0952","name":"An RTP is sent to ICCREA service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_iccrea","historyId":"43c6e6f1884b3efb611eee04b5b6eb0c","time":{"start":1758007974795,"stop":1758007977924,"duration":3129},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider')\n    @allure.title('An RTP is sent to ICCREA service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.iccrea\n    def test_send_rtp_to_iccrea():\n        rtp_data = generate_rtp_data(payer_id=secrets.iccrea_activated_fiscal_code)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:143: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758007277154,"stop":1758007277210,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"iccrea"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2481-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":72,"broken":18,"skipped":0,"passed":20,"unknown":0,"total":110},"items":[{"uid":"d5d70386b31ecd80","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/532//#testresult/d5d70386b31ecd80","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757921599672,"stop":1757921602799,"duration":3127}},{"uid":"8936aaee64d3febb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/531//#testresult/8936aaee64d3febb","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757835161863,"stop":1757835165380,"duration":3517}},{"uid":"769a9d8a66759fe9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/530//#testresult/769a9d8a66759fe9","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757748804692,"stop":1757748807557,"duration":2865}},{"uid":"30e828e1bcc27774","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/529//#testresult/30e828e1bcc27774","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757666516367,"stop":1757666519553,"duration":3186}},{"uid":"abdd83b5ca3276bb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/528//#testresult/abdd83b5ca3276bb","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757661705979,"stop":1757661709386,"duration":3407}},{"uid":"d7d9c33ab53c82f4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/527//#testresult/d7d9c33ab53c82f4","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757598407179,"stop":1757598411179,"duration":4000}},{"uid":"6b13c8a4cf7753cd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/526//#testresult/6b13c8a4cf7753cd","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757575335016,"stop":1757575338047,"duration":3031}},{"uid":"59a617dda5334ceb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/525//#testresult/59a617dda5334ceb","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757489088377,"stop":1757489091172,"duration":2795}},{"uid":"505c6a5e3d5fb477","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/524//#testresult/505c6a5e3d5fb477","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757402563991,"stop":1757402567375,"duration":3384}},{"uid":"6af67b8e32b8b083","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/523//#testresult/6af67b8e32b8b083","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757316158248,"stop":1757316161548,"duration":3300}},{"uid":"aa2bc2c48dd40323","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/522//#testresult/aa2bc2c48dd40323","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757229706229,"stop":1757229709419,"duration":3190}},{"uid":"d289ca628adc5ca9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/521//#testresult/d289ca628adc5ca9","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757143271758,"stop":1757143274722,"duration":2964}},{"uid":"b37390ac75b3a830","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/520//#testresult/b37390ac75b3a830","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1757057143643,"stop":1757057144306,"duration":663}},{"uid":"ab32865ea53a74aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/519//#testresult/ab32865ea53a74aa","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756969690496,"stop":1756969693633,"duration":3137}},{"uid":"941cd43021e1ddd7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/518//#testresult/941cd43021e1ddd7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756910929458,"stop":1756910933173,"duration":3715}},{"uid":"c6a7758b607b7aeb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/517//#testresult/c6a7758b607b7aeb","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756883311589,"stop":1756883314748,"duration":3159}},{"uid":"d7d28d70feecd377","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/516//#testresult/d7d28d70feecd377","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756798032644,"stop":1756798035002,"duration":2358}},{"uid":"82920d3ea3e4df0e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/515//#testresult/82920d3ea3e4df0e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756796908588,"stop":1756796911262,"duration":2674}},{"uid":"e78900e4e2cc7bb7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/514//#testresult/e78900e4e2cc7bb7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756719647900,"stop":1756719651589,"duration":3689}},{"uid":"670ae45706153c8e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/513//#testresult/670ae45706153c8e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1756710595224,"stop":1756710598639,"duration":3415}}]},"tags":["iccrea","real_integration","send","happy_path"]},"source":"c6958e29fc3e0952.json","parameterValues":[]}