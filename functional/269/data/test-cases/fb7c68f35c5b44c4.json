{"uid":"fb7c68f35c5b44c4","name":"Cannot send RTP with invalid amount","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi_invalid_amount","historyId":"3a2d68c98ccbf254d83aa6a209f2af2f","time":{"start":1743755303445,"stop":1743755304641,"duration":1196},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with invalid amount')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_invalid_amount():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['amount'] = -1\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:54: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1743755289366,"stop":1743755289427,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1624-565"},{"name":"thread","value":"2372-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":42,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":43},"items":[{"uid":"81142871eb2de72","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/268//#testresult/81142871eb2de72","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743754340560,"stop":1743754342267,"duration":1707}},{"uid":"7a74579c7781dc35","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/267//#testresult/7a74579c7781dc35","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743750402363,"stop":1743750404012,"duration":1649}},{"uid":"686960e13ac05e3b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/266//#testresult/686960e13ac05e3b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743664020663,"stop":1743664022353,"duration":1690}},{"uid":"c4d09b883ff1d099","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/265//#testresult/c4d09b883ff1d099","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743577627204,"stop":1743577628875,"duration":1671}},{"uid":"e545c36205f000df","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/264//#testresult/e545c36205f000df","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743523473503,"stop":1743523474835,"duration":1332}},{"uid":"988987e17c98590b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/263//#testresult/988987e17c98590b","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743521037651,"stop":1743521039652,"duration":2001}},{"uid":"e8eb7849db0c40c1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/262//#testresult/e8eb7849db0c40c1","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743491221720,"stop":1743491223124,"duration":1404}},{"uid":"6fc792a4c82ccced","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/261//#testresult/6fc792a4c82ccced","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743404835159,"stop":1743404836611,"duration":1452}},{"uid":"e91d3622f5d2e36","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/260//#testresult/e91d3622f5d2e36","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743318393133,"stop":1743318394502,"duration":1369}},{"uid":"c864d538011b333c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/259//#testresult/c864d538011b333c","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743231999345,"stop":1743232001451,"duration":2106}},{"uid":"4f9eb0ff9d04b39c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/258//#testresult/4f9eb0ff9d04b39c","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743145629183,"stop":1743145630656,"duration":1473}},{"uid":"d61d12341b2aa4c2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/257//#testresult/d61d12341b2aa4c2","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743059222490,"stop":1743059224386,"duration":1896}},{"uid":"64c75a47c4acb9ca","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/256//#testresult/64c75a47c4acb9ca","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742972815899,"stop":1742972817665,"duration":1766}},{"uid":"25f35db71ab48bfc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/255//#testresult/25f35db71ab48bfc","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742886426029,"stop":1742886427839,"duration":1810}},{"uid":"6db939a4cc02d21c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/254//#testresult/6db939a4cc02d21c","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742800026787,"stop":1742800028295,"duration":1508}},{"uid":"19042ab15de24301","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/253//#testresult/19042ab15de24301","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742713598501,"stop":1742713600308,"duration":1807}},{"uid":"60eda946f158a2ec","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/252//#testresult/60eda946f158a2ec","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742627181744,"stop":1742627183154,"duration":1410}},{"uid":"a22437cd843e31ee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/251//#testresult/a22437cd843e31ee","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742576849245,"stop":1742576850598,"duration":1353}},{"uid":"c928b326021274c6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/250//#testresult/c928b326021274c6","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742540798132,"stop":1742540799443,"duration":1311}},{"uid":"f9cb5d1499c565af","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/249//#testresult/f9cb5d1499c565af","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742454395349,"stop":1742454396579,"duration":1230}}]},"tags":["cbi","unhappy_path","send"]},"source":"fb7c68f35c5b44c4.json","parameterValues":[]}