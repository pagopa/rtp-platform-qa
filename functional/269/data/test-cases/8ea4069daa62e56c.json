{"uid":"8ea4069daa62e56c","name":"Cannot send RTP with expired date","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi_expired_date","historyId":"af763254cdd5d120d914e8ce75139912","time":{"start":1743755304645,"stop":1743755306485,"duration":1840},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with expired date')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_expired_date():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['expiryDate'] = '2020-01-01'\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:76: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1743755289366,"stop":1743755289427,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1624-565"},{"name":"thread","value":"2372-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":42,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":43},"items":[{"uid":"1fc01e4c3cc80cb7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/268//#testresult/1fc01e4c3cc80cb7","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743754342270,"stop":1743754344351,"duration":2081}},{"uid":"f233f3e7b2b41472","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/267//#testresult/f233f3e7b2b41472","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743750404016,"stop":1743750408891,"duration":4875}},{"uid":"979d47621caaa20e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/266//#testresult/979d47621caaa20e","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743664022357,"stop":1743664024853,"duration":2496}},{"uid":"8d7b7c34859e6d98","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/265//#testresult/8d7b7c34859e6d98","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743577628879,"stop":1743577630383,"duration":1504}},{"uid":"6fc34233962cb432","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/264//#testresult/6fc34233962cb432","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743523474840,"stop":1743523475921,"duration":1081}},{"uid":"f197e98aaff958a2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/263//#testresult/f197e98aaff958a2","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743521039656,"stop":1743521041177,"duration":1521}},{"uid":"82a2948c6cf3e73a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/262//#testresult/82a2948c6cf3e73a","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743491223128,"stop":1743491224528,"duration":1400}},{"uid":"90eb1f064aae55e4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/261//#testresult/90eb1f064aae55e4","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743404836615,"stop":1743404837937,"duration":1322}},{"uid":"d351653f222b295","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/260//#testresult/d351653f222b295","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743318394506,"stop":1743318395824,"duration":1318}},{"uid":"42c2fd0ed5c1b879","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/259//#testresult/42c2fd0ed5c1b879","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743232001455,"stop":1743232003103,"duration":1648}},{"uid":"3bcef01471c612c6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/258//#testresult/3bcef01471c612c6","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743145630660,"stop":1743145632695,"duration":2035}},{"uid":"4c102380498598ec","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/257//#testresult/4c102380498598ec","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1743059224390,"stop":1743059225832,"duration":1442}},{"uid":"b3329eecbf5a0ba9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/256//#testresult/b3329eecbf5a0ba9","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742972817669,"stop":1742972819327,"duration":1658}},{"uid":"ca967ef0c80c48ad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/255//#testresult/ca967ef0c80c48ad","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742886427843,"stop":1742886429628,"duration":1785}},{"uid":"6d59152331b34d78","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/254//#testresult/6d59152331b34d78","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742800028299,"stop":1742800030289,"duration":1990}},{"uid":"f44601ac08864dcc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/253//#testresult/f44601ac08864dcc","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742713600312,"stop":1742713602164,"duration":1852}},{"uid":"e193c472d0f89474","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/252//#testresult/e193c472d0f89474","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742627183158,"stop":1742627184289,"duration":1131}},{"uid":"2dc4d49985c14201","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/251//#testresult/2dc4d49985c14201","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742576850602,"stop":1742576851764,"duration":1162}},{"uid":"5ade82c498402ddb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/250//#testresult/5ade82c498402ddb","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742540799447,"stop":1742540800813,"duration":1366}},{"uid":"fbe8d83d0fe69eab","reportUrl":"https://pagopa.github.io/rtp-platform-qa/functional/249//#testresult/fbe8d83d0fe69eab","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1742454396583,"stop":1742454397494,"duration":911}}]},"tags":["cbi","unhappy_path","send"]},"source":"8ea4069daa62e56c.json","parameterValues":[]}