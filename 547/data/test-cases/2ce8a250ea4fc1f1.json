{"uid":"2ce8a250ea4fc1f1","name":"Happy path: a debt position is created and published in UAT environment","fullName":"tests.test_debt_position_create_delete#test_create_debt_position","historyId":"560cd48548f7efc1497a0fc78e7ba901","time":{"start":1759130572145,"stop":1759130572505,"duration":360},"description":"\nVerify that after creating and publishing a debt position,\nthe RTP lookup returns exactly one entry for the notice number.\n","descriptionHtml":"<p>Verify that after creating and publishing a debt position,<br />\nthe RTP lookup returns exactly one entry for the notice number.</p>\n","status":"failed","statusMessage":"AssertionError: Expected 201 but got 502\nassert 502 == 201\n +  where 502 = <Response [502]>.status_code","statusTrace":"setup_data = {'debtor_fc': 'BRGVNN30T16X000K', 'iupd': '3e3de2f5019a4887b', 'iuv': '41811781711537488', 'organization_id': '02438750586', ...}\nenvironment = {'create_function': <function environment.<locals>.<lambda> at 0x7fe6e8249760>, 'delete_function': <function environme...> at 0x7fe6e82498a0>, 'get_function': <function environment.<locals>.<lambda> at 0x7fe6e8249800>, 'is_dev': False, ...}\n\n    @allure.feature('Debt Positions')\n    @allure.story('Create Debt Position')\n    @pytest.mark.debt_positions\n    @pytest.mark.happy_path\n    @pytest.mark.timeout(TEST_TIMEOUT_SEC)\n    def test_create_debt_position(setup_data, environment):\n        \"\"\"\n        Verify that after creating and publishing a debt position,\n        the RTP lookup returns exactly one entry for the notice number.\n        \"\"\"\n        allure.dynamic.title(f\"Happy path: a debt position is created and published in {environment['name']} environment\")\n    \n        subscription_key = setup_data['subscription_key']\n        organization_id = setup_data['organization_id']\n        debtor_fc = setup_data['debtor_fc']\n        iupd = setup_data['iupd']\n        iuv = setup_data['iuv']\n    \n        payload = create_debt_position_payload(debtor_fc=debtor_fc, iupd=iupd, iuv=iuv)\n    \n        create_function = environment['create_function']\n    \n        res = create_function(subscription_key, organization_id, payload, to_publish=True)\n>       assert res.status_code == 201, f'Expected 201 but got {res.status_code}'\nE       AssertionError: Expected 201 but got 502\nE       assert 502 == 201\nE        +  where 502 = <Response [502]>.status_code\n\nfunctional-tests/tests/test_debt_position_create_delete.py:108: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759130537816,"stop":1759130537875,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"environment","time":{"start":1759130571397,"stop":1759130571397,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_data","time":{"start":1759130571397,"stop":1759130572144,"duration":747},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Debt Positions"},{"name":"story","value":"Create Debt Position"},{"name":"tag","value":"timeout(300)"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"debt_positions"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debt_position_create_delete"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2574-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debt_position_create_delete"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"environment","value":"{'name': 'UAT', 'is_dev': False, 'create_function': <function environment.<locals>.<lambda> at 0x7fe6e8249760>, 'get_function': <function environment.<locals>.<lambda> at 0x7fe6e8249800>, 'delete_function': <function environment.<locals>.<lambda> at 0x7fe6e82498a0>, 'update_function': <function environment.<locals>.<lambda> at 0x7fe6e8249940>, 'subscription_key': 'fceef49eb5874c1fa60e488724cddc58', 'organization_id': '02438750586'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["debt_positions","timeout(300)","happy_path"]},"source":"2ce8a250ea4fc1f1.json","parameterValues":["{'name': 'UAT', 'is_dev': False, 'create_function': <function environment.<locals>.<lambda> at 0x7fe6e8249760>, 'get_function': <function environment.<locals>.<lambda> at 0x7fe6e8249800>, 'delete_function': <function environment.<locals>.<lambda> at 0x7fe6e82498a0>, 'update_function': <function environment.<locals>.<lambda> at 0x7fe6e8249940>, 'subscription_key': 'fceef49eb5874c1fa60e488724cddc58', 'organization_id': '02438750586'}"]}