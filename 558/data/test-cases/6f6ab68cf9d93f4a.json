{"uid":"6f6ab68cf9d93f4a","name":"Send two GPD messages with timestamps T1 and T1-T2","fullName":"tests.test_producer_gpd_message#test_send_producer_gpd_messages_with_timestamps","historyId":"0ded6b2d942d277aea90826219f9cec9","time":{"start":1759908349463,"stop":1759908349982,"duration":519},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('GPD Message')\n    @allure.story('Send GPD message to queue')\n    @allure.title('Send two GPD messages with timestamps T1 and T1-T2')\n    @pytest.mark.producer_gpd_message\n    @pytest.mark.happy_path\n    def test_send_producer_gpd_messages_with_timestamps():\n>       debtor_fc = activate_new_debtor()\n\nfunctional-tests/tests/test_producer_gpd_message.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/producer_gpd_utils.py:174: in activate_new_debtor\n    return activate_debtor(fiscal_code)\nutils/producer_gpd_utils.py:145: in activate_debtor\n    debtor_service_provider_token = get_valid_access_token(\napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759908023720,"stop":1759908023771,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('GPD Message')\n    @allure.story('Send GPD message to queue')\n    @allure.title('Send two GPD messages with timestamps T1 and T1-T2')\n    @pytest.mark.producer_gpd_message\n    @pytest.mark.happy_path\n    def test_send_producer_gpd_messages_with_timestamps():\n>       debtor_fc = activate_new_debtor()\n\nfunctional-tests/tests/test_producer_gpd_message.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/producer_gpd_utils.py:174: in activate_new_debtor\n    return activate_debtor(fiscal_code)\nutils/producer_gpd_utils.py:145: in activate_debtor\n    debtor_service_provider_token = get_valid_access_token(\napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","steps":[],"attachments":[{"uid":"c785422961fca10d","name":"stdout","source":"c785422961fca10d.txt","type":"text/plain","size":44}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"story","value":"Send GPD message to queue"},{"name":"feature","value":"GPD Message"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"producer_gpd_message"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_producer_gpd_message"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2588-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_producer_gpd_message"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":4,"skipped":0,"passed":0,"unknown":0,"total":9},"items":[{"uid":"e92e92461f82f42d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/557//#testresult/e92e92461f82f42d","status":"failed","statusDetails":"Failed: Failed to send first message after 3 attempts","time":{"start":1759822126823,"stop":1759822137680,"duration":10857}},{"uid":"fea66af0c5cd7453","reportUrl":"https://pagopa.github.io/rtp-platform-qa/556//#testresult/fea66af0c5cd7453","status":"failed","statusDetails":"Failed: Failed to send first message after 3 attempts","time":{"start":1759735710653,"stop":1759735721887,"duration":11234}},{"uid":"400edde32871fdb2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/555//#testresult/400edde32871fdb2","status":"failed","statusDetails":"Failed: Failed to send first message after 3 attempts","time":{"start":1759650005769,"stop":1759650016559,"duration":10790}},{"uid":"54316b27a944f5b3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/554//#testresult/54316b27a944f5b3","status":"failed","statusDetails":"Failed: Failed to send first message after 3 attempts","time":{"start":1759563668610,"stop":1759563679896,"duration":11286}},{"uid":"946ed9b177f449dd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/553//#testresult/946ed9b177f449dd","status":"failed","statusDetails":"Failed: Failed to send first message after 3 attempts","time":{"start":1759484832974,"stop":1759484844253,"duration":11279}},{"uid":"151d19b96e4e2590","reportUrl":"https://pagopa.github.io/rtp-platform-qa/552//#testresult/151d19b96e4e2590","status":"broken","statusDetails":"requests.exceptions.ConnectionError: HTTPConnectionPool(host='qa.internal.uat.cstar.pagopa.it', port=80): Max retries exceeded with url: /send/gpd/message (Caused by NameResolutionError(\"<urllib3.connection.HTTPConnection object at 0x7f818d353b10>: Failed to resolve 'qa.internal.uat.cstar.pagopa.it' ([Errno -2] Name or service not known)\"))","time":{"start":1759476825310,"stop":1759476835371,"duration":10061}},{"uid":"469c765d8121bb0f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/551//#testresult/469c765d8121bb0f","status":"broken","statusDetails":"requests.exceptions.ConnectionError: HTTPConnectionPool(host='qa.internal.uat.cstar.pagopa.it', port=80): Max retries exceeded with url: /send/gpd/message (Caused by NameResolutionError(\"<urllib3.connection.HTTPConnection object at 0x7f93b9230550>: Failed to resolve 'qa.internal.uat.cstar.pagopa.it' ([Errno -2] Name or service not known)\"))","time":{"start":1759390813342,"stop":1759390823382,"duration":10040}},{"uid":"bc8ef5bf2af29927","reportUrl":"https://pagopa.github.io/rtp-platform-qa/550//#testresult/bc8ef5bf2af29927","status":"broken","statusDetails":"requests.exceptions.ConnectionError: HTTPConnectionPool(host='qa.internal.uat.cstar.pagopa.it', port=80): Max retries exceeded with url: /send/gpd/message (Caused by NameResolutionError(\"<urllib3.connection.HTTPConnection object at 0x7f279ccbae90>: Failed to resolve 'qa.internal.uat.cstar.pagopa.it' ([Errno -2] Name or service not known)\"))","time":{"start":1759316214017,"stop":1759316224045,"duration":10028}}]},"tags":["producer_gpd_message","happy_path"]},"source":"6f6ab68cf9d93f4a.json","parameterValues":[]}