{"uid":"fc109419377b1262","name":"An RTP callback is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback_DS_08N_compliant","historyId":"d5748ad5568cbf463a334911f922c3be","time":{"start":1759908046318,"stop":1759908050077,"duration":3759},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('An RTP callback is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback_DS_08N_compliant():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        rtp_reader_access_token = get_valid_access_token(\n            client_id=secrets.rtp_reader.client_id,\n            client_secret=secrets.rtp_reader.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        activation_response = activate(\n            debtor_service_provider_access_token,\n            rtp_data['payer']['payerId'],\n            secrets.debtor_service_provider.service_provider_id,\n        )\n    \n        assert activation_response.status_code == 201\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_callback.py:115: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759908023720,"stop":1759908023771,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2588-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":53,"broken":18,"skipped":0,"passed":31,"unknown":0,"total":102},"items":[{"uid":"edbf22e4d7b4ea63","reportUrl":"https://pagopa.github.io/rtp-platform-qa/557//#testresult/edbf22e4d7b4ea63","status":"passed","time":{"start":1759821681238,"stop":1759821684565,"duration":3327}},{"uid":"5a1a46e6bf5f17e9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/556//#testresult/5a1a46e6bf5f17e9","status":"passed","time":{"start":1759735329787,"stop":1759735334595,"duration":4808}},{"uid":"a9d38a1925dc5cc3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/555//#testresult/a9d38a1925dc5cc3","status":"passed","time":{"start":1759648710123,"stop":1759648713403,"duration":3280}},{"uid":"510c24650aa3fdd5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/554//#testresult/510c24650aa3fdd5","status":"passed","time":{"start":1759562347746,"stop":1759562352477,"duration":4731}},{"uid":"43964ea0eeb44214","reportUrl":"https://pagopa.github.io/rtp-platform-qa/553//#testresult/43964ea0eeb44214","status":"passed","time":{"start":1759483549010,"stop":1759483553789,"duration":4779}},{"uid":"e2019e10d11d0a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/552//#testresult/e2019e10d11d0a","status":"passed","time":{"start":1759476026984,"stop":1759476031460,"duration":4476}},{"uid":"64f5cbce36704653","reportUrl":"https://pagopa.github.io/rtp-platform-qa/551//#testresult/64f5cbce36704653","status":"passed","time":{"start":1759389605480,"stop":1759389608508,"duration":3028}},{"uid":"68ac3e451042c50f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/550//#testresult/68ac3e451042c50f","status":"passed","time":{"start":1759315759274,"stop":1759315762491,"duration":3217}},{"uid":"67d999bbc786f2f5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/549//#testresult/67d999bbc786f2f5","status":"passed","time":{"start":1759303335269,"stop":1759303338624,"duration":3355}},{"uid":"c9ffb56f314d3270","reportUrl":"https://pagopa.github.io/rtp-platform-qa/548//#testresult/c9ffb56f314d3270","status":"passed","time":{"start":1759216942145,"stop":1759216945921,"duration":3776}},{"uid":"1c073d88ab0efcb1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/547//#testresult/1c073d88ab0efcb1","status":"passed","time":{"start":1759130556693,"stop":1759130559862,"duration":3169}},{"uid":"c43c6a7314351925","reportUrl":"https://pagopa.github.io/rtp-platform-qa/546//#testresult/c43c6a7314351925","status":"passed","time":{"start":1759043955615,"stop":1759043960275,"duration":4660}},{"uid":"a60d9f5f4a517c7c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/545//#testresult/a60d9f5f4a517c7c","status":"passed","time":{"start":1758957523804,"stop":1758957527013,"duration":3209}},{"uid":"3c8d601bb5d41af9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/544//#testresult/3c8d601bb5d41af9","status":"passed","time":{"start":1758871277891,"stop":1758871282759,"duration":4868}},{"uid":"e728c9b9d76c89cf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/543//#testresult/e728c9b9d76c89cf","status":"passed","time":{"start":1758784895949,"stop":1758784899103,"duration":3154}},{"uid":"eb3fa9d5b34f8ced","reportUrl":"https://pagopa.github.io/rtp-platform-qa/542//#testresult/eb3fa9d5b34f8ced","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1758698490960,"stop":1758698494100,"duration":3140}},{"uid":"2fe3b99dd0572787","reportUrl":"https://pagopa.github.io/rtp-platform-qa/541//#testresult/2fe3b99dd0572787","status":"passed","time":{"start":1758612118850,"stop":1758612123335,"duration":4485}},{"uid":"2d77fd54e211ed92","reportUrl":"https://pagopa.github.io/rtp-platform-qa/540//#testresult/2d77fd54e211ed92","status":"passed","time":{"start":1758525781555,"stop":1758525786360,"duration":4805}},{"uid":"f4d5f996b1bc158a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/539//#testresult/f4d5f996b1bc158a","status":"passed","time":{"start":1758439128060,"stop":1758439132487,"duration":4427}},{"uid":"2a28fffedd056847","reportUrl":"https://pagopa.github.io/rtp-platform-qa/538//#testresult/2a28fffedd056847","status":"passed","time":{"start":1758352786134,"stop":1758352790773,"duration":4639}}]},"tags":["callback","happy_path"]},"source":"fc109419377b1262.json","parameterValues":[]}