{"uid":"c4d03bb7f2e5c902","name":"inexistent RTP -> empty body","fullName":"tests.test_get_rtp#test_get_rtp_not_found","historyId":"f374baeb8e6aa77fbe08e6036a22e13b","time":{"start":1759908345690,"stop":1759908346212,"duration":522},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Get')\n    @allure.story('Service provider retrieves an RTP')\n    @allure.title('inexistent RTP -> empty body')\n    @pytest.mark.get\n    @pytest.mark.unhappy_path\n    def test_get_rtp_not_found():\n        fake_rtp_id = str(uuid.uuid4())\n    \n>       token = get_valid_access_token(\n            client_id=secrets.rtp_reader.client_id,\n            client_secret=secrets.rtp_reader.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_get_rtp.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759908023720,"stop":1759908023771,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Get"},{"name":"story","value":"Service provider retrieves an RTP"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2588-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":51,"broken":20,"skipped":0,"passed":93,"unknown":0,"total":164},"items":[{"uid":"557bd86b44067f70","reportUrl":"https://pagopa.github.io/rtp-platform-qa/557//#testresult/557bd86b44067f70","status":"passed","time":{"start":1759822122325,"stop":1759822123046,"duration":721}},{"uid":"c9a26cb163c074e0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/556//#testresult/c9a26cb163c074e0","status":"passed","time":{"start":1759735703853,"stop":1759735705082,"duration":1229}},{"uid":"a0c157a00b319ed4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/555//#testresult/a0c157a00b319ed4","status":"passed","time":{"start":1759649964725,"stop":1759649965468,"duration":743}},{"uid":"d105b4f3e32db3fc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/554//#testresult/d105b4f3e32db3fc","status":"passed","time":{"start":1759563619174,"stop":1759563620401,"duration":1227}},{"uid":"3d30619bcee17601","reportUrl":"https://pagopa.github.io/rtp-platform-qa/553//#testresult/3d30619bcee17601","status":"passed","time":{"start":1759484825609,"stop":1759484826863,"duration":1254}},{"uid":"832bd881664ee406","reportUrl":"https://pagopa.github.io/rtp-platform-qa/552//#testresult/832bd881664ee406","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1759476820965,"stop":1759476821542,"duration":577}},{"uid":"fa288d5e89c0f089","reportUrl":"https://pagopa.github.io/rtp-platform-qa/551//#testresult/fa288d5e89c0f089","status":"passed","time":{"start":1759390808276,"stop":1759390809035,"duration":759}},{"uid":"ad450a8cbb4d345a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/550//#testresult/ad450a8cbb4d345a","status":"passed","time":{"start":1759316208639,"stop":1759316209464,"duration":825}},{"uid":"a09abf2264c7d898","reportUrl":"https://pagopa.github.io/rtp-platform-qa/549//#testresult/a09abf2264c7d898","status":"passed","time":{"start":1759303779393,"stop":1759303780135,"duration":742}},{"uid":"17fb52bf9084a2f0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/548//#testresult/17fb52bf9084a2f0","status":"passed","time":{"start":1759217364034,"stop":1759217364903,"duration":869}},{"uid":"4b3ed27bebe23ced","reportUrl":"https://pagopa.github.io/rtp-platform-qa/547//#testresult/4b3ed27bebe23ced","status":"passed","time":{"start":1759130908521,"stop":1759130909251,"duration":730}},{"uid":"5e9670037ca08dac","reportUrl":"https://pagopa.github.io/rtp-platform-qa/546//#testresult/5e9670037ca08dac","status":"passed","time":{"start":1759044357726,"stop":1759044358919,"duration":1193}},{"uid":"e6e3e29046fd4864","reportUrl":"https://pagopa.github.io/rtp-platform-qa/545//#testresult/e6e3e29046fd4864","status":"passed","time":{"start":1758957725492,"stop":1758957726300,"duration":808}},{"uid":"57af91114b6c272b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/544//#testresult/57af91114b6c272b","status":"passed","time":{"start":1758872008145,"stop":1758872009372,"duration":1227}},{"uid":"70f1f9d055aec49a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/543//#testresult/70f1f9d055aec49a","status":"passed","time":{"start":1758786152868,"stop":1758786153637,"duration":769}},{"uid":"75858db017ef82b0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/542//#testresult/75858db017ef82b0","status":"passed","time":{"start":1758699757500,"stop":1758699758660,"duration":1160}},{"uid":"84b0aaa523dd9950","reportUrl":"https://pagopa.github.io/rtp-platform-qa/541//#testresult/84b0aaa523dd9950","status":"passed","time":{"start":1758612580767,"stop":1758612581900,"duration":1133}},{"uid":"79703be04d481ab6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/540//#testresult/79703be04d481ab6","status":"passed","time":{"start":1758526245691,"stop":1758526246934,"duration":1243}},{"uid":"786d13dcb6e2423a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/539//#testresult/786d13dcb6e2423a","status":"passed","time":{"start":1758439588100,"stop":1758439589244,"duration":1144}},{"uid":"693a68c233a6c03b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/538//#testresult/693a68c233a6c03b","status":"passed","time":{"start":1758353246990,"stop":1758353248198,"duration":1208}}]},"tags":["get","unhappy_path"]},"source":"c4d03bb7f2e5c902.json","parameterValues":[]}