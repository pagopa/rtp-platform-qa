{"uid":"a279e83d7dbc0e52","name":"An RTP is sent through API","fullName":"tests.test_send_rtp#test_send_rtp_api","historyId":"6c14d2fbb180e49a106680915fe95577","time":{"start":1759908351037,"stop":1759908351531,"duration":494},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('An RTP is sent through API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    def test_send_rtp_api():\n        rtp_data = generate_rtp_data()\n    \n>       debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_send_rtp.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759908023720,"stop":1759908023771,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2588-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":27,"broken":20,"skipped":0,"passed":242,"unknown":0,"total":289},"items":[{"uid":"ea59737797767c0f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/557//#testresult/ea59737797767c0f","status":"passed","time":{"start":1759822159896,"stop":1759822161384,"duration":1488}},{"uid":"334da06529b06c47","reportUrl":"https://pagopa.github.io/rtp-platform-qa/556//#testresult/334da06529b06c47","status":"passed","time":{"start":1759735745897,"stop":1759735748459,"duration":2562}},{"uid":"a2946cc987242ef2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/555//#testresult/a2946cc987242ef2","status":"passed","time":{"start":1759650038867,"stop":1759650040492,"duration":1625}},{"uid":"e15dbec746d4ebaa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/554//#testresult/e15dbec746d4ebaa","status":"passed","time":{"start":1759563703633,"stop":1759563706179,"duration":2546}},{"uid":"c8ff4e18a3b70071","reportUrl":"https://pagopa.github.io/rtp-platform-qa/553//#testresult/c8ff4e18a3b70071","status":"passed","time":{"start":1759484868078,"stop":1759484870672,"duration":2594}},{"uid":"d633208e3c81d975","reportUrl":"https://pagopa.github.io/rtp-platform-qa/552//#testresult/d633208e3c81d975","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1759476835538,"stop":1759476836140,"duration":602}},{"uid":"6e1f6cd13de12253","reportUrl":"https://pagopa.github.io/rtp-platform-qa/551//#testresult/6e1f6cd13de12253","status":"passed","time":{"start":1759390823571,"stop":1759390825206,"duration":1635}},{"uid":"de9f125aef3cf60f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/550//#testresult/de9f125aef3cf60f","status":"passed","time":{"start":1759316224208,"stop":1759316225992,"duration":1784}},{"uid":"8c8773c3e9e22ad4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/549//#testresult/8c8773c3e9e22ad4","status":"passed","time":{"start":1759303784043,"stop":1759303785634,"duration":1591}},{"uid":"7dee725d3e9aaa3a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/548//#testresult/7dee725d3e9aaa3a","status":"passed","time":{"start":1759217369576,"stop":1759217371485,"duration":1909}},{"uid":"2e0574487fc67431","reportUrl":"https://pagopa.github.io/rtp-platform-qa/547//#testresult/2e0574487fc67431","status":"passed","time":{"start":1759130913268,"stop":1759130914874,"duration":1606}},{"uid":"50f927437e9982ba","reportUrl":"https://pagopa.github.io/rtp-platform-qa/546//#testresult/50f927437e9982ba","status":"passed","time":{"start":1759044364474,"stop":1759044366977,"duration":2503}},{"uid":"94e2f0cacff9f062","reportUrl":"https://pagopa.github.io/rtp-platform-qa/545//#testresult/94e2f0cacff9f062","status":"passed","time":{"start":1758957730474,"stop":1758957732096,"duration":1622}},{"uid":"16b45d3677b7e04c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/544//#testresult/16b45d3677b7e04c","status":"passed","time":{"start":1758872015972,"stop":1758872018578,"duration":2606}},{"uid":"d00286261b4cc62f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/543//#testresult/d00286261b4cc62f","status":"passed","time":{"start":1758786157971,"stop":1758786159561,"duration":1590}},{"uid":"a9738db2b4fb17a8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/542//#testresult/a9738db2b4fb17a8","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1758699764612,"stop":1758699766815,"duration":2203}},{"uid":"ea8c8c3c47987420","reportUrl":"https://pagopa.github.io/rtp-platform-qa/541//#testresult/ea8c8c3c47987420","status":"passed","time":{"start":1758612587900,"stop":1758612590295,"duration":2395}},{"uid":"1e0cd31a59e5fab5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/540//#testresult/1e0cd31a59e5fab5","status":"passed","time":{"start":1758526252958,"stop":1758526255543,"duration":2585}},{"uid":"d5bbaf8994328f3e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/539//#testresult/d5bbaf8994328f3e","status":"passed","time":{"start":1758439595219,"stop":1758439597601,"duration":2382}},{"uid":"144f07edf01683ac","reportUrl":"https://pagopa.github.io/rtp-platform-qa/538//#testresult/144f07edf01683ac","status":"passed","time":{"start":1758353254320,"stop":1758353256920,"duration":2600}}]},"tags":["send","happy_path"]},"source":"a279e83d7dbc0e52.json","parameterValues":[]}