{"uid":"8549b8a218cbfd7b","name":"A debtor is activated by an authenticated service provider","fullName":"tests.test_activation#test_activate_debtor","historyId":"ac494fa39e43ac7e7a23514069507895","time":{"start":1743836763386,"stop":1743836796170,"duration":32784},"status":"broken","statusMessage":"TypeError: strptime() argument 1 must be str, not list","statusTrace":"@allure.feature('Activation')\n    @allure.story('Debtor activation')\n    @allure.title('A debtor is activated by an authenticated service provider')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.happy_path\n    def test_activate_debtor():\n        access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                              client_secret=secrets.debtor_service_provider.client_secret,\n                                              access_token_function=get_access_token)\n        debtor_fc = fake_fc()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, 'Error activating debtor'\n    \n        location = res.headers['Location']\n        location_split = location.split('/')\n    \n        assert '/'.join(location_split[:-1]) == config.activation_base_url_path + config.activation_path\n        assert bool(uuidv4_pattern.fullmatch(location_split[-1]))\n    \n        res = get_activation_by_payer_id(access_token, debtor_fc)\n        assert res.status_code == 200\n        assert res.json()['payer']['fiscalCode'] == debtor_fc\n        assert res.json()['payer']['rtpSpId'] == secrets.debtor_service_provider.service_provider_id\n        assert bool(uuidv4_pattern.fullmatch(res.json()['id']))\n    \n        try:\n>           datetime.strptime(res.json()['effectiveActivationDate'], '%Y-%m-%dT%H:%M:%S.%f')\nE           TypeError: strptime() argument 1 must be str, not list\n\nfunctional-tests/tests/test_activation.py:44: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1743836763328,"stop":1743836763385,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Debtor activation"},{"name":"feature","value":"Activation"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"fv-az1695-570"},{"name":"thread","value":"2335-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":4,"skipped":0,"passed":27,"unknown":0,"total":40},"items":[{"uid":"fc50c954e6b2e645","reportUrl":"https://pagopa.github.io/rtp-platform-qa/269//#testresult/fc50c954e6b2e645","status":"broken","statusDetails":"TypeError: strptime() argument 1 must be str, not list","time":{"start":1743755289427,"stop":1743755291006,"duration":1579}},{"uid":"c17fe5d3945ab698","reportUrl":"https://pagopa.github.io/rtp-platform-qa/268//#testresult/c17fe5d3945ab698","status":"broken","statusDetails":"TypeError: strptime() argument 1 must be str, not list","time":{"start":1743754323183,"stop":1743754325580,"duration":2397}},{"uid":"e85939e23ee209f9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/267//#testresult/e85939e23ee209f9","status":"broken","statusDetails":"TypeError: strptime() argument 1 must be str, not list","time":{"start":1743750390252,"stop":1743750393130,"duration":2878}},{"uid":"964d199483a96707","reportUrl":"https://pagopa.github.io/rtp-platform-qa/266//#testresult/964d199483a96707","status":"passed","time":{"start":1743664009052,"stop":1743664011721,"duration":2669}},{"uid":"878e60cadff49741","reportUrl":"https://pagopa.github.io/rtp-platform-qa/265//#testresult/878e60cadff49741","status":"passed","time":{"start":1743577611799,"stop":1743577620236,"duration":8437}},{"uid":"a86c8dacd1dfe803","reportUrl":"https://pagopa.github.io/rtp-platform-qa/262//#testresult/a86c8dacd1dfe803","status":"passed","time":{"start":1743491213328,"stop":1743491215448,"duration":2120}},{"uid":"fa959fbfb236274b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/261//#testresult/fa959fbfb236274b","status":"passed","time":{"start":1743404825217,"stop":1743404828519,"duration":3302}},{"uid":"9cb92d777977d4c1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/260//#testresult/9cb92d777977d4c1","status":"passed","time":{"start":1743318339799,"stop":1743318386757,"duration":46958}},{"uid":"5d4cfd6000b9a7fb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/259//#testresult/5d4cfd6000b9a7fb","status":"passed","time":{"start":1743231946504,"stop":1743231986073,"duration":39569}},{"uid":"75157c5d7ee073d4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/258//#testresult/75157c5d7ee073d4","status":"passed","time":{"start":1743145609651,"stop":1743145619282,"duration":9631}},{"uid":"7e61e84cc2fa2557","reportUrl":"https://pagopa.github.io/rtp-platform-qa/257//#testresult/7e61e84cc2fa2557","status":"passed","time":{"start":1743059204301,"stop":1743059212996,"duration":8695}},{"uid":"28be4092d18df7a8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/256//#testresult/28be4092d18df7a8","status":"passed","time":{"start":1742972799337,"stop":1742972807627,"duration":8290}},{"uid":"7962a7e20148851b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/255//#testresult/7962a7e20148851b","status":"passed","time":{"start":1742886407622,"stop":1742886416464,"duration":8842}},{"uid":"423557d8cf458064","reportUrl":"https://pagopa.github.io/rtp-platform-qa/254//#testresult/423557d8cf458064","status":"passed","time":{"start":1742800008767,"stop":1742800017524,"duration":8757}},{"uid":"83a6ebc783fe2370","reportUrl":"https://pagopa.github.io/rtp-platform-qa/253//#testresult/83a6ebc783fe2370","status":"passed","time":{"start":1742713547090,"stop":1742713588590,"duration":41500}},{"uid":"68770534e9b20635","reportUrl":"https://pagopa.github.io/rtp-platform-qa/252//#testresult/68770534e9b20635","status":"passed","time":{"start":1742627137675,"stop":1742627171064,"duration":33389}},{"uid":"8e83fd80d61b20f0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/251//#testresult/8e83fd80d61b20f0","status":"passed","time":{"start":1742576810235,"stop":1742576843157,"duration":32922}},{"uid":"3c7a5a30c6a1b705","reportUrl":"https://pagopa.github.io/rtp-platform-qa/250//#testresult/3c7a5a30c6a1b705","status":"passed","time":{"start":1742540783196,"stop":1742540791568,"duration":8372}},{"uid":"c5339e70f796e945","reportUrl":"https://pagopa.github.io/rtp-platform-qa/249//#testresult/c5339e70f796e945","status":"passed","time":{"start":1742454380508,"stop":1742454388950,"duration":8442}},{"uid":"8129eed94553dd80","reportUrl":"https://pagopa.github.io/rtp-platform-qa/248//#testresult/8129eed94553dd80","status":"passed","time":{"start":1742367995941,"stop":1742368004527,"duration":8586}}]},"tags":["auth","activation","happy_path"]},"source":"8549b8a218cbfd7b.json","parameterValues":[]}