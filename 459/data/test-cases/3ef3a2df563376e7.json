{"uid":"3ef3a2df563376e7","name":"An RTP is sent through API","fullName":"tests.test_send_rtp#test_cannot_send_rtp_not_activated_user","historyId":"6160dd4465c6621e0038ef4589227e7c","time":{"start":1753600072028,"stop":1753600072390,"duration":362},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a non-activated debtor')\n    @allure.title('An RTP is sent through API')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_cannot_send_rtp_not_activated_user():\n        rtp_data = generate_rtp_data()\n    \n>       creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_send_rtp.py:232: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1753600013891,"stop":1753600013948,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a non-activated debtor"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"2495-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":169,"unknown":0,"total":171},"items":[{"uid":"4ca445fa1a35fb84","reportUrl":"https://pagopa.github.io/rtp-platform-qa/458//#testresult/4ca445fa1a35fb84","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753513685178,"stop":1753513685547,"duration":369}},{"uid":"1979a2cd36474765","reportUrl":"https://pagopa.github.io/rtp-platform-qa/457//#testresult/1979a2cd36474765","status":"passed","time":{"start":1753433606944,"stop":1753433608260,"duration":1316}},{"uid":"b4000007d67962d8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/456//#testresult/b4000007d67962d8","status":"passed","time":{"start":1753427418996,"stop":1753427419887,"duration":891}},{"uid":"996798c8452d253e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/455//#testresult/996798c8452d253e","status":"passed","time":{"start":1753367025512,"stop":1753367026707,"duration":1195}},{"uid":"7976e4018e3bfeb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/454//#testresult/7976e4018e3bfeb","status":"passed","time":{"start":1753351379164,"stop":1753351380080,"duration":916}},{"uid":"29cc0fa468a24dbe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/453//#testresult/29cc0fa468a24dbe","status":"passed","time":{"start":1753341035682,"stop":1753341036700,"duration":1018}},{"uid":"5494450960c61a03","reportUrl":"https://pagopa.github.io/rtp-platform-qa/452//#testresult/5494450960c61a03","status":"passed","time":{"start":1753254651988,"stop":1753254652760,"duration":772}},{"uid":"e95b114af1bc1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/451//#testresult/e95b114af1bc1","status":"passed","time":{"start":1753168205306,"stop":1753168206052,"duration":746}},{"uid":"9a2ca72bd6b44a4d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/450//#testresult/9a2ca72bd6b44a4d","status":"passed","time":{"start":1753081925704,"stop":1753081926467,"duration":763}},{"uid":"da8fd2979c8be63e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/449//#testresult/da8fd2979c8be63e","status":"passed","time":{"start":1752995295416,"stop":1752995296161,"duration":745}},{"uid":"7b3ff7dc5410e485","reportUrl":"https://pagopa.github.io/rtp-platform-qa/448//#testresult/7b3ff7dc5410e485","status":"passed","time":{"start":1752908943339,"stop":1752908944641,"duration":1302}},{"uid":"841a28351ec3ef74","reportUrl":"https://pagopa.github.io/rtp-platform-qa/447//#testresult/841a28351ec3ef74","status":"passed","time":{"start":1752822665847,"stop":1752822667147,"duration":1300}},{"uid":"7ff1ff02a0c3710e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/446//#testresult/7ff1ff02a0c3710e","status":"passed","time":{"start":1752736211090,"stop":1752736212077,"duration":987}},{"uid":"a42deda2e7cdf151","reportUrl":"https://pagopa.github.io/rtp-platform-qa/445//#testresult/a42deda2e7cdf151","status":"passed","time":{"start":1752672677413,"stop":1752672678177,"duration":764}},{"uid":"689d79cacc1cc6a2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/444//#testresult/689d79cacc1cc6a2","status":"passed","time":{"start":1752649806754,"stop":1752649807679,"duration":925}},{"uid":"dde33a7ef45af72","reportUrl":"https://pagopa.github.io/rtp-platform-qa/443//#testresult/dde33a7ef45af72","status":"passed","time":{"start":1752569332850,"stop":1752569333606,"duration":756}},{"uid":"c01ca64067dc96a3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/442//#testresult/c01ca64067dc96a3","status":"passed","time":{"start":1752563422025,"stop":1752563423286,"duration":1261}},{"uid":"1a2040c14f2d33b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/441//#testresult/1a2040c14f2d33b","status":"passed","time":{"start":1752477023515,"stop":1752477024237,"duration":722}},{"uid":"3617cf521e57d2d1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/440//#testresult/3617cf521e57d2d1","status":"passed","time":{"start":1752390594081,"stop":1752390594881,"duration":800}},{"uid":"c5ed7f80c9a105ea","reportUrl":"https://pagopa.github.io/rtp-platform-qa/439//#testresult/c5ed7f80c9a105ea","status":"passed","time":{"start":1752304127699,"stop":1752304128409,"duration":710}}]},"tags":["unhappy_path","send"]},"source":"3ef3a2df563376e7.json","parameterValues":[]}