{"uid":"e67d7914a182e8c","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1755241737960,"stop":1755241741330,"duration":3370},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755241660699,"stop":1755241660756,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2501-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":70,"broken":17,"skipped":0,"passed":29,"unknown":0,"total":116},"items":[{"uid":"c4dea651540aefd5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/490//#testresult/c4dea651540aefd5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755166851314,"stop":1755166854874,"duration":3560}},{"uid":"b05d10c878f792b4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/489//#testresult/b05d10c878f792b4","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755158355000,"stop":1755158358016,"duration":3016}},{"uid":"18a5ddb797158158","reportUrl":"https://pagopa.github.io/rtp-platform-qa/488//#testresult/18a5ddb797158158","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755155400596,"stop":1755155404462,"duration":3866}},{"uid":"aa520bdb2ee34d3e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/487//#testresult/aa520bdb2ee34d3e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755068971756,"stop":1755068974865,"duration":3109}},{"uid":"2f0b692d1bd171e2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/486//#testresult/2f0b692d1bd171e2","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754982585201,"stop":1754982588732,"duration":3531}},{"uid":"ff6cbc084f2502b2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/485//#testresult/ff6cbc084f2502b2","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1754907896290,"stop":1754907897349,"duration":1059}},{"uid":"2b427dcbfdc786af","reportUrl":"https://pagopa.github.io/rtp-platform-qa/483//#testresult/2b427dcbfdc786af","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754896343518,"stop":1754896347116,"duration":3598}},{"uid":"806a2a9cfca5f137","reportUrl":"https://pagopa.github.io/rtp-platform-qa/482//#testresult/806a2a9cfca5f137","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754809671326,"stop":1754809674353,"duration":3027}},{"uid":"6638d41543cc1838","reportUrl":"https://pagopa.github.io/rtp-platform-qa/481//#testresult/6638d41543cc1838","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754723280768,"stop":1754723283835,"duration":3067}},{"uid":"289e91e9096c0a71","reportUrl":"https://pagopa.github.io/rtp-platform-qa/480//#testresult/289e91e9096c0a71","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754637189171,"stop":1754637193065,"duration":3894}},{"uid":"7df9e8b9ac9771a1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/479//#testresult/7df9e8b9ac9771a1","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754550760104,"stop":1754550763328,"duration":3224}},{"uid":"87cd1df5996d14d9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/478//#testresult/87cd1df5996d14d9","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754464850362,"stop":1754464853861,"duration":3499}},{"uid":"f016d754e74d4c7c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/477//#testresult/f016d754e74d4c7c","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754464799527,"stop":1754464802272,"duration":2745}},{"uid":"780eead339f45c93","reportUrl":"https://pagopa.github.io/rtp-platform-qa/475//#testresult/780eead339f45c93","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754464359319,"stop":1754464362557,"duration":3238}},{"uid":"88cdaea49853fd39","reportUrl":"https://pagopa.github.io/rtp-platform-qa/474//#testresult/88cdaea49853fd39","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754387735849,"stop":1754387736231,"duration":382}},{"uid":"90bf987fd9e6c0f2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/472//#testresult/90bf987fd9e6c0f2","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754377957329,"stop":1754377957935,"duration":606}},{"uid":"82385cefa5a07f8d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/471//#testresult/82385cefa5a07f8d","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754319238246,"stop":1754319238700,"duration":454}},{"uid":"7199d53ba64720f3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/470//#testresult/7199d53ba64720f3","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754291692416,"stop":1754291693056,"duration":640}},{"uid":"2588ea92649c358b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/469//#testresult/2588ea92649c358b","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754204877687,"stop":1754204878047,"duration":360}},{"uid":"e8017e73408ff2cb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/468//#testresult/e8017e73408ff2cb","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754118493859,"stop":1754118494443,"duration":584}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"e67d7914a182e8c.json","parameterValues":[]}