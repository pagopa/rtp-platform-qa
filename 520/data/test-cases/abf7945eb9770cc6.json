{"uid":"abf7945eb9770cc6","name":"An RTP is sent through API","fullName":"tests.test_send_rtp#test_send_rtp_api","historyId":"6c14d2fbb180e49a106680915fe95577","time":{"start":1757057141758,"stop":1757057142378,"duration":620},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('An RTP is sent through API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    def test_send_rtp_api():\n        rtp_data = generate_rtp_data()\n    \n>       debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_send_rtp.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757056838070,"stop":1757056838126,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":26,"broken":17,"skipped":0,"passed":208,"unknown":0,"total":251},"items":[{"uid":"d2e6f294f4dcb38c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/519//#testresult/d2e6f294f4dcb38c","status":"passed","time":{"start":1756969684294,"stop":1756969685866,"duration":1572}},{"uid":"b16b74862a5e1bf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/518//#testresult/b16b74862a5e1bf","status":"passed","time":{"start":1756910921396,"stop":1756910924027,"duration":2631}},{"uid":"bfc56f14117ea450","reportUrl":"https://pagopa.github.io/rtp-platform-qa/517//#testresult/bfc56f14117ea450","status":"passed","time":{"start":1756883305595,"stop":1756883307368,"duration":1773}},{"uid":"dcaebcbee383a31d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/516//#testresult/dcaebcbee383a31d","status":"passed","time":{"start":1756798027333,"stop":1756798028854,"duration":1521}},{"uid":"261b182f4fc69416","reportUrl":"https://pagopa.github.io/rtp-platform-qa/515//#testresult/261b182f4fc69416","status":"passed","time":{"start":1756796902689,"stop":1756796904286,"duration":1597}},{"uid":"7d05f0dac1f8e84f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/514//#testresult/7d05f0dac1f8e84f","status":"passed","time":{"start":1756719640345,"stop":1756719642980,"duration":2635}},{"uid":"bd9ab36295e6c4a0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/513//#testresult/bd9ab36295e6c4a0","status":"passed","time":{"start":1756710588124,"stop":1756710590495,"duration":2371}},{"uid":"224ff5b41809d7fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/512//#testresult/224ff5b41809d7fe","status":"passed","time":{"start":1756624057604,"stop":1756624059153,"duration":1549}},{"uid":"7d3636537476ab97","reportUrl":"https://pagopa.github.io/rtp-platform-qa/511//#testresult/7d3636537476ab97","status":"passed","time":{"start":1756537649037,"stop":1756537650604,"duration":1567}},{"uid":"a258849ed5f8c2b7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/510//#testresult/a258849ed5f8c2b7","status":"passed","time":{"start":1756451305585,"stop":1756451307402,"duration":1817}},{"uid":"e4270a96137835f7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/509//#testresult/e4270a96137835f7","status":"passed","time":{"start":1756385969190,"stop":1756385971778,"duration":2588}},{"uid":"a4bf7b113048225d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/508//#testresult/a4bf7b113048225d","status":"passed","time":{"start":1756364937385,"stop":1756364940013,"duration":2628}},{"uid":"fe2e4e420604e01b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/507//#testresult/fe2e4e420604e01b","status":"passed","time":{"start":1756278524362,"stop":1756278527044,"duration":2682}},{"uid":"73b9075f40f765f9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/506//#testresult/73b9075f40f765f9","status":"passed","time":{"start":1756192115875,"stop":1756192117606,"duration":1731}},{"uid":"8db9e6402a4d65b8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/505//#testresult/8db9e6402a4d65b8","status":"passed","time":{"start":1756105762074,"stop":1756105763649,"duration":1575}},{"uid":"7f586aa0104df74b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/504//#testresult/7f586aa0104df74b","status":"passed","time":{"start":1756019250007,"stop":1756019251552,"duration":1545}},{"uid":"22d91ce514f48c4b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/503//#testresult/22d91ce514f48c4b","status":"passed","time":{"start":1755932842493,"stop":1755932844295,"duration":1802}},{"uid":"11ffd3d078a3b6c5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/502//#testresult/11ffd3d078a3b6c5","status":"passed","time":{"start":1755847711489,"stop":1755847718405,"duration":6916}},{"uid":"9ab40e909161a177","reportUrl":"https://pagopa.github.io/rtp-platform-qa/501//#testresult/9ab40e909161a177","status":"passed","time":{"start":1755846498565,"stop":1755846500367,"duration":1802}},{"uid":"dbee633c9781271f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/500//#testresult/dbee633c9781271f","status":"passed","time":{"start":1755843965049,"stop":1755843966845,"duration":1796}}]},"tags":["send","happy_path"]},"source":"abf7945eb9770cc6.json","parameterValues":[]}