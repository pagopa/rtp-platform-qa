{"uid":"69d7bd885f79dd71","name":"Retrieving activation with invalid UUID returns 400","fullName":"tests.test_activation#test_get_activation_by_id_invalid_uuid","historyId":"45183790f19133b68f8285d8cc1d1910","time":{"start":1757057084285,"stop":1757057084885,"duration":600},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('Activation')\n    @allure.story('Get Debtor activation by ID')\n    @allure.title('Retrieving activation with invalid UUID returns 400')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.unhappy_path\n    def test_get_activation_by_id_invalid_uuid():\n>       access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n\nfunctional-tests/tests/test_activation.py:194: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757056838070,"stop":1757056838126,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Get Debtor activation by ID"},{"name":"feature","value":"Activation"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":81,"unknown":0,"total":82},"items":[{"uid":"430111524e4e3647","reportUrl":"https://pagopa.github.io/rtp-platform-qa/519//#testresult/430111524e4e3647","status":"passed","time":{"start":1756969612965,"stop":1756969613814,"duration":849}},{"uid":"999698cf1364ed66","reportUrl":"https://pagopa.github.io/rtp-platform-qa/518//#testresult/999698cf1364ed66","status":"passed","time":{"start":1756910818601,"stop":1756910820048,"duration":1447}},{"uid":"584872b8a8ddd72a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/517//#testresult/584872b8a8ddd72a","status":"passed","time":{"start":1756883233757,"stop":1756883234651,"duration":894}},{"uid":"3136a3dd7101069c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/516//#testresult/3136a3dd7101069c","status":"passed","time":{"start":1756797963009,"stop":1756797963919,"duration":910}},{"uid":"60bd172d166e59ec","reportUrl":"https://pagopa.github.io/rtp-platform-qa/515//#testresult/60bd172d166e59ec","status":"passed","time":{"start":1756796829821,"stop":1756796830676,"duration":855}},{"uid":"63a663a9329f107c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/514//#testresult/63a663a9329f107c","status":"passed","time":{"start":1756719548367,"stop":1756719549775,"duration":1408}},{"uid":"ca0c01d43c08ec20","reportUrl":"https://pagopa.github.io/rtp-platform-qa/513//#testresult/ca0c01d43c08ec20","status":"passed","time":{"start":1756710497642,"stop":1756710498743,"duration":1101}},{"uid":"4461d2fae805b88","reportUrl":"https://pagopa.github.io/rtp-platform-qa/512//#testresult/4461d2fae805b88","status":"passed","time":{"start":1756623983977,"stop":1756623984803,"duration":826}},{"uid":"5d36410f18c8b931","reportUrl":"https://pagopa.github.io/rtp-platform-qa/511//#testresult/5d36410f18c8b931","status":"passed","time":{"start":1756537580869,"stop":1756537581592,"duration":723}},{"uid":"86239ca5629088d2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/510//#testresult/86239ca5629088d2","status":"passed","time":{"start":1756451221904,"stop":1756451222735,"duration":831}},{"uid":"ca889d0a38a2cf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/509//#testresult/ca889d0a38a2cf","status":"passed","time":{"start":1756385869282,"stop":1756385870543,"duration":1261}},{"uid":"93a13dd903c726cf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/508//#testresult/93a13dd903c726cf","status":"passed","time":{"start":1756364834020,"stop":1756364835329,"duration":1309}},{"uid":"28287c079297e288","reportUrl":"https://pagopa.github.io/rtp-platform-qa/507//#testresult/28287c079297e288","status":"passed","time":{"start":1756278425356,"stop":1756278426633,"duration":1277}},{"uid":"bcffd6a06a23704f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/506//#testresult/bcffd6a06a23704f","status":"passed","time":{"start":1756192043812,"stop":1756192044694,"duration":882}},{"uid":"6540b2c228a5a404","reportUrl":"https://pagopa.github.io/rtp-platform-qa/505//#testresult/6540b2c228a5a404","status":"passed","time":{"start":1756105675454,"stop":1756105676204,"duration":750}},{"uid":"3dc05dd895b8d0b7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/504//#testresult/3dc05dd895b8d0b7","status":"passed","time":{"start":1756019179982,"stop":1756019180802,"duration":820}},{"uid":"d64f6ebcb07eed13","reportUrl":"https://pagopa.github.io/rtp-platform-qa/503//#testresult/d64f6ebcb07eed13","status":"passed","time":{"start":1755932767375,"stop":1755932768218,"duration":843}},{"uid":"39bd8234d54c2d52","reportUrl":"https://pagopa.github.io/rtp-platform-qa/502//#testresult/39bd8234d54c2d52","status":"passed","time":{"start":1755847627037,"stop":1755847628155,"duration":1118}},{"uid":"cad5920ec1dc9d28","reportUrl":"https://pagopa.github.io/rtp-platform-qa/501//#testresult/cad5920ec1dc9d28","status":"passed","time":{"start":1755846429457,"stop":1755846430287,"duration":830}},{"uid":"f24bca19d3833522","reportUrl":"https://pagopa.github.io/rtp-platform-qa/500//#testresult/f24bca19d3833522","status":"passed","time":{"start":1755843882089,"stop":1755843882939,"duration":850}}]},"tags":["auth","activation","unhappy_path"]},"source":"69d7bd885f79dd71.json","parameterValues":[]}