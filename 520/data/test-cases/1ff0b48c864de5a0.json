{"uid":"1ff0b48c864de5a0","name":"Get a page of activations","fullName":"tests.test_activation#test_get_all_activations","historyId":"e8f95bed089a208721ec39e642cc49a5","time":{"start":1757056898932,"stop":1757056959717,"duration":60785},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 504 Server Error: Gateway Time-out for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('Activation')\n    @allure.story('List Activations')\n    @allure.title('Get a page of activations')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.happy_path\n    def test_get_all_activations():\n>       access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n\nfunctional-tests/tests/test_activation.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [504]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 504 Server Error: Gateway Time-out for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757056838070,"stop":1757056838126,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Activation"},{"name":"story","value":"List Activations"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":55,"broken":1,"skipped":0,"passed":25,"unknown":0,"total":81},"items":[{"uid":"b41279d414ae3702","reportUrl":"https://pagopa.github.io/rtp-platform-qa/519//#testresult/b41279d414ae3702","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756969601714,"stop":1756969603191,"duration":1477}},{"uid":"8605e62b09c88912","reportUrl":"https://pagopa.github.io/rtp-platform-qa/518//#testresult/8605e62b09c88912","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756910806827,"stop":1756910808851,"duration":2024}},{"uid":"cd8a304dbcea9f1a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/517//#testresult/cd8a304dbcea9f1a","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756883225582,"stop":1756883227335,"duration":1753}},{"uid":"7e31ede56799cf9e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/516//#testresult/7e31ede56799cf9e","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756797955914,"stop":1756797957417,"duration":1503}},{"uid":"5b2ac29754419384","reportUrl":"https://pagopa.github.io/rtp-platform-qa/515//#testresult/5b2ac29754419384","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756796822682,"stop":1756796824129,"duration":1447}},{"uid":"21b6acda33ab257","reportUrl":"https://pagopa.github.io/rtp-platform-qa/514//#testresult/21b6acda33ab257","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756719536942,"stop":1756719539080,"duration":2138}},{"uid":"6abccd11018156f7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/513//#testresult/6abccd11018156f7","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756710487146,"stop":1756710489021,"duration":1875}},{"uid":"7cf3ef880aec22e4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/512//#testresult/7cf3ef880aec22e4","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756623976123,"stop":1756623977722,"duration":1599}},{"uid":"1f0b3e32aeb28ce4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/511//#testresult/1f0b3e32aeb28ce4","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756537573294,"stop":1756537574842,"duration":1548}},{"uid":"65955686a598b27e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/510//#testresult/65955686a598b27e","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756451213763,"stop":1756451215374,"duration":1611}},{"uid":"91f889739be1776","reportUrl":"https://pagopa.github.io/rtp-platform-qa/509//#testresult/91f889739be1776","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756385857397,"stop":1756385859368,"duration":1971}},{"uid":"e9c8063d51bfd9c6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/508//#testresult/e9c8063d51bfd9c6","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756364822462,"stop":1756364824054,"duration":1592}},{"uid":"cefe6d8a368684fd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/507//#testresult/cefe6d8a368684fd","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756278413035,"stop":1756278415113,"duration":2078}},{"uid":"52eca08a187cf3cc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/506//#testresult/52eca08a187cf3cc","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756192035737,"stop":1756192037259,"duration":1522}},{"uid":"a3fade6d041cafaf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/505//#testresult/a3fade6d041cafaf","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756105668520,"stop":1756105669878,"duration":1358}},{"uid":"b1bd6584c427b42a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/504//#testresult/b1bd6584c427b42a","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1756019172994,"stop":1756019174361,"duration":1367}},{"uid":"4e28ba796092b2d1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/503//#testresult/4e28ba796092b2d1","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755932759445,"stop":1755932760922,"duration":1477}},{"uid":"3e8b03e4291fbb37","reportUrl":"https://pagopa.github.io/rtp-platform-qa/502//#testresult/3e8b03e4291fbb37","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755847616538,"stop":1755847618418,"duration":1880}},{"uid":"ae977f8879b518cd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/501//#testresult/ae977f8879b518cd","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755846421709,"stop":1755846423076,"duration":1367}},{"uid":"c3b62b047d9a3a94","reportUrl":"https://pagopa.github.io/rtp-platform-qa/500//#testresult/c3b62b047d9a3a94","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1755843874113,"stop":1755843875607,"duration":1494}}]},"tags":["auth","activation","happy_path"]},"source":"1ff0b48c864de5a0.json","parameterValues":[]}