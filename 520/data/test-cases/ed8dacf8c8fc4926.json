{"uid":"ed8dacf8c8fc4926","name":"The response body contains a comprehensible error message","fullName":"tests.test_send_rtp#test_field_error_in_body","historyId":"dd6ce34dc9b4737f86cbefdca52b3610","time":{"start":1757057144946,"stop":1757057145555,"duration":609},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('The response body contains a comprehensible error message')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_field_error_in_body():\n        rtp_data = generate_rtp_data()\n    \n>       debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_send_rtp.py:196: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757056838070,"stop":1757056838126,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":17,"skipped":0,"passed":230,"unknown":0,"total":251},"items":[{"uid":"1eceab8e34021aa5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/519//#testresult/1eceab8e34021aa5","status":"passed","time":{"start":1756969695123,"stop":1756969696609,"duration":1486}},{"uid":"c90402f887ce84f7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/518//#testresult/c90402f887ce84f7","status":"passed","time":{"start":1756910935706,"stop":1756910938200,"duration":2494}},{"uid":"38b491c4cc7844cd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/517//#testresult/38b491c4cc7844cd","status":"passed","time":{"start":1756883316468,"stop":1756883318159,"duration":1691}},{"uid":"9a02e4bf89c589a6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/516//#testresult/9a02e4bf89c589a6","status":"passed","time":{"start":1756798036411,"stop":1756798037834,"duration":1423}},{"uid":"d1deae875cb55b23","reportUrl":"https://pagopa.github.io/rtp-platform-qa/515//#testresult/d1deae875cb55b23","status":"passed","time":{"start":1756796912761,"stop":1756796914225,"duration":1464}},{"uid":"45a252eca4eecb08","reportUrl":"https://pagopa.github.io/rtp-platform-qa/514//#testresult/45a252eca4eecb08","status":"passed","time":{"start":1756719654168,"stop":1756719656715,"duration":2547}},{"uid":"20fdce2755e4b76d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/513//#testresult/20fdce2755e4b76d","status":"passed","time":{"start":1756710600898,"stop":1756710603167,"duration":2269}},{"uid":"cc0ea43e0ed72d8f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/512//#testresult/cc0ea43e0ed72d8f","status":"passed","time":{"start":1756624066829,"stop":1756624068281,"duration":1452}},{"uid":"cadbc3a15616c5a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/511//#testresult/cadbc3a15616c5a","status":"passed","time":{"start":1756537659862,"stop":1756537661346,"duration":1484}},{"uid":"79fcb2e97ce7f6e0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/510//#testresult/79fcb2e97ce7f6e0","status":"passed","time":{"start":1756451316454,"stop":1756451318151,"duration":1697}},{"uid":"6f387f56bed4bfe6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/509//#testresult/6f387f56bed4bfe6","status":"passed","time":{"start":1756385983006,"stop":1756385985490,"duration":2484}},{"uid":"f514512dc0f16e1d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/508//#testresult/f514512dc0f16e1d","status":"passed","time":{"start":1756364951302,"stop":1756364953807,"duration":2505}},{"uid":"68963cb10e31f3fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/507//#testresult/68963cb10e31f3fe","status":"passed","time":{"start":1756278538423,"stop":1756278540988,"duration":2565}},{"uid":"b434229c2d6f83c6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/506//#testresult/b434229c2d6f83c6","status":"passed","time":{"start":1756192125780,"stop":1756192127395,"duration":1615}},{"uid":"3fe1f59501f32a8e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/505//#testresult/3fe1f59501f32a8e","status":"passed","time":{"start":1756105772494,"stop":1756105773988,"duration":1494}},{"uid":"648860b0f402274e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/504//#testresult/648860b0f402274e","status":"passed","time":{"start":1756019259782,"stop":1756019261233,"duration":1451}},{"uid":"e44c22149fba30aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/503//#testresult/e44c22149fba30aa","status":"passed","time":{"start":1755932855214,"stop":1755932856885,"duration":1671}},{"uid":"cb09444b0380f7f5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/502//#testresult/cb09444b0380f7f5","status":"passed","time":{"start":1755847728619,"stop":1755847730846,"duration":2227}},{"uid":"53f1f44351d28439","reportUrl":"https://pagopa.github.io/rtp-platform-qa/501//#testresult/53f1f44351d28439","status":"passed","time":{"start":1755846510648,"stop":1755846512329,"duration":1681}},{"uid":"63f29d3c968c361d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/500//#testresult/63f29d3c968c361d","status":"passed","time":{"start":1755843976029,"stop":1755843977737,"duration":1708}}]},"tags":["unhappy_path","send"]},"source":"ed8dacf8c8fc4926.json","parameterValues":[]}