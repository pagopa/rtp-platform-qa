{"uid":"8be5c7be08b468d6","name":"RTP cancellation fails if ID does not exist","fullName":"tests.test_cancel_rtp#test_cancel_rtp_with_nonexistent_resource_id","historyId":"e4356ee1dbc1bc7a182dccbdb2e03e1d","time":{"start":1757057094939,"stop":1757057095599,"duration":660},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider cancels RTP')\n    @allure.title('RTP cancellation fails if ID does not exist')\n    @pytest.mark.cancel\n    @pytest.mark.unhappy_path\n    def test_cancel_rtp_with_nonexistent_resource_id():\n>       creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token)\n\nfunctional-tests/tests/test_cancel_rtp.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757056838070,"stop":1757056838126,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Callback"},{"name":"story","value":"Service provider cancels RTP"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"cancel"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_cancel_rtp"},{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_cancel_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":17,"skipped":0,"passed":197,"unknown":0,"total":214},"items":[{"uid":"3b8b1a0269c9f267","reportUrl":"https://pagopa.github.io/rtp-platform-qa/519//#testresult/3b8b1a0269c9f267","status":"passed","time":{"start":1756969631201,"stop":1756969631948,"duration":747}},{"uid":"23435d9673a7c6f8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/518//#testresult/23435d9673a7c6f8","status":"passed","time":{"start":1756910845908,"stop":1756910847168,"duration":1260}},{"uid":"6219ffd1a32a420d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/517//#testresult/6219ffd1a32a420d","status":"passed","time":{"start":1756883252718,"stop":1756883253568,"duration":850}},{"uid":"89ad369b7bfbe689","reportUrl":"https://pagopa.github.io/rtp-platform-qa/516//#testresult/89ad369b7bfbe689","status":"passed","time":{"start":1756797979226,"stop":1756797979927,"duration":701}},{"uid":"c0ea18d838f507cc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/515//#testresult/c0ea18d838f507cc","status":"passed","time":{"start":1756796847633,"stop":1756796848371,"duration":738}},{"uid":"79de97d3f0ae848b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/514//#testresult/79de97d3f0ae848b","status":"passed","time":{"start":1756719574184,"stop":1756719575408,"duration":1224}},{"uid":"e7fdd55a84670199","reportUrl":"https://pagopa.github.io/rtp-platform-qa/513//#testresult/e7fdd55a84670199","status":"passed","time":{"start":1756710521487,"stop":1756710522633,"duration":1146}},{"uid":"dbc67dbae1202193","reportUrl":"https://pagopa.github.io/rtp-platform-qa/512//#testresult/dbc67dbae1202193","status":"passed","time":{"start":1756624000593,"stop":1756624001318,"duration":725}},{"uid":"82d1a3c5f400cc04","reportUrl":"https://pagopa.github.io/rtp-platform-qa/511//#testresult/82d1a3c5f400cc04","status":"passed","time":{"start":1756537598132,"stop":1756537598879,"duration":747}},{"uid":"8e6f7c68088faad4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/510//#testresult/8e6f7c68088faad4","status":"passed","time":{"start":1756451241344,"stop":1756451242182,"duration":838}},{"uid":"a31b110f180cfd04","reportUrl":"https://pagopa.github.io/rtp-platform-qa/509//#testresult/a31b110f180cfd04","status":"passed","time":{"start":1756385895545,"stop":1756385896818,"duration":1273}},{"uid":"761de35ea00acb60","reportUrl":"https://pagopa.github.io/rtp-platform-qa/508//#testresult/761de35ea00acb60","status":"passed","time":{"start":1756364864298,"stop":1756364865545,"duration":1247}},{"uid":"306b4bcaf1fd8af7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/507//#testresult/306b4bcaf1fd8af7","status":"passed","time":{"start":1756278452937,"stop":1756278454269,"duration":1332}},{"uid":"f7a296ff17a99d80","reportUrl":"https://pagopa.github.io/rtp-platform-qa/506//#testresult/f7a296ff17a99d80","status":"passed","time":{"start":1756192062703,"stop":1756192063455,"duration":752}},{"uid":"b754f97c9279199b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/505//#testresult/b754f97c9279199b","status":"passed","time":{"start":1756105693855,"stop":1756105694602,"duration":747}},{"uid":"58b6736d30f34000","reportUrl":"https://pagopa.github.io/rtp-platform-qa/504//#testresult/58b6736d30f34000","status":"passed","time":{"start":1756019197994,"stop":1756019198719,"duration":725}},{"uid":"323466a18b7dadf8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/503//#testresult/323466a18b7dadf8","status":"passed","time":{"start":1755932787273,"stop":1755932788112,"duration":839}},{"uid":"f877fc59423a05af","reportUrl":"https://pagopa.github.io/rtp-platform-qa/502//#testresult/f877fc59423a05af","status":"passed","time":{"start":1755847649666,"stop":1755847650783,"duration":1117}},{"uid":"231bfde55ca1ee39","reportUrl":"https://pagopa.github.io/rtp-platform-qa/501//#testresult/231bfde55ca1ee39","status":"passed","time":{"start":1755846447733,"stop":1755846448578,"duration":845}},{"uid":"d936d1636ce4766b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/500//#testresult/d936d1636ce4766b","status":"passed","time":{"start":1755843900703,"stop":1755843901548,"duration":845}}]},"tags":["cancel","unhappy_path"]},"source":"8be5c7be08b468d6.json","parameterValues":[]}