{"uid":"3d6c3d7dc816cdf2","name":"A debtor cannot be activated more than once","fullName":"tests.test_activation#test_fail_activate_debtor_two_times","historyId":"8704b37d564cbbe926da79ebe6202dbe","time":{"start":1757057082711,"stop":1757057083474,"duration":763},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('Activation')\n    @allure.story('Debtor activation')\n    @allure.title('A debtor cannot be activated more than once')\n    @pytest.mark.activation\n    @pytest.mark.unhappy_path\n    def test_fail_activate_debtor_two_times():\n>       access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                              client_secret=secrets.debtor_service_provider.client_secret,\n                                              access_token_function=get_access_token)\n\nfunctional-tests/tests/test_activation.py:159: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757056838070,"stop":1757056838126,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Activation"},{"name":"story","value":"Debtor activation"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"activation"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2510-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":67,"broken":1,"skipped":0,"passed":118,"unknown":0,"total":186},"items":[{"uid":"b767f0f06896f746","reportUrl":"https://pagopa.github.io/rtp-platform-qa/519//#testresult/b767f0f06896f746","status":"passed","time":{"start":1756969610746,"stop":1756969612122,"duration":1376}},{"uid":"62eb4d8100f3fbdb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/518//#testresult/62eb4d8100f3fbdb","status":"passed","time":{"start":1756910815153,"stop":1756910817256,"duration":2103}},{"uid":"581ca6b2e3ab8d26","reportUrl":"https://pagopa.github.io/rtp-platform-qa/517//#testresult/581ca6b2e3ab8d26","status":"passed","time":{"start":1756883231327,"stop":1756883232768,"duration":1441}},{"uid":"5435549c32b07032","reportUrl":"https://pagopa.github.io/rtp-platform-qa/516//#testresult/5435549c32b07032","status":"passed","time":{"start":1756797960850,"stop":1756797962302,"duration":1452}},{"uid":"44861b62edb28b80","reportUrl":"https://pagopa.github.io/rtp-platform-qa/515//#testresult/44861b62edb28b80","status":"passed","time":{"start":1756796827817,"stop":1756796829079,"duration":1262}},{"uid":"866bbfe4a2b0210a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/514//#testresult/866bbfe4a2b0210a","status":"passed","time":{"start":1756719545023,"stop":1756719546976,"duration":1953}},{"uid":"4c9902a04ddaefa6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/513//#testresult/4c9902a04ddaefa6","status":"passed","time":{"start":1756710494744,"stop":1756710496479,"duration":1735}},{"uid":"d6a58ae4c74e1772","reportUrl":"https://pagopa.github.io/rtp-platform-qa/512//#testresult/d6a58ae4c74e1772","status":"passed","time":{"start":1756623981876,"stop":1756623983135,"duration":1259}},{"uid":"981c7d66c39d76bd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/511//#testresult/981c7d66c39d76bd","status":"passed","time":{"start":1756537578841,"stop":1756537580121,"duration":1280}},{"uid":"4819667b858bb077","reportUrl":"https://pagopa.github.io/rtp-platform-qa/510//#testresult/4819667b858bb077","status":"passed","time":{"start":1756451219546,"stop":1756451220914,"duration":1368}},{"uid":"26bb571e11117461","reportUrl":"https://pagopa.github.io/rtp-platform-qa/509//#testresult/26bb571e11117461","status":"passed","time":{"start":1756385865857,"stop":1756385868015,"duration":2158}},{"uid":"c06f5faf8f8ebebe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/508//#testresult/c06f5faf8f8ebebe","status":"passed","time":{"start":1756364830600,"stop":1756364832793,"duration":2193}},{"uid":"9e8f5437c080b383","reportUrl":"https://pagopa.github.io/rtp-platform-qa/507//#testresult/9e8f5437c080b383","status":"passed","time":{"start":1756278421684,"stop":1756278423904,"duration":2220}},{"uid":"9bb103e1353b3457","reportUrl":"https://pagopa.github.io/rtp-platform-qa/506//#testresult/9bb103e1353b3457","status":"passed","time":{"start":1756192041519,"stop":1756192042947,"duration":1428}},{"uid":"117c48323d8dbd2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/505//#testresult/117c48323d8dbd2","status":"passed","time":{"start":1756105673306,"stop":1756105674581,"duration":1275}},{"uid":"2950a3fe77705e8e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/504//#testresult/2950a3fe77705e8e","status":"passed","time":{"start":1756019177887,"stop":1756019179228,"duration":1341}},{"uid":"f8bf7f12586fe2c7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/503//#testresult/f8bf7f12586fe2c7","status":"passed","time":{"start":1755932765178,"stop":1755932766518,"duration":1340}},{"uid":"116af1a1fe09254b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/502//#testresult/116af1a1fe09254b","status":"passed","time":{"start":1755847624160,"stop":1755847625905,"duration":1745}},{"uid":"6ac9db19a991dfb2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/501//#testresult/6ac9db19a991dfb2","status":"passed","time":{"start":1755846427232,"stop":1755846428590,"duration":1358}},{"uid":"be3b9c7ee512fd8b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/500//#testresult/be3b9c7ee512fd8b","status":"passed","time":{"start":1755843879866,"stop":1755843881232,"duration":1366}}]},"tags":["activation","unhappy_path"]},"source":"3d6c3d7dc816cdf2.json","parameterValues":[]}