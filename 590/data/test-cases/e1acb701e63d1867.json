{"uid":"e1acb701e63d1867","name":"An RTP is sent to ICCREA service with activated fiscal code","fullName":"functional-tests.tests.test_send_rtp#test_send_rtp_to_iccrea","historyId":"1eb8d3de0b6a65dd591cf5aa10130f4c","time":{"start":1761287013940,"stop":1761287016855,"duration":2915},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider')\n    @allure.title('An RTP is sent to ICCREA service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.iccrea\n    def test_send_rtp_to_iccrea():\n        rtp_data = generate_rtp_data(payer_id=secrets.iccrea_activated_fiscal_code)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:143: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761286922843,"stop":1761286922900,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider"},{"name":"tag","value":"iccrea"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"functional-tests.tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2534-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"functional-tests.tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":15},"items":[{"uid":"dbae8c4ffd45b6ad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/589//#testresult/dbae8c4ffd45b6ad","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761200626104,"stop":1761200629673,"duration":3569}},{"uid":"71da557df7c35c18","reportUrl":"https://pagopa.github.io/rtp-platform-qa/588//#testresult/71da557df7c35c18","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761114285474,"stop":1761114288766,"duration":3292}},{"uid":"d6e5e94f2439da4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/587//#testresult/d6e5e94f2439da4","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761053863702,"stop":1761053866936,"duration":3234}},{"uid":"4c8792ad51845b40","reportUrl":"https://pagopa.github.io/rtp-platform-qa/585//#testresult/4c8792ad51845b40","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761027835629,"stop":1761027838203,"duration":2574}},{"uid":"d20c0cb6e0ba866c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/584//#testresult/d20c0cb6e0ba866c","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760941476006,"stop":1760941479025,"duration":3019}},{"uid":"11f696c72e402199","reportUrl":"https://pagopa.github.io/rtp-platform-qa/583//#testresult/11f696c72e402199","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760854973935,"stop":1760854976808,"duration":2873}},{"uid":"1eceec838a540f79","reportUrl":"https://pagopa.github.io/rtp-platform-qa/582//#testresult/1eceec838a540f79","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760768509305,"stop":1760768512005,"duration":2700}},{"uid":"e7d3d9429be7efac","reportUrl":"https://pagopa.github.io/rtp-platform-qa/581//#testresult/e7d3d9429be7efac","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760682164493,"stop":1760682167331,"duration":2838}},{"uid":"e54de66ed4cf5bd6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/580//#testresult/e54de66ed4cf5bd6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760624534390,"stop":1760624538055,"duration":3665}},{"uid":"9fc573825104915b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/579//#testresult/9fc573825104915b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760619710285,"stop":1760619713505,"duration":3220}},{"uid":"55d588ad3f516f9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/578//#testresult/55d588ad3f516f9","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760595819854,"stop":1760595823080,"duration":3226}},{"uid":"12a08e30bb948db","reportUrl":"https://pagopa.github.io/rtp-platform-qa/575//#testresult/12a08e30bb948db","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760522139615,"stop":1760522142893,"duration":3278}},{"uid":"725f7bcf001bb342","reportUrl":"https://pagopa.github.io/rtp-platform-qa/574//#testresult/725f7bcf001bb342","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760521361656,"stop":1760521364358,"duration":2702}},{"uid":"8e286ffea5523251","reportUrl":"https://pagopa.github.io/rtp-platform-qa/573//#testresult/8e286ffea5523251","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760520563191,"stop":1760520566314,"duration":3123}}]},"tags":["iccrea","real_integration","send","happy_path"]},"source":"e1acb701e63d1867.json","parameterValues":[]}