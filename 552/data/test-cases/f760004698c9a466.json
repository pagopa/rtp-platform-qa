{"uid":"f760004698c9a466","name":"The response body contains a comprehensible error message","fullName":"tests.test_send_rtp#test_field_error_in_body","historyId":"dd6ce34dc9b4737f86cbefdca52b3610","time":{"start":1759476838627,"stop":1759476839211,"duration":584},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('The response body contains a comprehensible error message')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_field_error_in_body():\n        rtp_data = generate_rtp_data()\n    \n>       debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_send_rtp.py:196: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759476000591,"stop":1759476000649,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2538-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":19,"skipped":0,"passed":260,"unknown":0,"total":283},"items":[{"uid":"4d9659edc2e256ca","reportUrl":"https://pagopa.github.io/rtp-platform-qa/551//#testresult/4d9659edc2e256ca","status":"passed","time":{"start":1759390834313,"stop":1759390835813,"duration":1500}},{"uid":"29d27e5deb6372e4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/550//#testresult/29d27e5deb6372e4","status":"passed","time":{"start":1759316234527,"stop":1759316236194,"duration":1667}},{"uid":"df89e31c5e79520b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/549//#testresult/df89e31c5e79520b","status":"passed","time":{"start":1759303795202,"stop":1759303796709,"duration":1507}},{"uid":"d7cb4ec58e523f3d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/548//#testresult/d7cb4ec58e523f3d","status":"passed","time":{"start":1759217380823,"stop":1759217382628,"duration":1805}},{"uid":"3bf809ae956bded2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/547//#testresult/3bf809ae956bded2","status":"passed","time":{"start":1759130922985,"stop":1759130924471,"duration":1486}},{"uid":"faf02fa6c3257868","reportUrl":"https://pagopa.github.io/rtp-platform-qa/546//#testresult/faf02fa6c3257868","status":"passed","time":{"start":1759044377390,"stop":1759044379760,"duration":2370}},{"uid":"57665c1c188ee950","reportUrl":"https://pagopa.github.io/rtp-platform-qa/545//#testresult/57665c1c188ee950","status":"passed","time":{"start":1758957741410,"stop":1758957742963,"duration":1553}},{"uid":"73e41107c36b2d0d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/544//#testresult/73e41107c36b2d0d","status":"passed","time":{"start":1758872029747,"stop":1758872032218,"duration":2471}},{"uid":"77da45be00fa0077","reportUrl":"https://pagopa.github.io/rtp-platform-qa/543//#testresult/77da45be00fa0077","status":"passed","time":{"start":1758786168658,"stop":1758786170148,"duration":1490}},{"uid":"199f16051cb08ccc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/542//#testresult/199f16051cb08ccc","status":"passed","time":{"start":1758699772432,"stop":1758699774677,"duration":2245}},{"uid":"83a7ceb84c1fab9d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/541//#testresult/83a7ceb84c1fab9d","status":"passed","time":{"start":1758612602897,"stop":1758612605223,"duration":2326}},{"uid":"614302fc4a3960ab","reportUrl":"https://pagopa.github.io/rtp-platform-qa/540//#testresult/614302fc4a3960ab","status":"passed","time":{"start":1758526266884,"stop":1758526269347,"duration":2463}},{"uid":"6076722aa7e66d5b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/539//#testresult/6076722aa7e66d5b","status":"passed","time":{"start":1758439607671,"stop":1758439609958,"duration":2287}},{"uid":"4bc17bcc5f3558f6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/538//#testresult/4bc17bcc5f3558f6","status":"passed","time":{"start":1758353267714,"stop":1758353270149,"duration":2435}},{"uid":"88ea0eccdfb6813e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/537//#testresult/88ea0eccdfb6813e","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1758271095693,"stop":1758271096249,"duration":556}},{"uid":"3b96ca04273f28d5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/536//#testresult/3b96ca04273f28d5","status":"passed","time":{"start":1758267125492,"stop":1758267127162,"duration":1670}},{"uid":"5de8ac2053f37bfc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/535//#testresult/5de8ac2053f37bfc","status":"passed","time":{"start":1758180733181,"stop":1758180735469,"duration":2288}},{"uid":"b82f94775d0b48fd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/534//#testresult/b82f94775d0b48fd","status":"passed","time":{"start":1758094309715,"stop":1758094311366,"duration":1651}},{"uid":"f42f660a03daa0b0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/533//#testresult/f42f660a03daa0b0","status":"passed","time":{"start":1758007979719,"stop":1758007981486,"duration":1767}},{"uid":"f31a4a802ea7fa4a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/532//#testresult/f31a4a802ea7fa4a","status":"passed","time":{"start":1757921604288,"stop":1757921605792,"duration":1504}}]},"tags":["unhappy_path","send"]},"source":"f760004698c9a466.json","parameterValues":[]}