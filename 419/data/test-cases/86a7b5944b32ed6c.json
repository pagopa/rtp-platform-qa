{"uid":"86a7b5944b32ed6c","name":"Cannot send RTP with expired date","fullName":"tests.test_debtor_service_provider_availability#test_send_rtp_to_cbi_expired_date","historyId":"6908d8a096f06149222842bbb65d22a3","time":{"start":1751353693747,"stop":1751353694879,"duration":1132},"status":"failed","statusMessage":"AssertionError: assert 401 == 400\n +  where 401 = <Response [401]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with expired date')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_expired_date():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['expiryDate'] = '2020-01-01'\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id, secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(\n            secrets.CBI_client_PFX_base64,\n            secrets.CBI_client_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 401 == 400\nE        +  where 401 = <Response [401]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider_availability.py:108: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1751353661828,"stop":1751353661895,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider_availability"},{"name":"host","value":"pkrvmbietmlfzoi"},{"name":"thread","value":"2509-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":37,"unknown":0,"total":49},"items":[{"uid":"415b5c1949eca09d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/418//#testresult/415b5c1949eca09d","status":"failed","statusDetails":"AssertionError: assert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1751267317233,"stop":1751267318574,"duration":1341}},{"uid":"ddcc3a288cdb1118","reportUrl":"https://pagopa.github.io/rtp-platform-qa/417//#testresult/ddcc3a288cdb1118","status":"failed","statusDetails":"AssertionError: assert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1751180869013,"stop":1751180869933,"duration":920}},{"uid":"82456bb4d4487a22","reportUrl":"https://pagopa.github.io/rtp-platform-qa/416//#testresult/82456bb4d4487a22","status":"failed","statusDetails":"AssertionError: assert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1751094451238,"stop":1751094452509,"duration":1271}},{"uid":"a619af61bc4df2a7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/415//#testresult/a619af61bc4df2a7","status":"passed","time":{"start":1751008091660,"stop":1751008093937,"duration":2277}},{"uid":"a476be7c27eb17e4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/414//#testresult/a476be7c27eb17e4","status":"passed","time":{"start":1750947024796,"stop":1750947026401,"duration":1605}},{"uid":"f816f8b5e1e0204d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/413//#testresult/f816f8b5e1e0204d","status":"passed","time":{"start":1750924198412,"stop":1750924199461,"duration":1049}},{"uid":"358c1a6d10972e27","reportUrl":"https://pagopa.github.io/rtp-platform-qa/412//#testresult/358c1a6d10972e27","status":"passed","time":{"start":1750921679258,"stop":1750921680588,"duration":1330}},{"uid":"9241ef4a69dd5383","reportUrl":"https://pagopa.github.io/rtp-platform-qa/411//#testresult/9241ef4a69dd5383","status":"passed","time":{"start":1750856381084,"stop":1750856382362,"duration":1278}},{"uid":"21ae3b95748c3bd7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/408//#testresult/21ae3b95748c3bd7","status":"passed","time":{"start":1750835300832,"stop":1750835302393,"duration":1561}},{"uid":"55c1266a30320365","reportUrl":"https://pagopa.github.io/rtp-platform-qa/406//#testresult/55c1266a30320365","status":"passed","time":{"start":1750779067109,"stop":1750779068181,"duration":1072}},{"uid":"42b2e9cd81316f35","reportUrl":"https://pagopa.github.io/rtp-platform-qa/404//#testresult/42b2e9cd81316f35","status":"passed","time":{"start":1750756725029,"stop":1750756725986,"duration":957}},{"uid":"9fa1d805e7bf6578","reportUrl":"https://pagopa.github.io/rtp-platform-qa/403//#testresult/9fa1d805e7bf6578","status":"passed","time":{"start":1750748874462,"stop":1750748875723,"duration":1261}},{"uid":"fd827ea54a83b5e1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/402//#testresult/fd827ea54a83b5e1","status":"passed","time":{"start":1750684870285,"stop":1750684871240,"duration":955}},{"uid":"7fd2a2018cbfdb52","reportUrl":"https://pagopa.github.io/rtp-platform-qa/401//#testresult/7fd2a2018cbfdb52","status":"passed","time":{"start":1750662509385,"stop":1750662510702,"duration":1317}},{"uid":"8c4bce1edd85a311","reportUrl":"https://pagopa.github.io/rtp-platform-qa/400//#testresult/8c4bce1edd85a311","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1750576083514,"stop":1750576084537,"duration":1023}},{"uid":"93bb5374fd9e20ef","reportUrl":"https://pagopa.github.io/rtp-platform-qa/399//#testresult/93bb5374fd9e20ef","status":"passed","time":{"start":1750489650622,"stop":1750489651933,"duration":1311}},{"uid":"8471f1f7c775c713","reportUrl":"https://pagopa.github.io/rtp-platform-qa/398//#testresult/8471f1f7c775c713","status":"passed","time":{"start":1750403244236,"stop":1750403245451,"duration":1215}},{"uid":"c5efa699da3ecd4e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/397//#testresult/c5efa699da3ecd4e","status":"passed","time":{"start":1750335016899,"stop":1750335017991,"duration":1092}},{"uid":"1edb2b0cf60979cd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/396//#testresult/1edb2b0cf60979cd","status":"passed","time":{"start":1750329656525,"stop":1750329658095,"duration":1570}},{"uid":"b9beca132e2e894b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/394//#testresult/b9beca132e2e894b","status":"passed","time":{"start":1750317553003,"stop":1750317554071,"duration":1068}}]},"tags":["cbi","unhappy_path","send"]},"source":"86a7b5944b32ed6c.json","parameterValues":[]}