{"uid":"caf0604c22d3913a","name":"The service returns the mocked server error","fullName":"tests.test_send_rtp#test_receive_server_error_from_mock","historyId":"df79497008225556c6105188e0be1c16","time":{"start":1740553603519,"stop":1740553667323,"duration":63804},"status":"failed","statusMessage":"AssertionError: assert 504 == 500\n +  where 504 = <Response [504]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('The service returns the mocked server error')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_receive_server_error_from_mock():\n        mock_fiscal_code = 'RSSMRA85T10X000D'\n        expected_mocked_failure_status_code = 500\n    \n        rtp_data = generate_rtp_data()\n    \n        rtp_data['payer']['payerId'] = mock_fiscal_code\n    \n        debtor_service_provider_access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                                                      client_secret=secrets.debtor_service_provider.client_secret)\n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret)\n    \n        activate(debtor_service_provider_access_token, rtp_data['payer']['payerId'],\n                 secrets.debtor_service_provider.service_provider_id)\n    \n        response = send_rtp(access_token=creditor_service_provider_access_token, rtp_payload=rtp_data)\n>       assert response.status_code == expected_mocked_failure_status_code\nE       assert 504 == 500\nE        +  where 504 = <Response [504]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:86: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1740553578672,"stop":1740553578728,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"fv-az1675-162"},{"name":"thread","value":"2291-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":42},"items":[{"uid":"24798214b48449df","reportUrl":"https://pagopa.github.io/rtp-platform-qa/214//#testresult/24798214b48449df","status":"passed","time":{"start":1740467198628,"stop":1740467203950,"duration":5322}},{"uid":"35aaef4d6d2dfbce","reportUrl":"https://pagopa.github.io/rtp-platform-qa/213//#testresult/35aaef4d6d2dfbce","status":"passed","time":{"start":1740391822617,"stop":1740391827235,"duration":4618}},{"uid":"56325e2aaa808952","reportUrl":"https://pagopa.github.io/rtp-platform-qa/212//#testresult/56325e2aaa808952","status":"passed","time":{"start":1740380823026,"stop":1740380828118,"duration":5092}},{"uid":"a23f829277eef4f9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/211//#testresult/a23f829277eef4f9","status":"passed","time":{"start":1740294356511,"stop":1740294360911,"duration":4400}},{"uid":"c2fda5101fb0cff9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/210//#testresult/c2fda5101fb0cff9","status":"passed","time":{"start":1740207947831,"stop":1740207953060,"duration":5229}},{"uid":"8c0fea128c7322aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/209//#testresult/8c0fea128c7322aa","status":"passed","time":{"start":1740144058080,"stop":1740144062645,"duration":4565}},{"uid":"2c6d20c2b23970b1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/208//#testresult/2c6d20c2b23970b1","status":"passed","time":{"start":1740121615910,"stop":1740121621084,"duration":5174}},{"uid":"90ad3b34e6c7a88","reportUrl":"https://pagopa.github.io/rtp-platform-qa/207//#testresult/90ad3b34e6c7a88","status":"passed","time":{"start":1740039483932,"stop":1740039488376,"duration":4444}},{"uid":"2b6a196112385da8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/206//#testresult/2b6a196112385da8","status":"passed","time":{"start":1740035206943,"stop":1740035212661,"duration":5718}},{"uid":"b8a86cf9da39e889","reportUrl":"https://pagopa.github.io/rtp-platform-qa/205//#testresult/b8a86cf9da39e889","status":"passed","time":{"start":1739977936338,"stop":1739977940803,"duration":4465}},{"uid":"d225e094facb0807","reportUrl":"https://pagopa.github.io/rtp-platform-qa/204//#testresult/d225e094facb0807","status":"passed","time":{"start":1739948781609,"stop":1739948786726,"duration":5117}},{"uid":"d6e178820349f338","reportUrl":"https://pagopa.github.io/rtp-platform-qa/203//#testresult/d6e178820349f338","status":"passed","time":{"start":1739909379593,"stop":1739909384972,"duration":5379}},{"uid":"890b2441d546a2e1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/202//#testresult/890b2441d546a2e1","status":"passed","time":{"start":1739862393611,"stop":1739862399184,"duration":5573}},{"uid":"88f3d8eff36e7279","reportUrl":"https://pagopa.github.io/rtp-platform-qa/201//#testresult/88f3d8eff36e7279","status":"passed","time":{"start":1739776017249,"stop":1739776022771,"duration":5522}},{"uid":"7a9b2fffaaf09a2f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/200//#testresult/7a9b2fffaaf09a2f","status":"passed","time":{"start":1739689541713,"stop":1739689546578,"duration":4865}},{"uid":"b531d1e2af46629f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/199//#testresult/b531d1e2af46629f","status":"passed","time":{"start":1739603145492,"stop":1739603150574,"duration":5082}},{"uid":"1e652221dff46672","reportUrl":"https://pagopa.github.io/rtp-platform-qa/198//#testresult/1e652221dff46672","status":"passed","time":{"start":1739516774901,"stop":1739516779150,"duration":4249}},{"uid":"4cb26b4c0285ade6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/197//#testresult/4cb26b4c0285ade6","status":"passed","time":{"start":1739430418019,"stop":1739430422032,"duration":4013}},{"uid":"b08594660f146e6e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/196//#testresult/b08594660f146e6e","status":"passed","time":{"start":1739343983225,"stop":1739343987178,"duration":3953}},{"uid":"814555f0db32e2ed","reportUrl":"https://pagopa.github.io/rtp-platform-qa/195//#testresult/814555f0db32e2ed","status":"passed","time":{"start":1739257592152,"stop":1739257597414,"duration":5262}}]},"tags":["unhappy_path","send"]},"source":"caf0604c22d3913a.json","parameterValues":[]}