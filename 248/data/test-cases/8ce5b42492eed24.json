{"uid":"8ce5b42492eed24","name":"The service returns the mocked server error","fullName":"tests.test_send_rtp#test_receive_server_error_from_mock","historyId":"df79497008225556c6105188e0be1c16","time":{"start":1742368042589,"stop":1742368059707,"duration":17118},"status":"failed","statusMessage":"AssertionError: assert 504 == 500\n +  where 504 = <Response [504]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('The service returns the mocked server error')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_receive_server_error_from_mock():\n        mock_fiscal_code = 'RSSMRA85T10X000D'\n        expected_mocked_failure_status_code = 500\n    \n        rtp_data = generate_rtp_data()\n    \n        rtp_data['payer']['payerId'] = mock_fiscal_code\n    \n        debtor_service_provider_access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                                                      client_secret=secrets.debtor_service_provider.client_secret,\n                                                                      access_token_function=get_access_token)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        activate(debtor_service_provider_access_token, rtp_data['payer']['payerId'],\n                 secrets.debtor_service_provider.service_provider_id)\n    \n        response = send_rtp(access_token=creditor_service_provider_access_token, rtp_payload=rtp_data)\n>       assert response.status_code == expected_mocked_failure_status_code\nE       assert 504 == 500\nE        +  where 504 = <Response [504]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:97: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1742367995876,"stop":1742367995940,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"fv-az797-490"},{"name":"thread","value":"2325-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":20},"items":[{"uid":"5c4118c32a6a5d8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/247//#testresult/5c4118c32a6a5d8","status":"failed","statusDetails":"AssertionError: assert 504 == 500\n +  where 504 = <Response [504]>.status_code","time":{"start":1742290418210,"stop":1742290434189,"duration":15979}},{"uid":"3400aa38ab9a06f2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/246//#testresult/3400aa38ab9a06f2","status":"failed","statusDetails":"AssertionError: assert 404 == 500\n +  where 404 = <Response [404]>.status_code","time":{"start":1742281621823,"stop":1742281624391,"duration":2568}},{"uid":"ef2e7bf9c517ea65","reportUrl":"https://pagopa.github.io/rtp-platform-qa/245//#testresult/ef2e7bf9c517ea65","status":"passed","time":{"start":1742200616234,"stop":1742200618325,"duration":2091}},{"uid":"d94c130875360e29","reportUrl":"https://pagopa.github.io/rtp-platform-qa/244//#testresult/d94c130875360e29","status":"passed","time":{"start":1742195229444,"stop":1742195232032,"duration":2588}},{"uid":"d0013c84426814af","reportUrl":"https://pagopa.github.io/rtp-platform-qa/243//#testresult/d0013c84426814af","status":"failed","statusDetails":"AssertionError: assert 504 == 500\n +  where 504 = <Response [504]>.status_code","time":{"start":1742108802924,"stop":1742108819612,"duration":16688}},{"uid":"918517cd44b16096","reportUrl":"https://pagopa.github.io/rtp-platform-qa/242//#testresult/918517cd44b16096","status":"failed","statusDetails":"AssertionError: assert 504 == 500\n +  where 504 = <Response [504]>.status_code","time":{"start":1742022394685,"stop":1742022411087,"duration":16402}},{"uid":"80880d2ea01321e7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/241//#testresult/80880d2ea01321e7","status":"failed","statusDetails":"AssertionError: assert 504 == 500\n +  where 504 = <Response [504]>.status_code","time":{"start":1741936024708,"stop":1741936040677,"duration":15969}},{"uid":"a517b25340313746","reportUrl":"https://pagopa.github.io/rtp-platform-qa/240//#testresult/a517b25340313746","status":"failed","statusDetails":"AssertionError: assert 504 == 500\n +  where 504 = <Response [504]>.status_code","time":{"start":1741849675881,"stop":1741849739279,"duration":63398}},{"uid":"2c9c412b8cdf13bc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/239//#testresult/2c9c412b8cdf13bc","status":"failed","statusDetails":"AssertionError: assert 504 == 500\n +  where 504 = <Response [504]>.status_code","time":{"start":1741763285612,"stop":1741763348642,"duration":63030}},{"uid":"885f695f046ef21f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/238//#testresult/885f695f046ef21f","status":"failed","statusDetails":"AssertionError: assert 504 == 500\n +  where 504 = <Response [504]>.status_code","time":{"start":1741705765949,"stop":1741705828921,"duration":62972}},{"uid":"d47793a4c07faf65","reportUrl":"https://pagopa.github.io/rtp-platform-qa/237//#testresult/d47793a4c07faf65","status":"failed","statusDetails":"AssertionError: assert 504 == 500\n +  where 504 = <Response [504]>.status_code","time":{"start":1741676886187,"stop":1741676950286,"duration":64099}},{"uid":"bb6f3048c9836cfd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/236//#testresult/bb6f3048c9836cfd","status":"failed","statusDetails":"AssertionError: assert 504 == 500\n +  where 504 = <Response [504]>.status_code","time":{"start":1741631518568,"stop":1741631581542,"duration":62974}},{"uid":"3d80537a3705d3c7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/233//#testresult/3d80537a3705d3c7","status":"failed","statusDetails":"AssertionError: assert 504 == 500\n +  where 504 = <Response [504]>.status_code","time":{"start":1741603762497,"stop":1741603825367,"duration":62870}},{"uid":"d33b98a8e69ca0d2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/232//#testresult/d33b98a8e69ca0d2","status":"passed","time":{"start":1741590426573,"stop":1741590429899,"duration":3326}},{"uid":"aeaa0ad411d0f34e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/231//#testresult/aeaa0ad411d0f34e","status":"passed","time":{"start":1741503967709,"stop":1741503971523,"duration":3814}},{"uid":"e8582d99645a85e8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/230//#testresult/e8582d99645a85e8","status":"passed","time":{"start":1741417542942,"stop":1741417546045,"duration":3103}},{"uid":"aa87bbdfbf3007e6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/229//#testresult/aa87bbdfbf3007e6","status":"passed","time":{"start":1741368340237,"stop":1741368343280,"duration":3043}},{"uid":"a8bb06f457cb9d9b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/228//#testresult/a8bb06f457cb9d9b","status":"passed","time":{"start":1741365946612,"stop":1741365954600,"duration":7988}},{"uid":"adcecc5c14141414","reportUrl":"https://pagopa.github.io/rtp-platform-qa/227//#testresult/adcecc5c14141414","status":"passed","time":{"start":1741364158457,"stop":1741364162296,"duration":3839}}]},"tags":["unhappy_path","send"]},"source":"8ce5b42492eed24.json","parameterValues":[]}