{"uid":"63257844b2ad9aab","name":"An RTP is sent through CBI API","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi","historyId":"b7843ec0a9572280c9663808e1141c5c","time":{"start":1747120059750,"stop":1747120060992,"duration":1242},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('An RTP is sent through CBI API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        rtp_data = generate_rtp_data()\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1747120040270,"stop":1747120040325,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1934-885"},{"name":"thread","value":"2377-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":85,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":85},"items":[{"uid":"24087198c2c3701a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/324//#testresult/24087198c2c3701a","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1747033657600,"stop":1747033659051,"duration":1451}},{"uid":"a62d9d9aa37edd4b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/323//#testresult/a62d9d9aa37edd4b","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746947221408,"stop":1746947222812,"duration":1404}},{"uid":"3ea607778e64acb5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/322//#testresult/3ea607778e64acb5","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746860810139,"stop":1746860812081,"duration":1942}},{"uid":"80510df3ade30207","reportUrl":"https://pagopa.github.io/rtp-platform-qa/321//#testresult/80510df3ade30207","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746774440183,"stop":1746774442379,"duration":2196}},{"uid":"edc4f54cc1e5d37c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/320//#testresult/edc4f54cc1e5d37c","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746688022460,"stop":1746688023648,"duration":1188}},{"uid":"86d12a9f17989e42","reportUrl":"https://pagopa.github.io/rtp-platform-qa/319//#testresult/86d12a9f17989e42","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746601640898,"stop":1746601642050,"duration":1152}},{"uid":"111c6c01e92446c5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/318//#testresult/111c6c01e92446c5","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746515235105,"stop":1746515236920,"duration":1815}},{"uid":"c49eb451c0d6b903","reportUrl":"https://pagopa.github.io/rtp-platform-qa/317//#testresult/c49eb451c0d6b903","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746428867420,"stop":1746428868622,"duration":1202}},{"uid":"bfd1e59f565f5af4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/316//#testresult/bfd1e59f565f5af4","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746342421881,"stop":1746342424043,"duration":2162}},{"uid":"e91d74dc4cac3d2e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/315//#testresult/e91d74dc4cac3d2e","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746255998746,"stop":1746256000629,"duration":1883}},{"uid":"41f293d161a2ef30","reportUrl":"https://pagopa.github.io/rtp-platform-qa/314//#testresult/41f293d161a2ef30","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746169630561,"stop":1746169632634,"duration":2073}},{"uid":"2646b628cbb12de4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/313//#testresult/2646b628cbb12de4","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1746083255016,"stop":1746083256868,"duration":1852}},{"uid":"260907936fe1d91b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/312//#testresult/260907936fe1d91b","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745996836278,"stop":1745996837502,"duration":1224}},{"uid":"cf68b323b1b8a252","reportUrl":"https://pagopa.github.io/rtp-platform-qa/311//#testresult/cf68b323b1b8a252","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745910440188,"stop":1745910441652,"duration":1464}},{"uid":"677a907637cada1d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/310//#testresult/677a907637cada1d","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745824815991,"stop":1745824817600,"duration":1609}},{"uid":"f4518129200ca72e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/309//#testresult/f4518129200ca72e","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745737594961,"stop":1745737596479,"duration":1518}},{"uid":"a85e08d729a71d56","reportUrl":"https://pagopa.github.io/rtp-platform-qa/308//#testresult/a85e08d729a71d56","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745651196102,"stop":1745651197930,"duration":1828}},{"uid":"c82f2cfb80b6acd3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/307//#testresult/c82f2cfb80b6acd3","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745564823984,"stop":1745564825840,"duration":1856}},{"uid":"debcae71ce0edcde","reportUrl":"https://pagopa.github.io/rtp-platform-qa/306//#testresult/debcae71ce0edcde","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745491301090,"stop":1745491302980,"duration":1890}},{"uid":"c974290b9c55a89f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/305//#testresult/c974290b9c55a89f","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1745478444095,"stop":1745478445528,"duration":1433}}]},"tags":["cbi","send","happy_path"]},"source":"63257844b2ad9aab.json","parameterValues":[]}