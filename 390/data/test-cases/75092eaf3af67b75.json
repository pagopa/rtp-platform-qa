{"uid":"75092eaf3af67b75","name":"Cannot send RTP with expired date","fullName":"tests.test_debtor_service_provider_availability#test_send_rtp_to_cbi_expired_date","historyId":"6908d8a096f06149222842bbb65d22a3","time":{"start":1750170140513,"stop":1750170142000,"duration":1487},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with expired date')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_expired_date():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['expiryDate'] = '2020-01-01'\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id, secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(\n            secrets.CBI_client_PFX_base64,\n            secrets.CBI_client_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider_availability.py:107: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750170111196,"stop":1750170111250,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider_availability"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2475-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":20,"unknown":0,"total":27},"items":[{"uid":"54f0c749e74a178c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/389//#testresult/54f0c749e74a178c","status":"passed","time":{"start":1750144059030,"stop":1750144060529,"duration":1499}},{"uid":"b0e5e6d4c17521b4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/388//#testresult/b0e5e6d4c17521b4","status":"passed","time":{"start":1750069040182,"stop":1750069041588,"duration":1406}},{"uid":"f2ccfa4b1db0eb80","reportUrl":"https://pagopa.github.io/rtp-platform-qa/387//#testresult/f2ccfa4b1db0eb80","status":"passed","time":{"start":1750057720667,"stop":1750057721783,"duration":1116}},{"uid":"12dc2c2ded93aade","reportUrl":"https://pagopa.github.io/rtp-platform-qa/386//#testresult/12dc2c2ded93aade","status":"passed","time":{"start":1749971258332,"stop":1749971259478,"duration":1146}},{"uid":"f88004edb604bc93","reportUrl":"https://pagopa.github.io/rtp-platform-qa/385//#testresult/f88004edb604bc93","status":"passed","time":{"start":1749884864172,"stop":1749884865398,"duration":1226}},{"uid":"7fbeb420b96dd3f3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/384//#testresult/7fbeb420b96dd3f3","status":"passed","time":{"start":1749810130632,"stop":1749810131833,"duration":1201}},{"uid":"465ff16d6b4a3fcd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/380//#testresult/465ff16d6b4a3fcd","status":"passed","time":{"start":1749801540235,"stop":1749801541479,"duration":1244}},{"uid":"d00dd6e47f168ea7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/376//#testresult/d00dd6e47f168ea7","status":"passed","time":{"start":1749798443694,"stop":1749798444763,"duration":1069}},{"uid":"558852a4eed43fe8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/375//#testresult/558852a4eed43fe8","status":"passed","time":{"start":1749712057167,"stop":1749712058662,"duration":1495}},{"uid":"9820b0bcecf6e138","reportUrl":"https://pagopa.github.io/rtp-platform-qa/374//#testresult/9820b0bcecf6e138","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1749625646919,"stop":1749625648099,"duration":1180}},{"uid":"fe28d29e474b8963","reportUrl":"https://pagopa.github.io/rtp-platform-qa/373//#testresult/fe28d29e474b8963","status":"passed","time":{"start":1749539236516,"stop":1749539237325,"duration":809}},{"uid":"8b5553070b932ba8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/365//#testresult/8b5553070b932ba8","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1749482109218,"stop":1749482110501,"duration":1283}},{"uid":"2802f358df0492a5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/363//#testresult/2802f358df0492a5","status":"passed","time":{"start":1749452893078,"stop":1749452894015,"duration":937}},{"uid":"f146de45649cd03e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/362//#testresult/f146de45649cd03e","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1749366442942,"stop":1749366444762,"duration":1820}},{"uid":"6ff8b1b24facdc0c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/361//#testresult/6ff8b1b24facdc0c","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1749280022675,"stop":1749280023540,"duration":865}},{"uid":"3635c200b78290f7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/360//#testresult/3635c200b78290f7","status":"passed","time":{"start":1749193630248,"stop":1749193631425,"duration":1177}},{"uid":"cab7cf7597c695a9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/359//#testresult/cab7cf7597c695a9","status":"passed","time":{"start":1749107262146,"stop":1749107264090,"duration":1944}},{"uid":"80d2ad9203f5d1cf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/358//#testresult/80d2ad9203f5d1cf","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1749020841034,"stop":1749020842053,"duration":1019}},{"uid":"35a52dc6e3a4af3c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/357//#testresult/35a52dc6e3a4af3c","status":"passed","time":{"start":1748956575834,"stop":1748956577072,"duration":1238}},{"uid":"bbf2446c1a796732","reportUrl":"https://pagopa.github.io/rtp-platform-qa/356//#testresult/bbf2446c1a796732","status":"passed","time":{"start":1748953141124,"stop":1748953141971,"duration":847}}]},"tags":["cbi","unhappy_path","send"]},"source":"75092eaf3af67b75.json","parameterValues":[]}