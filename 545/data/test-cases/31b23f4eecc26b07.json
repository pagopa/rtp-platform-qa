{"uid":"31b23f4eecc26b07","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1758957732098,"stop":1758957735557,"duration":3459},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758957450177,"stop":1758957450235,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2530-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":122,"broken":19,"skipped":0,"passed":29,"unknown":0,"total":170},"items":[{"uid":"dcfecfd8345c2ae7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/544//#testresult/dcfecfd8345c2ae7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758872018579,"stop":1758872022242,"duration":3663}},{"uid":"89861629ceb8adf6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/543//#testresult/89861629ceb8adf6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758786159562,"stop":1758786162636,"duration":3074}},{"uid":"d956f50b8e3f7ed5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/542//#testresult/d956f50b8e3f7ed5","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1758699766821,"stop":1758699767939,"duration":1118}},{"uid":"45ef48161d53bbcd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/541//#testresult/45ef48161d53bbcd","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758612590296,"stop":1758612593947,"duration":3651}},{"uid":"bf5fe3c407be4a1b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/540//#testresult/bf5fe3c407be4a1b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758526255544,"stop":1758526259302,"duration":3758}},{"uid":"832fc8891504379","reportUrl":"https://pagopa.github.io/rtp-platform-qa/539//#testresult/832fc8891504379","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758439597602,"stop":1758439600907,"duration":3305}},{"uid":"761fe0a024e55d8e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/538//#testresult/761fe0a024e55d8e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758353256922,"stop":1758353260053,"duration":3131}},{"uid":"e93218f1c16ec7b4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/537//#testresult/e93218f1c16ec7b4","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1758271093398,"stop":1758271093947,"duration":549}},{"uid":"5fbb5b5580aa781b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/536//#testresult/5fbb5b5580aa781b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758267117107,"stop":1758267120036,"duration":2929}},{"uid":"1ddcb444845eb059","reportUrl":"https://pagopa.github.io/rtp-platform-qa/535//#testresult/1ddcb444845eb059","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758180722703,"stop":1758180725924,"duration":3221}},{"uid":"abcb17237bf7c9bb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/534//#testresult/abcb17237bf7c9bb","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758094300513,"stop":1758094303720,"duration":3207}},{"uid":"a5c3cc372afbfb09","reportUrl":"https://pagopa.github.io/rtp-platform-qa/533//#testresult/a5c3cc372afbfb09","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758007969965,"stop":1758007973635,"duration":3670}},{"uid":"4893e4407d8c5b6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/532//#testresult/4893e4407d8c5b6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757921595579,"stop":1757921598632,"duration":3053}},{"uid":"900ae9ba1fdf2544","reportUrl":"https://pagopa.github.io/rtp-platform-qa/531//#testresult/900ae9ba1fdf2544","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757835157070,"stop":1757835160173,"duration":3103}},{"uid":"f75b5586caa94a58","reportUrl":"https://pagopa.github.io/rtp-platform-qa/530//#testresult/f75b5586caa94a58","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757748800366,"stop":1757748803530,"duration":3164}},{"uid":"29f9d7cadbdea477","reportUrl":"https://pagopa.github.io/rtp-platform-qa/529//#testresult/29f9d7cadbdea477","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757666509426,"stop":1757666514850,"duration":5424}},{"uid":"40b233adc5038f53","reportUrl":"https://pagopa.github.io/rtp-platform-qa/528//#testresult/40b233adc5038f53","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757661701409,"stop":1757661704542,"duration":3133}},{"uid":"4564f04ae444893","reportUrl":"https://pagopa.github.io/rtp-platform-qa/527//#testresult/4564f04ae444893","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757598402871,"stop":1757598406067,"duration":3196}},{"uid":"24b368621e0bc07d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/526//#testresult/24b368621e0bc07d","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757575330975,"stop":1757575333902,"duration":2927}},{"uid":"d6eb623cae60dae6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/525//#testresult/d6eb623cae60dae6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757489083748,"stop":1757489087201,"duration":3453}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"31b23f4eecc26b07.json","parameterValues":[]}