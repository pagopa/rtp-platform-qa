{"uid":"813386e29d978d35","name":"A debtor cannot be activated more than once","fullName":"tests.test_activation#test_fail_activate_debtor_two_times","historyId":"8704b37d564cbbe926da79ebe6202dbe","time":{"start":1748156829085,"stop":1748156830795,"duration":1710},"status":"failed","statusMessage":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","statusTrace":"@allure.feature('Activation')\n    @allure.story('Debtor activation')\n    @allure.title('A debtor cannot be activated more than once')\n    @pytest.mark.activation\n    @pytest.mark.unhappy_path\n    def test_fail_activate_debtor_two_times():\n        access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                              client_secret=secrets.debtor_service_provider.client_secret,\n                                              access_token_function=get_access_token)\n        debtor_fc = fake_fc()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, f'Error activating debtor, expected 201 but got {res.status_code}'\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 409, f'Error activating debtor, expected 409 but got {res.status_code}'\n>       assert res.json()['errors'][0]['code'] == '01031000F'\nE       AssertionError: assert '01031000E' == '01031000F'\nE         \nE         - 01031000F\nE         ?         ^\nE         + 01031000E\nE         ?         ^\n\nfunctional-tests/tests/test_activation.py:115: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748156776857,"stop":1748156776911,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Activation"},{"name":"story","value":"Debtor activation"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"activation"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2495-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":34,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":34},"items":[{"uid":"e4c0233f9fecd1af","reportUrl":"https://pagopa.github.io/rtp-platform-qa/338//#testresult/e4c0233f9fecd1af","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748070402782,"stop":1748070404198,"duration":1416}},{"uid":"64cced64f9322eb7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/337//#testresult/64cced64f9322eb7","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747984028154,"stop":1747984029216,"duration":1062}},{"uid":"7a16fba1b84a943","reportUrl":"https://pagopa.github.io/rtp-platform-qa/336//#testresult/7a16fba1b84a943","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747897629137,"stop":1747897630748,"duration":1611}},{"uid":"970bc7e09412d124","reportUrl":"https://pagopa.github.io/rtp-platform-qa/335//#testresult/970bc7e09412d124","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747840412810,"stop":1747840414252,"duration":1442}},{"uid":"45baacc0e3d4031b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/334//#testresult/45baacc0e3d4031b","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747811220069,"stop":1747811221238,"duration":1169}},{"uid":"91fc297dae56d3e3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/333//#testresult/91fc297dae56d3e3","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747724831743,"stop":1747724832998,"duration":1255}},{"uid":"2c7c4105f5eb3683","reportUrl":"https://pagopa.github.io/rtp-platform-qa/332//#testresult/2c7c4105f5eb3683","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747661441263,"stop":1747661442840,"duration":1577}},{"uid":"69124b0398fd3902","reportUrl":"https://pagopa.github.io/rtp-platform-qa/331//#testresult/69124b0398fd3902","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747638461964,"stop":1747638463545,"duration":1581}},{"uid":"a7086a1590998086","reportUrl":"https://pagopa.github.io/rtp-platform-qa/330//#testresult/a7086a1590998086","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747551986434,"stop":1747551987920,"duration":1486}},{"uid":"a9ab4b300e1ddb66","reportUrl":"https://pagopa.github.io/rtp-platform-qa/329//#testresult/a9ab4b300e1ddb66","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747465595731,"stop":1747465597136,"duration":1405}},{"uid":"7aaef25b408d9fde","reportUrl":"https://pagopa.github.io/rtp-platform-qa/328//#testresult/7aaef25b408d9fde","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747379226121,"stop":1747379227684,"duration":1563}},{"uid":"d4e143388bbb0414","reportUrl":"https://pagopa.github.io/rtp-platform-qa/327//#testresult/d4e143388bbb0414","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747292832085,"stop":1747292833384,"duration":1299}},{"uid":"fdbfc5aff8dfd1b6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/326//#testresult/fdbfc5aff8dfd1b6","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747206433531,"stop":1747206435574,"duration":2043}},{"uid":"f5926f4dc811839b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/325//#testresult/f5926f4dc811839b","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747120051382,"stop":1747120052669,"duration":1287}},{"uid":"1dd9c7791d246c78","reportUrl":"https://pagopa.github.io/rtp-platform-qa/324//#testresult/1dd9c7791d246c78","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1747033648855,"stop":1747033650204,"duration":1349}},{"uid":"82042b9b603f1935","reportUrl":"https://pagopa.github.io/rtp-platform-qa/323//#testresult/82042b9b603f1935","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746947212966,"stop":1746947214258,"duration":1292}},{"uid":"5d4891f5e0246efc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/322//#testresult/5d4891f5e0246efc","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746860798654,"stop":1746860800324,"duration":1670}},{"uid":"77dc68aa612a4e5c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/321//#testresult/77dc68aa612a4e5c","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746774422901,"stop":1746774424932,"duration":2031}},{"uid":"6181d0ba30c4b2d1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/320//#testresult/6181d0ba30c4b2d1","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746688013450,"stop":1746688014698,"duration":1248}},{"uid":"82c80893d6f28db7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/319//#testresult/82c80893d6f28db7","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1746601627578,"stop":1746601628680,"duration":1102}}]},"tags":["activation","unhappy_path"]},"source":"813386e29d978d35.json","parameterValues":[]}