{"uid":"6482d58d1c23b1c0","name":"Cannot send RTP with invalid amount","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi_invalid_amount","historyId":"3a2d68c98ccbf254d83aa6a209f2af2f","time":{"start":1745478445538,"stop":1745478447008,"duration":1470},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with invalid amount')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_invalid_amount():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['amount'] = -1\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:54: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1745478430596,"stop":1745478430652,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1075-219"},{"name":"thread","value":"2330-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":64,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":65},"items":[{"uid":"a646ec447dc39db3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/304//#testresult/a646ec447dc39db3","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745392049806,"stop":1745392051669,"duration":1863}},{"uid":"789a8b6d4500e272","reportUrl":"https://pagopa.github.io/rtp-platform-qa/303//#testresult/789a8b6d4500e272","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745305628495,"stop":1745305629829,"duration":1334}},{"uid":"ad3b579009f397d7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/302//#testresult/ad3b579009f397d7","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745219268820,"stop":1745219270557,"duration":1737}},{"uid":"83a0b3d257741f64","reportUrl":"https://pagopa.github.io/rtp-platform-qa/301//#testresult/83a0b3d257741f64","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745132798702,"stop":1745132800261,"duration":1559}},{"uid":"2caad4c0d4ec92e0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/300//#testresult/2caad4c0d4ec92e0","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745046394761,"stop":1745046396254,"duration":1493}},{"uid":"887148718ea6b08c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/299//#testresult/887148718ea6b08c","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744960017194,"stop":1744960018526,"duration":1332}},{"uid":"eec6d07e93947566","reportUrl":"https://pagopa.github.io/rtp-platform-qa/298//#testresult/eec6d07e93947566","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744902282710,"stop":1744902284358,"duration":1648}},{"uid":"84602a66abda2c49","reportUrl":"https://pagopa.github.io/rtp-platform-qa/297//#testresult/84602a66abda2c49","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744873645464,"stop":1744873646532,"duration":1068}},{"uid":"37b3fb784d3efd7d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/296//#testresult/37b3fb784d3efd7d","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744799606737,"stop":1744799607896,"duration":1159}},{"uid":"3d279d12038df17c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/295//#testresult/3d279d12038df17c","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744787231707,"stop":1744787233107,"duration":1400}},{"uid":"4293d65b2264b612","reportUrl":"https://pagopa.github.io/rtp-platform-qa/294//#testresult/4293d65b2264b612","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744727118445,"stop":1744727120592,"duration":2147}},{"uid":"7622b5841a7a9cc1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/293//#testresult/7622b5841a7a9cc1","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744726255139,"stop":1744726256688,"duration":1549}},{"uid":"2d399429ee845a2f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/291//#testresult/2d399429ee845a2f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744700827604,"stop":1744700828858,"duration":1254}},{"uid":"a721d83a93df46c1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/290//#testresult/a721d83a93df46c1","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744640112294,"stop":1744640113671,"duration":1377}},{"uid":"1a4264711e0c2067","reportUrl":"https://pagopa.github.io/rtp-platform-qa/289//#testresult/1a4264711e0c2067","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744614442208,"stop":1744614443434,"duration":1226}},{"uid":"46e79860ad4be705","reportUrl":"https://pagopa.github.io/rtp-platform-qa/288//#testresult/46e79860ad4be705","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744528020118,"stop":1744528022339,"duration":2221}},{"uid":"b62443176aefbc4c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/287//#testresult/b62443176aefbc4c","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744441592776,"stop":1744441594024,"duration":1248}},{"uid":"9c50f288632c4e3f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/285//#testresult/9c50f288632c4e3f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744355224435,"stop":1744355226414,"duration":1979}},{"uid":"822726f8d1967234","reportUrl":"https://pagopa.github.io/rtp-platform-qa/283//#testresult/822726f8d1967234","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744268809332,"stop":1744268810793,"duration":1461}},{"uid":"e14e484dd656d739","reportUrl":"https://pagopa.github.io/rtp-platform-qa/282//#testresult/e14e484dd656d739","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744215119976,"stop":1744215121302,"duration":1326}}]},"tags":["cbi","unhappy_path","send"]},"source":"6482d58d1c23b1c0.json","parameterValues":[]}