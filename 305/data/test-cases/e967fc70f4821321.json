{"uid":"e967fc70f4821321","name":"Cannot send RTP with expired date","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi_expired_date","historyId":"af763254cdd5d120d914e8ce75139912","time":{"start":1745478447012,"stop":1745478448480,"duration":1468},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with expired date')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_expired_date():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['expiryDate'] = '2020-01-01'\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:76: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1745478430596,"stop":1745478430652,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1075-219"},{"name":"thread","value":"2330-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":64,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":65},"items":[{"uid":"98f84f176ea51e01","reportUrl":"https://pagopa.github.io/rtp-platform-qa/304//#testresult/98f84f176ea51e01","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745392051672,"stop":1745392053731,"duration":2059}},{"uid":"7ece09b3ace4f551","reportUrl":"https://pagopa.github.io/rtp-platform-qa/303//#testresult/7ece09b3ace4f551","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745305629833,"stop":1745305630904,"duration":1071}},{"uid":"c261d0b91a937a79","reportUrl":"https://pagopa.github.io/rtp-platform-qa/302//#testresult/c261d0b91a937a79","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745219270560,"stop":1745219272299,"duration":1739}},{"uid":"77362fcb20e4507a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/301//#testresult/77362fcb20e4507a","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745132800265,"stop":1745132801888,"duration":1623}},{"uid":"f43c4a8671394ab4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/300//#testresult/f43c4a8671394ab4","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1745046396258,"stop":1745046397771,"duration":1513}},{"uid":"65737d9615d2ee28","reportUrl":"https://pagopa.github.io/rtp-platform-qa/299//#testresult/65737d9615d2ee28","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744960018529,"stop":1744960019705,"duration":1176}},{"uid":"d0224f32510610e4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/298//#testresult/d0224f32510610e4","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744902284362,"stop":1744902286326,"duration":1964}},{"uid":"8ebe5e1f3b5a525a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/297//#testresult/8ebe5e1f3b5a525a","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744873646535,"stop":1744873648052,"duration":1517}},{"uid":"d2dbb8f30e156adb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/296//#testresult/d2dbb8f30e156adb","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744799607899,"stop":1744799609361,"duration":1462}},{"uid":"2f0c0c38daac7a9f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/295//#testresult/2f0c0c38daac7a9f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744787233110,"stop":1744787234543,"duration":1433}},{"uid":"38cedda72a1eed5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/294//#testresult/38cedda72a1eed5","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744727120596,"stop":1744727122493,"duration":1897}},{"uid":"7139863890d7e124","reportUrl":"https://pagopa.github.io/rtp-platform-qa/293//#testresult/7139863890d7e124","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744726256692,"stop":1744726257809,"duration":1117}},{"uid":"946ae40587106ce0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/291//#testresult/946ae40587106ce0","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744700828862,"stop":1744700830000,"duration":1138}},{"uid":"b31d2bf975d4dd1d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/290//#testresult/b31d2bf975d4dd1d","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744640113674,"stop":1744640115024,"duration":1350}},{"uid":"84617750a619e133","reportUrl":"https://pagopa.github.io/rtp-platform-qa/289//#testresult/84617750a619e133","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744614443437,"stop":1744614444986,"duration":1549}},{"uid":"8b21697bd65eaa91","reportUrl":"https://pagopa.github.io/rtp-platform-qa/288//#testresult/8b21697bd65eaa91","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744528022343,"stop":1744528023989,"duration":1646}},{"uid":"f66fe473cb7e918f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/287//#testresult/f66fe473cb7e918f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744441594028,"stop":1744441595335,"duration":1307}},{"uid":"7a7acb10f9405a38","reportUrl":"https://pagopa.github.io/rtp-platform-qa/285//#testresult/7a7acb10f9405a38","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744355226417,"stop":1744355228175,"duration":1758}},{"uid":"3aca3cf1c6b87a84","reportUrl":"https://pagopa.github.io/rtp-platform-qa/283//#testresult/3aca3cf1c6b87a84","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744268810796,"stop":1744268812105,"duration":1309}},{"uid":"77e79f887ca83c54","reportUrl":"https://pagopa.github.io/rtp-platform-qa/282//#testresult/77e79f887ca83c54","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1744215121306,"stop":1744215122430,"duration":1124}}]},"tags":["cbi","unhappy_path","send"]},"source":"e967fc70f4821321.json","parameterValues":[]}