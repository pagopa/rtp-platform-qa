{"uid":"33afb9d2dbf10dd3","name":"A debtor is activated and retrieved by activation id","fullName":"tests.test_activation#test_get_activation_by_id","historyId":"5802a301b59e0c151ffcd2948b2fd364","time":{"start":1760340148740,"stop":1760340150682,"duration":1942},"status":"failed","statusMessage":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('Activation')\n    @allure.story('Get Debtor activation by ID')\n    @allure.title('A debtor is activated and retrieved by activation id')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.happy_path\n    def test_get_activation_by_id():\n        access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n        debtor_fc = fake_fc()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, 'Error activating debtor'\n    \n        location = res.headers['Location']\n        activation_id = location.split('/')[-1]\n        assert bool(uuidv4_pattern.fullmatch(activation_id))\n    \n        res = get_activation_by_id(access_token, activation_id)\n>       assert res.status_code == 200, f'Expected 200 but got {res.status_code}'\nE       AssertionError: Expected 200 but got 500\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_activation.py:91: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1760340142691,"stop":1760340142749,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Activation"},{"name":"story","value":"Get Debtor activation by ID"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2561-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":74,"broken":2,"skipped":0,"passed":52,"unknown":0,"total":128},"items":[{"uid":"6f425c64dce36903","reportUrl":"https://pagopa.github.io/rtp-platform-qa/565//#testresult/6f425c64dce36903","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760253539379,"stop":1760253541363,"duration":1984}},{"uid":"18605c30309ac949","reportUrl":"https://pagopa.github.io/rtp-platform-qa/564//#testresult/18605c30309ac949","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1760167129657,"stop":1760167130967,"duration":1310}},{"uid":"db3bd18d5bf2b404","reportUrl":"https://pagopa.github.io/rtp-platform-qa/563//#testresult/db3bd18d5bf2b404","status":"passed","time":{"start":1760080839243,"stop":1760080840784,"duration":1541}},{"uid":"dc0d951cd3d5e4e5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/562//#testresult/dc0d951cd3d5e4e5","status":"passed","time":{"start":1759994473104,"stop":1759994474965,"duration":1861}},{"uid":"1e004bd61a5dfd4c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/561//#testresult/1e004bd61a5dfd4c","status":"passed","time":{"start":1759929000563,"stop":1759929002356,"duration":1793}},{"uid":"f4183ef666931a5a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/560//#testresult/f4183ef666931a5a","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759920818498,"stop":1759920819796,"duration":1298}},{"uid":"bbac2918cf13d8cc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/559//#testresult/bbac2918cf13d8cc","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759919577323,"stop":1759919578702,"duration":1379}},{"uid":"ac12585d008b1ed5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/558//#testresult/ac12585d008b1ed5","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759908028385,"stop":1759908029944,"duration":1559}},{"uid":"c29a7dbcf76b6041","reportUrl":"https://pagopa.github.io/rtp-platform-qa/557//#testresult/c29a7dbcf76b6041","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759821663155,"stop":1759821664482,"duration":1327}},{"uid":"69e5476e33b7e699","reportUrl":"https://pagopa.github.io/rtp-platform-qa/556//#testresult/69e5476e33b7e699","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759735307062,"stop":1759735309228,"duration":2166}},{"uid":"3b483808623ceea7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/555//#testresult/3b483808623ceea7","status":"passed","time":{"start":1759648695051,"stop":1759648696461,"duration":1410}},{"uid":"b664501d63f9ba42","reportUrl":"https://pagopa.github.io/rtp-platform-qa/554//#testresult/b664501d63f9ba42","status":"passed","time":{"start":1759562325730,"stop":1759562327812,"duration":2082}},{"uid":"741e3bcaad33cc0a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/553//#testresult/741e3bcaad33cc0a","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759483527654,"stop":1759483529786,"duration":2132}},{"uid":"86f0359e2e22dd3e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/552//#testresult/86f0359e2e22dd3e","status":"passed","time":{"start":1759476005723,"stop":1759476007917,"duration":2194}},{"uid":"f6a4225db7a41023","reportUrl":"https://pagopa.github.io/rtp-platform-qa/551//#testresult/f6a4225db7a41023","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759389590419,"stop":1759389591748,"duration":1329}},{"uid":"4eb54e052b6e8c73","reportUrl":"https://pagopa.github.io/rtp-platform-qa/550//#testresult/4eb54e052b6e8c73","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759315744700,"stop":1759315746106,"duration":1406}},{"uid":"cb4f4b51d93d1258","reportUrl":"https://pagopa.github.io/rtp-platform-qa/549//#testresult/cb4f4b51d93d1258","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759303321371,"stop":1759303322751,"duration":1380}},{"uid":"acd045077177d19f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/548//#testresult/acd045077177d19f","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759216924804,"stop":1759216926632,"duration":1828}},{"uid":"23bf704e0c19da67","reportUrl":"https://pagopa.github.io/rtp-platform-qa/547//#testresult/23bf704e0c19da67","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759130541689,"stop":1759130543138,"duration":1449}},{"uid":"37da21af22216a16","reportUrl":"https://pagopa.github.io/rtp-platform-qa/546//#testresult/37da21af22216a16","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1759043934307,"stop":1759043936514,"duration":2207}}]},"tags":["auth","activation","happy_path"]},"source":"33afb9d2dbf10dd3.json","parameterValues":[]}