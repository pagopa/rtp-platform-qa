{"uid":"f673c55cff64a7e5","name":"A debtor is activated and retrieved by activation id","fullName":"tests.test_activation#test_get_activation_by_id","historyId":"5802a301b59e0c151ffcd2948b2fd364","time":{"start":1758612095299,"stop":1758612097386,"duration":2087},"status":"failed","statusMessage":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('Activation')\n    @allure.story('Get Debtor activation by ID')\n    @allure.title('A debtor is activated and retrieved by activation id')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.happy_path\n    def test_get_activation_by_id():\n        access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n        debtor_fc = fake_fc()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, 'Error activating debtor'\n    \n        location = res.headers['Location']\n        activation_id = location.split('/')[-1]\n        assert bool(uuidv4_pattern.fullmatch(activation_id))\n    \n        res = get_activation_by_id(access_token, activation_id)\n>       assert res.status_code == 200, f'Expected 200 but got {res.status_code}'\nE       AssertionError: Expected 200 but got 500\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_activation.py:91: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758612090048,"stop":1758612090106,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Activation"},{"name":"story","value":"Get Debtor activation by ID"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2477-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":55,"broken":2,"skipped":0,"passed":46,"unknown":0,"total":103},"items":[{"uid":"8ee4f52febd9cf2d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/540//#testresult/8ee4f52febd9cf2d","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758525759611,"stop":1758525761820,"duration":2209}},{"uid":"c781782a4b8edeea","reportUrl":"https://pagopa.github.io/rtp-platform-qa/539//#testresult/c781782a4b8edeea","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758439107438,"stop":1758439109521,"duration":2083}},{"uid":"faa34d85380a7b68","reportUrl":"https://pagopa.github.io/rtp-platform-qa/538//#testresult/faa34d85380a7b68","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758352764189,"stop":1758352766318,"duration":2129}},{"uid":"48edcbda45cdad80","reportUrl":"https://pagopa.github.io/rtp-platform-qa/537//#testresult/48edcbda45cdad80","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1758270981022,"stop":1758270981591,"duration":569}},{"uid":"9d6e42b1ca2da1b5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/536//#testresult/9d6e42b1ca2da1b5","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758266438039,"stop":1758266439358,"duration":1319}},{"uid":"1c84bb685cdb8c0e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/535//#testresult/1c84bb685cdb8c0e","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758180019296,"stop":1758180021224,"duration":1928}},{"uid":"e29847e562249582","reportUrl":"https://pagopa.github.io/rtp-platform-qa/534//#testresult/e29847e562249582","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758093623270,"stop":1758093624654,"duration":1384}},{"uid":"a9b2ef7d2a2d4c20","reportUrl":"https://pagopa.github.io/rtp-platform-qa/533//#testresult/a9b2ef7d2a2d4c20","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1758007281445,"stop":1758007282962,"duration":1517}},{"uid":"b1800e7e7cefeab1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/532//#testresult/b1800e7e7cefeab1","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757920913736,"stop":1757920915226,"duration":1490}},{"uid":"293f55bf8dfde9ef","reportUrl":"https://pagopa.github.io/rtp-platform-qa/531//#testresult/293f55bf8dfde9ef","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757834346803,"stop":1757834348558,"duration":1755}},{"uid":"96dd790330926a3b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/530//#testresult/96dd790330926a3b","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757747898553,"stop":1757747899949,"duration":1396}},{"uid":"bddab4ddf81a5552","reportUrl":"https://pagopa.github.io/rtp-platform-qa/529//#testresult/bddab4ddf81a5552","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757665802058,"stop":1757665804364,"duration":2306}},{"uid":"97f9985bf6ceaa1d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/528//#testresult/97f9985bf6ceaa1d","status":"passed","time":{"start":1757661594485,"stop":1757661596235,"duration":1750}},{"uid":"50920a4a2a9a09a8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/527//#testresult/50920a4a2a9a09a8","status":"passed","time":{"start":1757598302755,"stop":1757598304333,"duration":1578}},{"uid":"db9ab3196eabca63","reportUrl":"https://pagopa.github.io/rtp-platform-qa/526//#testresult/db9ab3196eabca63","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757575248930,"stop":1757575250382,"duration":1452}},{"uid":"f49b7dd657dee836","reportUrl":"https://pagopa.github.io/rtp-platform-qa/525//#testresult/f49b7dd657dee836","status":"failed","statusDetails":"AssertionError: Error activating debtor\nassert 503 == 201\n +  where 503 = <Response [503]>.status_code","time":{"start":1757488884158,"stop":1757488891665,"duration":7507}},{"uid":"b5a31a54dc8fd7d5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/524//#testresult/b5a31a54dc8fd7d5","status":"failed","statusDetails":"AssertionError: Expected 200 but got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1757402479081,"stop":1757402480401,"duration":1320}},{"uid":"243e3b0a471c65a3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/523//#testresult/243e3b0a471c65a3","status":"passed","time":{"start":1757316077800,"stop":1757316079099,"duration":1299}},{"uid":"46b8d100874b2c48","reportUrl":"https://pagopa.github.io/rtp-platform-qa/522//#testresult/46b8d100874b2c48","status":"passed","time":{"start":1757229563306,"stop":1757229564792,"duration":1486}},{"uid":"918565b95843d250","reportUrl":"https://pagopa.github.io/rtp-platform-qa/521//#testresult/918565b95843d250","status":"passed","time":{"start":1757143091185,"stop":1757143093160,"duration":1975}}]},"tags":["auth","activation","happy_path"]},"source":"f673c55cff64a7e5.json","parameterValues":[]}