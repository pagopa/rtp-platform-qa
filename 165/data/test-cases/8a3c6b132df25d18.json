{"uid":"8a3c6b132df25d18","name":"Debtor fiscal code must be lower case during RTP send","fullName":"tests.test_send_rtp#test_send_rtp_api","historyId":"6c14d2fbb180e49a106680915fe95577","time":{"start":1737356810978,"stop":1737356814491,"duration":3513},"status":"failed","statusMessage":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('Debtor fiscal code must be lower case during RTP send')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_send_rtp_api():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                                                      client_secret=secrets.debtor_service_provider.client_secret)\n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret)\n    \n        res = activate(debtor_service_provider_access_token, rtp_data['payerId'],\n                       secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, 'Error activating debtor'\n    \n        rtp_data['payerId'] = rtp_data['payerId'].lower()\n        response = send_rtp(access_token=creditor_service_provider_access_token, rtp_payload=rtp_data)\n>       assert response.status_code == 422\nE       assert 404 == 422\nE        +  where 404 = <Response [404]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:53: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1737356775099,"stop":1737356775155,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"fv-az1921-623"},{"name":"thread","value":"2268-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":35,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":37},"items":[{"uid":"a1ec6f78abeb68dd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/164//#testresult/a1ec6f78abeb68dd","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1737270368856,"stop":1737270372388,"duration":3532}},{"uid":"ddf3d1896b8b7c29","reportUrl":"https://pagopa.github.io/rtp-platform-qa/163//#testresult/ddf3d1896b8b7c29","status":"failed","statusDetails":"AssertionError: assert 404 == 422\n +  where 404 = <Response [404]>.status_code","time":{"start":1737183977590,"stop":1737183980475,"duration":2885}},{"uid":"485918dd802c2032","reportUrl":"https://pagopa.github.io/rtp-platform-qa/162//#testresult/485918dd802c2032","status":"failed","statusDetails":"AssertionError: assert 400 == 422\n +  where 400 = <Response [400]>.status_code","time":{"start":1737108733936,"stop":1737108736986,"duration":3050}},{"uid":"d9a1123b89b060da","reportUrl":"https://pagopa.github.io/rtp-platform-qa/161//#testresult/d9a1123b89b060da","status":"failed","statusDetails":"AssertionError: assert 400 == 422\n +  where 400 = <Response [400]>.status_code","time":{"start":1737107600633,"stop":1737107604503,"duration":3870}},{"uid":"f83acae21c8eb3b1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/160//#testresult/f83acae21c8eb3b1","status":"failed","statusDetails":"AssertionError: assert 400 == 422\n +  where 400 = <Response [400]>.status_code","time":{"start":1737097588565,"stop":1737097591676,"duration":3111}},{"uid":"99bf1a156d1422ef","reportUrl":"https://pagopa.github.io/rtp-platform-qa/159//#testresult/99bf1a156d1422ef","status":"passed","time":{"start":1737039676546,"stop":1737039680755,"duration":4209}},{"uid":"5601bfcf50a46ae","reportUrl":"https://pagopa.github.io/rtp-platform-qa/158//#testresult/5601bfcf50a46ae","status":"passed","time":{"start":1737038779297,"stop":1737038782207,"duration":2910}},{"uid":"6706290a44fe7fdd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/157//#testresult/6706290a44fe7fdd","status":"failed","statusDetails":"AssertionError: assert 400 == 422\n +  where 400 = <Response [400]>.status_code","time":{"start":1737011192296,"stop":1737011196051,"duration":3755}},{"uid":"d1d5f5b5b6d11e84","reportUrl":"https://pagopa.github.io/rtp-platform-qa/156//#testresult/d1d5f5b5b6d11e84","status":"failed","statusDetails":"AssertionError: assert 500 == 422\n +  where 500 = <Response [500]>.status_code","time":{"start":1736924777785,"stop":1736924780637,"duration":2852}},{"uid":"5e0640f48ccad48e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/155//#testresult/5e0640f48ccad48e","status":"failed","statusDetails":"AssertionError: assert 500 == 422\n +  where 500 = <Response [500]>.status_code","time":{"start":1736873410046,"stop":1736873412947,"duration":2901}},{"uid":"40bab48498cd5335","reportUrl":"https://pagopa.github.io/rtp-platform-qa/154//#testresult/40bab48498cd5335","status":"failed","statusDetails":"AssertionError: assert 500 == 422\n +  where 500 = <Response [500]>.status_code","time":{"start":1736872834213,"stop":1736872838137,"duration":3924}},{"uid":"fef500d365f287be","reportUrl":"https://pagopa.github.io/rtp-platform-qa/153//#testresult/fef500d365f287be","status":"failed","statusDetails":"AssertionError: assert 500 == 422\n +  where 500 = <Response [500]>.status_code","time":{"start":1736853647676,"stop":1736853650558,"duration":2882}},{"uid":"da5340869cd939c5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/152//#testresult/da5340869cd939c5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1736838380716,"stop":1736838382047,"duration":1331}},{"uid":"4d5eec4a6348afc0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/151//#testresult/4d5eec4a6348afc0","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1736752041859,"stop":1736752043143,"duration":1284}},{"uid":"cd125af785c14ecb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/150//#testresult/cd125af785c14ecb","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1736665559239,"stop":1736665560571,"duration":1332}},{"uid":"115e7214ca121fee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/149//#testresult/115e7214ca121fee","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1736579159888,"stop":1736579161218,"duration":1330}},{"uid":"f010e0b14ea7d23f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/148//#testresult/f010e0b14ea7d23f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1736492791842,"stop":1736492793759,"duration":1917}},{"uid":"d387f98b1ba218b2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/147//#testresult/d387f98b1ba218b2","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1736433707074,"stop":1736433708283,"duration":1209}},{"uid":"dd25afb6bc3062ae","reportUrl":"https://pagopa.github.io/rtp-platform-qa/146//#testresult/dd25afb6bc3062ae","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1736410369320,"stop":1736410371125,"duration":1805}},{"uid":"400810202b62d603","reportUrl":"https://pagopa.github.io/rtp-platform-qa/145//#testresult/400810202b62d603","status":"failed","statusDetails":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","time":{"start":1736406365784,"stop":1736406366265,"duration":481}}]},"tags":["unhappy_path","send"]},"source":"8a3c6b132df25d18.json","parameterValues":[]}