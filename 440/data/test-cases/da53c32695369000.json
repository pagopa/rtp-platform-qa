{"uid":"da53c32695369000","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1752390581871,"stop":1752390589206,"duration":7335},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1752390488189,"stop":1752390488245,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmq0rgcvqdmg"},{"name":"thread","value":"2499-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":49,"broken":1,"skipped":0,"passed":18,"unknown":0,"total":68},"items":[{"uid":"986aa397f23f9226","reportUrl":"https://pagopa.github.io/rtp-platform-qa/439//#testresult/986aa397f23f9226","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1752304114148,"stop":1752304122777,"duration":8629}},{"uid":"901ccbdc19c79c59","reportUrl":"https://pagopa.github.io/rtp-platform-qa/438//#testresult/901ccbdc19c79c59","status":"passed","time":{"start":1752217746712,"stop":1752217754343,"duration":7631}},{"uid":"273520a6aa0f8da4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/437//#testresult/273520a6aa0f8da4","status":"passed","time":{"start":1752163226698,"stop":1752163229893,"duration":3195}},{"uid":"6c5cfec426294da4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/436//#testresult/6c5cfec426294da4","status":"passed","time":{"start":1752160541890,"stop":1752160544254,"duration":2364}},{"uid":"b29f8a5889bb5d93","reportUrl":"https://pagopa.github.io/rtp-platform-qa/435//#testresult/b29f8a5889bb5d93","status":"passed","time":{"start":1752145276871,"stop":1752145281209,"duration":4338}},{"uid":"7bd7616a8e48414e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/434//#testresult/7bd7616a8e48414e","status":"passed","time":{"start":1752131355500,"stop":1752131362737,"duration":7237}},{"uid":"44710fcacb221804","reportUrl":"https://pagopa.github.io/rtp-platform-qa/432//#testresult/44710fcacb221804","status":"passed","time":{"start":1752044928535,"stop":1752044934742,"duration":6207}},{"uid":"a8afe5479447bc07","reportUrl":"https://pagopa.github.io/rtp-platform-qa/431//#testresult/a8afe5479447bc07","status":"passed","time":{"start":1751958526848,"stop":1751958530995,"duration":4147}},{"uid":"45941c82e2dc5fc4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/430//#testresult/45941c82e2dc5fc4","status":"passed","time":{"start":1751882705844,"stop":1751882709109,"duration":3265}},{"uid":"73f4194bfcce4f87","reportUrl":"https://pagopa.github.io/rtp-platform-qa/429//#testresult/73f4194bfcce4f87","status":"passed","time":{"start":1751872159216,"stop":1751872163865,"duration":4649}},{"uid":"3521a3cc7241dc8e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/428//#testresult/3521a3cc7241dc8e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751785663425,"stop":1751785672505,"duration":9080}},{"uid":"cbb8739efff84f12","reportUrl":"https://pagopa.github.io/rtp-platform-qa/427//#testresult/cbb8739efff84f12","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751699271414,"stop":1751699278999,"duration":7585}},{"uid":"dcb227211d7a5ee4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/426//#testresult/dcb227211d7a5ee4","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751612911014,"stop":1751612913995,"duration":2981}},{"uid":"f51fadaef44397f0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/425//#testresult/f51fadaef44397f0","status":"passed","time":{"start":1751526531159,"stop":1751526537733,"duration":6574}},{"uid":"9be08406dcaafcb6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/424//#testresult/9be08406dcaafcb6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751440122121,"stop":1751440131746,"duration":9625}},{"uid":"50a648fec780db13","reportUrl":"https://pagopa.github.io/rtp-platform-qa/423//#testresult/50a648fec780db13","status":"passed","time":{"start":1751383905683,"stop":1751383908203,"duration":2520}},{"uid":"9c55c2399ab681a3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/420//#testresult/9c55c2399ab681a3","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751360018212,"stop":1751360021918,"duration":3706}},{"uid":"adef16e3b05a4c44","reportUrl":"https://pagopa.github.io/rtp-platform-qa/421//#testresult/adef16e3b05a4c44","status":"passed","time":{"start":1751360039610,"stop":1751360042330,"duration":2720}},{"uid":"2635d17e2cad95a3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/419//#testresult/2635d17e2cad95a3","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751353704091,"stop":1751353713495,"duration":9404}},{"uid":"517b7618e79c9c3e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/418//#testresult/517b7618e79c9c3e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751267333942,"stop":1751267336919,"duration":2977}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"da53c32695369000.json","parameterValues":[]}