{"uid":"cbb8739efff84f12","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1751699271414,"stop":1751699278999,"duration":7585},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature(\"RTP Send\")\n    @allure.story(\"Service provider sends an RTP to a provider through Sender\")\n    @allure.title(\"An RTP is sent to a CBI service with activated fiscal code\")\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1751699173856,"stop":1751699173913,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmbietmlfzoi"},{"name":"thread","value":"2498-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":46,"broken":1,"skipped":0,"passed":9,"unknown":0,"total":56},"items":[{"uid":"dcb227211d7a5ee4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/426//#testresult/dcb227211d7a5ee4","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751612911014,"stop":1751612913995,"duration":2981}},{"uid":"f51fadaef44397f0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/425//#testresult/f51fadaef44397f0","status":"passed","time":{"start":1751526531159,"stop":1751526537733,"duration":6574}},{"uid":"9be08406dcaafcb6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/424//#testresult/9be08406dcaafcb6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751440122121,"stop":1751440131746,"duration":9625}},{"uid":"50a648fec780db13","reportUrl":"https://pagopa.github.io/rtp-platform-qa/423//#testresult/50a648fec780db13","status":"passed","time":{"start":1751383905683,"stop":1751383908203,"duration":2520}},{"uid":"9c55c2399ab681a3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/420//#testresult/9c55c2399ab681a3","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751360018212,"stop":1751360021918,"duration":3706}},{"uid":"adef16e3b05a4c44","reportUrl":"https://pagopa.github.io/rtp-platform-qa/421//#testresult/adef16e3b05a4c44","status":"passed","time":{"start":1751360039610,"stop":1751360042330,"duration":2720}},{"uid":"2635d17e2cad95a3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/419//#testresult/2635d17e2cad95a3","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751353704091,"stop":1751353713495,"duration":9404}},{"uid":"517b7618e79c9c3e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/418//#testresult/517b7618e79c9c3e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751267333942,"stop":1751267336919,"duration":2977}},{"uid":"117a0e8f7d6be002","reportUrl":"https://pagopa.github.io/rtp-platform-qa/417//#testresult/117a0e8f7d6be002","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751180878485,"stop":1751180881187,"duration":2702}},{"uid":"2c81ba1dfcd5f470","reportUrl":"https://pagopa.github.io/rtp-platform-qa/416//#testresult/2c81ba1dfcd5f470","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751094461160,"stop":1751094463474,"duration":2314}},{"uid":"7d802fcccf4d9ac1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/415//#testresult/7d802fcccf4d9ac1","status":"passed","time":{"start":1751008107819,"stop":1751008114199,"duration":6380}},{"uid":"68ee52cb3c404368","reportUrl":"https://pagopa.github.io/rtp-platform-qa/414//#testresult/68ee52cb3c404368","status":"passed","time":{"start":1750947035061,"stop":1750947037995,"duration":2934}},{"uid":"1cefb228431844b3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/413//#testresult/1cefb228431844b3","status":"passed","time":{"start":1750924208329,"stop":1750924211481,"duration":3152}},{"uid":"41d489fe5c1bcf18","reportUrl":"https://pagopa.github.io/rtp-platform-qa/412//#testresult/41d489fe5c1bcf18","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750921689868,"stop":1750921699008,"duration":9140}},{"uid":"a8a247767a9f72e2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/411//#testresult/a8a247767a9f72e2","status":"passed","time":{"start":1750856392829,"stop":1750856395301,"duration":2472}},{"uid":"89809f66b9e21740","reportUrl":"https://pagopa.github.io/rtp-platform-qa/408//#testresult/89809f66b9e21740","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750835450516,"stop":1750835454199,"duration":3683}},{"uid":"a2af3e19d4a5ff1b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/406//#testresult/a2af3e19d4a5ff1b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750779211083,"stop":1750779213828,"duration":2745}},{"uid":"6350d6bc43fe05fd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/404//#testresult/6350d6bc43fe05fd","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750756870796,"stop":1750756873292,"duration":2496}},{"uid":"116230b54361a485","reportUrl":"https://pagopa.github.io/rtp-platform-qa/403//#testresult/116230b54361a485","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1750749018097,"stop":1750749020934,"duration":2837}},{"uid":"18f5d249b2e446b0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/402//#testresult/18f5d249b2e446b0","status":"passed","time":{"start":1750685016842,"stop":1750685021271,"duration":4429}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"cbb8739efff84f12.json","parameterValues":[]}