{"uid":"7f019ad0a5972c6e","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1748953282207,"stop":1748953285330,"duration":3123},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        rtp_data = generate_rtp_data(payer_id=fiscal_code)\n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        send_response = send_rtp(access_token=creditor_service_provider_access_token, rtp_payload=rtp_data)\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:61: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748953122159,"stop":1748953122217,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2494-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"91b4d51e8ec85c1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/355//#testresult/91b4d51e8ec85c1","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1748934623433,"stop":1748934627179,"duration":3746}},{"uid":"f063d9410e0601a8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/354//#testresult/f063d9410e0601a8","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1748848223567,"stop":1748848227248,"duration":3681}},{"uid":"41ed298cf95d224e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/353//#testresult/41ed298cf95d224e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1748761787142,"stop":1748761791342,"duration":4200}},{"uid":"e19b58a092062cd6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/352//#testresult/e19b58a092062cd6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1748675369475,"stop":1748675372626,"duration":3151}},{"uid":"5cf1d649cbbb48b4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/351//#testresult/5cf1d649cbbb48b4","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1748588992668,"stop":1748588996041,"duration":3373}},{"uid":"aa9ebac145c7c00b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/350//#testresult/aa9ebac145c7c00b","status":"broken","statusDetails":"dynaconf.vendor.box.exceptions.BoxKeyError: \"'DynaBox' object has no attribute 'cbi_activated_fiscal_code'\"","time":{"start":1748534183153,"stop":1748534183153,"duration":0}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"7f019ad0a5972c6e.json","parameterValues":[]}