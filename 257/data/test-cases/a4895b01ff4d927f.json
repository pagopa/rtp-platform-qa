{"uid":"a4895b01ff4d927f","name":"An RTP is sent through CBI API","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi","historyId":"b7843ec0a9572280c9663808e1141c5c","time":{"start":1743059220285,"stop":1743059222487,"duration":2202},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('An RTP is sent through CBI API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        rtp_data = generate_rtp_data()\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1743059204240,"stop":1743059204301,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"tag","value":"cbi"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1344-375"},{"name":"thread","value":"2300-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":29,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":29},"items":[{"uid":"7841f788f20927d7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/256//#testresult/7841f788f20927d7","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742972814204,"stop":1742972815895,"duration":1691}},{"uid":"a1b9877751f67cf7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/255//#testresult/a1b9877751f67cf7","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742886423782,"stop":1742886426025,"duration":2243}},{"uid":"6fc2ee1f1d8fc81c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/254//#testresult/6fc2ee1f1d8fc81c","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742800024497,"stop":1742800026783,"duration":2286}},{"uid":"c41f187e06be70c2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/253//#testresult/c41f187e06be70c2","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742713595600,"stop":1742713598497,"duration":2897}},{"uid":"29391e1df007e093","reportUrl":"https://pagopa.github.io/rtp-platform-qa/252//#testresult/29391e1df007e093","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742627176068,"stop":1742627181740,"duration":5672}},{"uid":"cd51ed6ec7b33521","reportUrl":"https://pagopa.github.io/rtp-platform-qa/251//#testresult/cd51ed6ec7b33521","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742576847793,"stop":1742576849242,"duration":1449}},{"uid":"3781ecc85ad0d75a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/250//#testresult/3781ecc85ad0d75a","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742540796541,"stop":1742540798122,"duration":1581}},{"uid":"a3401ee79f1b1575","reportUrl":"https://pagopa.github.io/rtp-platform-qa/249//#testresult/a3401ee79f1b1575","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742454393923,"stop":1742454395340,"duration":1417}},{"uid":"f6abd7cf56398333","reportUrl":"https://pagopa.github.io/rtp-platform-qa/248//#testresult/f6abd7cf56398333","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742368011458,"stop":1742368013578,"duration":2120}},{"uid":"a9a38fc1afe890b6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/247//#testresult/a9a38fc1afe890b6","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742290394720,"stop":1742290396419,"duration":1699}},{"uid":"f00069ee5d776373","reportUrl":"https://pagopa.github.io/rtp-platform-qa/246//#testresult/f00069ee5d776373","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742281610883,"stop":1742281613347,"duration":2464}},{"uid":"69e85f1e316316d4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/245//#testresult/69e85f1e316316d4","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742200608583,"stop":1742200610107,"duration":1524}},{"uid":"636034be8e73058c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/244//#testresult/636034be8e73058c","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742195217874,"stop":1742195220560,"duration":2686}},{"uid":"9e94648a97ac5021","reportUrl":"https://pagopa.github.io/rtp-platform-qa/243//#testresult/9e94648a97ac5021","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742108779906,"stop":1742108781285,"duration":1379}},{"uid":"4de969f92fd58ab4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/242//#testresult/4de969f92fd58ab4","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742022371140,"stop":1742022372575,"duration":1435}},{"uid":"80bba7b690254904","reportUrl":"https://pagopa.github.io/rtp-platform-qa/241//#testresult/80bba7b690254904","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741935996743,"stop":1741935998216,"duration":1473}},{"uid":"3a791f9621fc061d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/240//#testresult/3a791f9621fc061d","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741849602562,"stop":1741849604541,"duration":1979}},{"uid":"ee71570252788053","reportUrl":"https://pagopa.github.io/rtp-platform-qa/239//#testresult/ee71570252788053","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741763213592,"stop":1741763215205,"duration":1613}},{"uid":"e6e161b0567fcb01","reportUrl":"https://pagopa.github.io/rtp-platform-qa/238//#testresult/e6e161b0567fcb01","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741705695287,"stop":1741705696852,"duration":1565}},{"uid":"f3a2a43cb40c7d62","reportUrl":"https://pagopa.github.io/rtp-platform-qa/237//#testresult/f3a2a43cb40c7d62","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741676809032,"stop":1741676811470,"duration":2438}}]},"tags":["cbi","send","happy_path"]},"source":"a4895b01ff4d927f.json","parameterValues":[]}