{"uid":"ef60b50707b9e835","name":"An RTP is sent to ICCREA service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_iccrea","historyId":"43c6e6f1884b3efb611eee04b5b6eb0c","time":{"start":1759390829715,"stop":1759390832795,"duration":3080},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider')\n    @allure.title('An RTP is sent to ICCREA service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.iccrea\n    def test_send_rtp_to_iccrea():\n        rtp_data = generate_rtp_data(payer_id=secrets.iccrea_activated_fiscal_code)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:143: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759389586677,"stop":1759389586736,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider"},{"name":"tag","value":"iccrea"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2563-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":88,"broken":18,"skipped":0,"passed":19,"unknown":0,"total":125},"items":[{"uid":"f141286dbcb5933b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/550//#testresult/f141286dbcb5933b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759316230328,"stop":1759316232860,"duration":2532}},{"uid":"d5b511b08ccb6e7e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/549//#testresult/d5b511b08ccb6e7e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759303790251,"stop":1759303793612,"duration":3361}},{"uid":"adca6d0a767fb559","reportUrl":"https://pagopa.github.io/rtp-platform-qa/548//#testresult/adca6d0a767fb559","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759217375865,"stop":1759217378997,"duration":3132}},{"uid":"eb790394ebb3e019","reportUrl":"https://pagopa.github.io/rtp-platform-qa/547//#testresult/eb790394ebb3e019","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759130918948,"stop":1759130921496,"duration":2548}},{"uid":"9223cdfb62d10dc7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/546//#testresult/9223cdfb62d10dc7","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1759044371901,"stop":1759044374983,"duration":3082}},{"uid":"d9e3dd310710cf18","reportUrl":"https://pagopa.github.io/rtp-platform-qa/545//#testresult/d9e3dd310710cf18","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758957736694,"stop":1758957739729,"duration":3035}},{"uid":"2f248b16b4e2e712","reportUrl":"https://pagopa.github.io/rtp-platform-qa/544//#testresult/2f248b16b4e2e712","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758872023757,"stop":1758872027301,"duration":3544}},{"uid":"598aad72ad58fec5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/543//#testresult/598aad72ad58fec5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758786163671,"stop":1758786167128,"duration":3457}},{"uid":"a588a567d49dafc8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/542//#testresult/a588a567d49dafc8","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1758699769070,"stop":1758699770204,"duration":1134}},{"uid":"fe2522727bc7e981","reportUrl":"https://pagopa.github.io/rtp-platform-qa/541//#testresult/fe2522727bc7e981","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758612596961,"stop":1758612600501,"duration":3540}},{"uid":"29ae193a23a2fdae","reportUrl":"https://pagopa.github.io/rtp-platform-qa/540//#testresult/29ae193a23a2fdae","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758526260848,"stop":1758526264395,"duration":3547}},{"uid":"87927b5bc9831e8c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/539//#testresult/87927b5bc9831e8c","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758439602334,"stop":1758439605368,"duration":3034}},{"uid":"ed9e2637b433675d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/538//#testresult/ed9e2637b433675d","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758353261734,"stop":1758353265339,"duration":3605}},{"uid":"d0c070a46b340278","reportUrl":"https://pagopa.github.io/rtp-platform-qa/537//#testresult/d0c070a46b340278","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1758271094559,"stop":1758271095103,"duration":544}},{"uid":"eaa9193d867c0cf1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/536//#testresult/eaa9193d867c0cf1","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758267121171,"stop":1758267123826,"duration":2655}},{"uid":"4f1c759f2fba6a49","reportUrl":"https://pagopa.github.io/rtp-platform-qa/535//#testresult/4f1c759f2fba6a49","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758180727540,"stop":1758180730924,"duration":3384}},{"uid":"79686b150a1d3511","reportUrl":"https://pagopa.github.io/rtp-platform-qa/534//#testresult/79686b150a1d3511","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758094305429,"stop":1758094308054,"duration":2625}},{"uid":"597b5d0517c58776","reportUrl":"https://pagopa.github.io/rtp-platform-qa/533//#testresult/597b5d0517c58776","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1758007974795,"stop":1758007977924,"duration":3129}},{"uid":"c34ce6a56566e0dd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/532//#testresult/c34ce6a56566e0dd","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757921599672,"stop":1757921602799,"duration":3127}},{"uid":"ffb31bedd9a91c74","reportUrl":"https://pagopa.github.io/rtp-platform-qa/531//#testresult/ffb31bedd9a91c74","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1757835161863,"stop":1757835165380,"duration":3517}}]},"tags":["iccrea","real_integration","send","happy_path"]},"source":"ef60b50707b9e835.json","parameterValues":[]}