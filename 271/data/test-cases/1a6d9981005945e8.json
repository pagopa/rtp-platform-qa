{"uid":"1a6d9981005945e8","name":"An RTP is sent through CBI API","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi","historyId":"b7843ec0a9572280c9663808e1141c5c","time":{"start":1743923189039,"stop":1743923190968,"duration":1929},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('An RTP is sent through CBI API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        rtp_data = generate_rtp_data()\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1743923144706,"stop":1743923144766,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"tag","value":"cbi"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1931-132"},{"name":"thread","value":"2333-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":41,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":41},"items":[{"uid":"821f0352a185a079","reportUrl":"https://pagopa.github.io/rtp-platform-qa/270//#testresult/821f0352a185a079","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743836805761,"stop":1743836808101,"duration":2340}},{"uid":"69f6502c95d5c15a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/269//#testresult/69f6502c95d5c15a","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743755302018,"stop":1743755303441,"duration":1423}},{"uid":"dae54702f5829f0d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/268//#testresult/dae54702f5829f0d","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743754338108,"stop":1743754340556,"duration":2448}},{"uid":"9e6ace8556609caa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/267//#testresult/9e6ace8556609caa","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743750399831,"stop":1743750402358,"duration":2527}},{"uid":"96bace16deaf7fc1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/266//#testresult/96bace16deaf7fc1","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743664017325,"stop":1743664020660,"duration":3335}},{"uid":"3a7fd43cedee745c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/265//#testresult/3a7fd43cedee745c","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743577624996,"stop":1743577627201,"duration":2205}},{"uid":"d0ddf8f062008a45","reportUrl":"https://pagopa.github.io/rtp-platform-qa/262//#testresult/d0ddf8f062008a45","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743491220328,"stop":1743491221716,"duration":1388}},{"uid":"7164705270b9486","reportUrl":"https://pagopa.github.io/rtp-platform-qa/261//#testresult/7164705270b9486","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743404833574,"stop":1743404835156,"duration":1582}},{"uid":"6de42bdce1d777c6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/260//#testresult/6de42bdce1d777c6","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743318391396,"stop":1743318393129,"duration":1733}},{"uid":"68aa85af593c455c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/259//#testresult/68aa85af593c455c","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743231993138,"stop":1743231999342,"duration":6204}},{"uid":"c1f1de5f9055e2b8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/258//#testresult/c1f1de5f9055e2b8","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743145626711,"stop":1743145629180,"duration":2469}},{"uid":"a4895b01ff4d927f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/257//#testresult/a4895b01ff4d927f","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743059220285,"stop":1743059222487,"duration":2202}},{"uid":"7841f788f20927d7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/256//#testresult/7841f788f20927d7","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742972814204,"stop":1742972815895,"duration":1691}},{"uid":"a1b9877751f67cf7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/255//#testresult/a1b9877751f67cf7","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742886423782,"stop":1742886426025,"duration":2243}},{"uid":"6fc2ee1f1d8fc81c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/254//#testresult/6fc2ee1f1d8fc81c","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742800024497,"stop":1742800026783,"duration":2286}},{"uid":"c41f187e06be70c2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/253//#testresult/c41f187e06be70c2","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742713595600,"stop":1742713598497,"duration":2897}},{"uid":"29391e1df007e093","reportUrl":"https://pagopa.github.io/rtp-platform-qa/252//#testresult/29391e1df007e093","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742627176068,"stop":1742627181740,"duration":5672}},{"uid":"cd51ed6ec7b33521","reportUrl":"https://pagopa.github.io/rtp-platform-qa/251//#testresult/cd51ed6ec7b33521","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742576847793,"stop":1742576849242,"duration":1449}},{"uid":"3781ecc85ad0d75a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/250//#testresult/3781ecc85ad0d75a","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742540796541,"stop":1742540798122,"duration":1581}},{"uid":"a3401ee79f1b1575","reportUrl":"https://pagopa.github.io/rtp-platform-qa/249//#testresult/a3401ee79f1b1575","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1742454393923,"stop":1742454395340,"duration":1417}}]},"tags":["cbi","send","happy_path"]},"source":"1a6d9981005945e8.json","parameterValues":[]}