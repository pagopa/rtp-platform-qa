{"uid":"c9add65270af9246","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1752995282645,"stop":1752995290523,"duration":7878},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1752995179262,"stop":1752995179319,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmq0rgcvqdmg"},{"name":"thread","value":"2562-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":51,"broken":1,"skipped":0,"passed":25,"unknown":0,"total":77},"items":[{"uid":"2eeb3235dd9262e0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/448//#testresult/2eeb3235dd9262e0","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1752908927207,"stop":1752908935038,"duration":7831}},{"uid":"8a280fe96cf2f715","reportUrl":"https://pagopa.github.io/rtp-platform-qa/447//#testresult/8a280fe96cf2f715","status":"passed","time":{"start":1752822651611,"stop":1752822657701,"duration":6090}},{"uid":"ef6280aee9d1dff2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/446//#testresult/ef6280aee9d1dff2","status":"passed","time":{"start":1752736199756,"stop":1752736202662,"duration":2906}},{"uid":"f7bf7bfb14455f3f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/445//#testresult/f7bf7bfb14455f3f","status":"passed","time":{"start":1752672667035,"stop":1752672669481,"duration":2446}},{"uid":"f27f5a6596986293","reportUrl":"https://pagopa.github.io/rtp-platform-qa/444//#testresult/f27f5a6596986293","status":"passed","time":{"start":1752649794008,"stop":1752649800203,"duration":6195}},{"uid":"be9f181e098053b3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/443//#testresult/be9f181e098053b3","status":"passed","time":{"start":1752569323306,"stop":1752569326228,"duration":2922}},{"uid":"d5b15323e1214e14","reportUrl":"https://pagopa.github.io/rtp-platform-qa/442//#testresult/d5b15323e1214e14","status":"passed","time":{"start":1752563405279,"stop":1752563411688,"duration":6409}},{"uid":"be63ce6fbd3418fc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/441//#testresult/be63ce6fbd3418fc","status":"passed","time":{"start":1752477014766,"stop":1752477018227,"duration":3461}},{"uid":"da53c32695369000","reportUrl":"https://pagopa.github.io/rtp-platform-qa/440//#testresult/da53c32695369000","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1752390581871,"stop":1752390589206,"duration":7335}},{"uid":"986aa397f23f9226","reportUrl":"https://pagopa.github.io/rtp-platform-qa/439//#testresult/986aa397f23f9226","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1752304114148,"stop":1752304122777,"duration":8629}},{"uid":"901ccbdc19c79c59","reportUrl":"https://pagopa.github.io/rtp-platform-qa/438//#testresult/901ccbdc19c79c59","status":"passed","time":{"start":1752217746712,"stop":1752217754343,"duration":7631}},{"uid":"273520a6aa0f8da4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/437//#testresult/273520a6aa0f8da4","status":"passed","time":{"start":1752163226698,"stop":1752163229893,"duration":3195}},{"uid":"6c5cfec426294da4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/436//#testresult/6c5cfec426294da4","status":"passed","time":{"start":1752160541890,"stop":1752160544254,"duration":2364}},{"uid":"b29f8a5889bb5d93","reportUrl":"https://pagopa.github.io/rtp-platform-qa/435//#testresult/b29f8a5889bb5d93","status":"passed","time":{"start":1752145276871,"stop":1752145281209,"duration":4338}},{"uid":"7bd7616a8e48414e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/434//#testresult/7bd7616a8e48414e","status":"passed","time":{"start":1752131355500,"stop":1752131362737,"duration":7237}},{"uid":"44710fcacb221804","reportUrl":"https://pagopa.github.io/rtp-platform-qa/432//#testresult/44710fcacb221804","status":"passed","time":{"start":1752044928535,"stop":1752044934742,"duration":6207}},{"uid":"a8afe5479447bc07","reportUrl":"https://pagopa.github.io/rtp-platform-qa/431//#testresult/a8afe5479447bc07","status":"passed","time":{"start":1751958526848,"stop":1751958530995,"duration":4147}},{"uid":"45941c82e2dc5fc4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/430//#testresult/45941c82e2dc5fc4","status":"passed","time":{"start":1751882705844,"stop":1751882709109,"duration":3265}},{"uid":"73f4194bfcce4f87","reportUrl":"https://pagopa.github.io/rtp-platform-qa/429//#testresult/73f4194bfcce4f87","status":"passed","time":{"start":1751872159216,"stop":1751872163865,"duration":4649}},{"uid":"3521a3cc7241dc8e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/428//#testresult/3521a3cc7241dc8e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1751785663425,"stop":1751785672505,"duration":9080}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"c9add65270af9246.json","parameterValues":[]}