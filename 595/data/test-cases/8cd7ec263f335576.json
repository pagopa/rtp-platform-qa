{"uid":"8cd7ec263f335576","name":"The response body contains a comprehensible error message","fullName":"functional-tests.tests.test_send_rtp#test_field_error_in_body","historyId":"6f160fa61ad9d69e988465a21db395fc","time":{"start":1761719135817,"stop":1761719138221,"duration":2404},"status":"failed","statusMessage":"AssertionError: assert 404 == 400\n +  where 404 = <Response [404]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('The response body contains a comprehensible error message')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_field_error_in_body():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        res = activate(\n            debtor_service_provider_access_token,\n            rtp_data['payer']['payerId'],\n            secrets.debtor_service_provider.service_provider_id,\n        )\n        assert res.status_code == 201, 'Error activating debtor'\n    \n        rtp_data['payee']['payeeId'] = None\n        response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n>       assert response.status_code == 400\nE       assert 404 == 400\nE        +  where 404 = <Response [404]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:219: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761719051109,"stop":1761719051167,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"functional-tests.tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2456-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"functional-tests.tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":20},"items":[{"uid":"9f0abdc2c4733393","reportUrl":"https://pagopa.github.io/rtp-platform-qa/594//#testresult/9f0abdc2c4733393","status":"passed","time":{"start":1761632762314,"stop":1761632764032,"duration":1718}},{"uid":"e650288db372f10f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/593//#testresult/e650288db372f10f","status":"passed","time":{"start":1761546428836,"stop":1761546431390,"duration":2554}},{"uid":"7d45ef3520f178a4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/592//#testresult/7d45ef3520f178a4","status":"passed","time":{"start":1761459774250,"stop":1761459776108,"duration":1858}},{"uid":"edeab21657b00c90","reportUrl":"https://pagopa.github.io/rtp-platform-qa/591//#testresult/edeab21657b00c90","status":"passed","time":{"start":1761373335892,"stop":1761373337994,"duration":2102}},{"uid":"fc522bad6f7e368","reportUrl":"https://pagopa.github.io/rtp-platform-qa/590//#testresult/fc522bad6f7e368","status":"passed","time":{"start":1761287019419,"stop":1761287021986,"duration":2567}},{"uid":"62fa89aa63b6cdd0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/589//#testresult/62fa89aa63b6cdd0","status":"passed","time":{"start":1761200631822,"stop":1761200634023,"duration":2201}},{"uid":"4d31ff1d9e3173be","reportUrl":"https://pagopa.github.io/rtp-platform-qa/588//#testresult/4d31ff1d9e3173be","status":"passed","time":{"start":1761114290385,"stop":1761114291968,"duration":1583}},{"uid":"efa05ddc749bcc91","reportUrl":"https://pagopa.github.io/rtp-platform-qa/587//#testresult/efa05ddc749bcc91","status":"passed","time":{"start":1761053868861,"stop":1761053870776,"duration":1915}},{"uid":"e278ad1d0ed9ba73","reportUrl":"https://pagopa.github.io/rtp-platform-qa/585//#testresult/e278ad1d0ed9ba73","status":"passed","time":{"start":1761027839922,"stop":1761027841656,"duration":1734}},{"uid":"101edae883034bfa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/584//#testresult/101edae883034bfa","status":"passed","time":{"start":1760941480623,"stop":1760941482185,"duration":1562}},{"uid":"4e360e89a8a6381a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/583//#testresult/4e360e89a8a6381a","status":"passed","time":{"start":1760854978300,"stop":1760854979772,"duration":1472}},{"uid":"7632f035c97e592b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/582//#testresult/7632f035c97e592b","status":"passed","time":{"start":1760768513502,"stop":1760768514991,"duration":1489}},{"uid":"eb1b31c121e7c9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/581//#testresult/eb1b31c121e7c9","status":"passed","time":{"start":1760682168846,"stop":1760682170429,"duration":1583}},{"uid":"5a5738ded413c2fa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/580//#testresult/5a5738ded413c2fa","status":"passed","time":{"start":1760624540650,"stop":1760624543305,"duration":2655}},{"uid":"dcd991fab59c0788","reportUrl":"https://pagopa.github.io/rtp-platform-qa/579//#testresult/dcd991fab59c0788","status":"passed","time":{"start":1760619715806,"stop":1760619717980,"duration":2174}},{"uid":"2ec561a99a249f1d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/578//#testresult/2ec561a99a249f1d","status":"passed","time":{"start":1760595824799,"stop":1760595826514,"duration":1715}},{"uid":"2e0f1537c5e7bd63","reportUrl":"https://pagopa.github.io/rtp-platform-qa/575//#testresult/2e0f1537c5e7bd63","status":"passed","time":{"start":1760522145265,"stop":1760522147634,"duration":2369}},{"uid":"ecca9938bb0da39d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/574//#testresult/ecca9938bb0da39d","status":"passed","time":{"start":1760521366069,"stop":1760521367786,"duration":1717}},{"uid":"8f29415b139f3dde","reportUrl":"https://pagopa.github.io/rtp-platform-qa/573//#testresult/8f29415b139f3dde","status":"passed","time":{"start":1760520567938,"stop":1760520569497,"duration":1559}}]},"tags":["unhappy_path","send"]},"source":"8cd7ec263f335576.json","parameterValues":[]}