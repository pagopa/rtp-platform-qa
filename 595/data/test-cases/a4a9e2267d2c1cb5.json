{"uid":"a4a9e2267d2c1cb5","name":"An RTP callback is successfully received","fullName":"functional-tests.tests.test_callback#test_receive_rtp_callback_DS_08N_compliant","historyId":"65bcf900a328b20789c7a1e72105285f","time":{"start":1761719075874,"stop":1761719079195,"duration":3321},"status":"failed","statusMessage":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('An RTP callback is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback_DS_08N_compliant():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        rtp_reader_access_token = get_valid_access_token(\n            client_id=secrets.rtp_reader.client_id,\n            client_secret=secrets.rtp_reader.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        activation_response = activate(\n            debtor_service_provider_access_token,\n            rtp_data['payer']['payerId'],\n            secrets.debtor_service_provider.service_provider_id,\n        )\n    \n        assert activation_response.status_code == 201\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 404 == 201\nE        +  where 404 = <Response [404]>.status_code\n\nfunctional-tests/tests/test_callback.py:115: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761719051109,"stop":1761719051167,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"functional-tests.tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2456-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"functional-tests.tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":20},"items":[{"uid":"cf3be34186c7b31b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/594//#testresult/cf3be34186c7b31b","status":"passed","time":{"start":1761632708709,"stop":1761632712432,"duration":3723}},{"uid":"b09fe7e37edcc3ff","reportUrl":"https://pagopa.github.io/rtp-platform-qa/593//#testresult/b09fe7e37edcc3ff","status":"passed","time":{"start":1761546356825,"stop":1761546361701,"duration":4876}},{"uid":"58d41bb7715f816e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/592//#testresult/58d41bb7715f816e","status":"passed","time":{"start":1761459718074,"stop":1761459721862,"duration":3788}},{"uid":"3b125399d24d2e94","reportUrl":"https://pagopa.github.io/rtp-platform-qa/591//#testresult/3b125399d24d2e94","status":"passed","time":{"start":1761373272646,"stop":1761373278438,"duration":5792}},{"uid":"8b1850a80cf3be5a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/590//#testresult/8b1850a80cf3be5a","status":"passed","time":{"start":1761286952327,"stop":1761286957336,"duration":5009}},{"uid":"8ef806c8a86647f1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/589//#testresult/8ef806c8a86647f1","status":"passed","time":{"start":1761200572005,"stop":1761200576479,"duration":4474}},{"uid":"cc65618533eb672f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/588//#testresult/cc65618533eb672f","status":"passed","time":{"start":1761114239551,"stop":1761114243181,"duration":3630}},{"uid":"6e12b292df1c47c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/587//#testresult/6e12b292df1c47c","status":"passed","time":{"start":1761053812631,"stop":1761053816441,"duration":3810}},{"uid":"1307a4c5c1c8cbbb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/585//#testresult/1307a4c5c1c8cbbb","status":"passed","time":{"start":1761027790098,"stop":1761027793737,"duration":3639}},{"uid":"d01793252e99d3ee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/584//#testresult/d01793252e99d3ee","status":"passed","time":{"start":1760941429805,"stop":1760941433155,"duration":3350}},{"uid":"ca5ba1b6d17a0fc8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/583//#testresult/ca5ba1b6d17a0fc8","status":"passed","time":{"start":1760854929396,"stop":1760854932508,"duration":3112}},{"uid":"6312f973820dd0e1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/582//#testresult/6312f973820dd0e1","status":"passed","time":{"start":1760768459943,"stop":1760768463222,"duration":3279}},{"uid":"17e7a0867b4bf3cd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/581//#testresult/17e7a0867b4bf3cd","status":"passed","time":{"start":1760682122259,"stop":1760682125412,"duration":3153}},{"uid":"af80453db23cc8e9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/580//#testresult/af80453db23cc8e9","status":"passed","time":{"start":1760624474150,"stop":1760624479139,"duration":4989}},{"uid":"573614bf025fcaaa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/579//#testresult/573614bf025fcaaa","status":"passed","time":{"start":1760619656194,"stop":1760619660400,"duration":4206}},{"uid":"8e54425d22eb7abe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/578//#testresult/8e54425d22eb7abe","status":"passed","time":{"start":1760595774611,"stop":1760595778073,"duration":3462}},{"uid":"66e083f3dbbe109a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/575//#testresult/66e083f3dbbe109a","status":"passed","time":{"start":1760522084644,"stop":1760522088983,"duration":4339}},{"uid":"395a74082ea6edab","reportUrl":"https://pagopa.github.io/rtp-platform-qa/574//#testresult/395a74082ea6edab","status":"passed","time":{"start":1760521319438,"stop":1760521322638,"duration":3200}},{"uid":"a50472213a6c40a8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/573//#testresult/a50472213a6c40a8","status":"passed","time":{"start":1760520520742,"stop":1760520524168,"duration":3426}}]},"tags":["callback","happy_path"]},"source":"a4a9e2267d2c1cb5.json","parameterValues":[]}