{"uid":"5e749840b32cdc64","name":"RTP is successfully retrieved","fullName":"functional-tests.tests.test_get_rtp#test_get_rtp_success","historyId":"a6eaa841ea4e4b03991d8cfc58a55ed7","time":{"start":1761719117101,"stop":1761719120124,"duration":3023},"status":"failed","statusMessage":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","statusTrace":"@allure.feature('RTP Get')\n    @allure.story('Service provider retrieves an RTP')\n    @allure.title('RTP is successfully retrieved')\n    @pytest.mark.get\n    @pytest.mark.happy_path\n    def test_get_rtp_success():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        rtp_reader_access_token = get_valid_access_token(\n            client_id=secrets.rtp_reader.client_id,\n            client_secret=secrets.rtp_reader.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        activation_response = activate(\n            debtor_service_provider_access_token,\n            rtp_data['payer']['payerId'],\n            secrets.debtor_service_provider.service_provider_id,\n        )\n    \n        assert activation_response.status_code == 201, 'Error activating debtor'\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 404 == 201\nE        +  where 404 = <Response [404]>.status_code\n\nfunctional-tests/tests/test_get_rtp.py:52: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761719051109,"stop":1761719051167,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider retrieves an RTP"},{"name":"feature","value":"RTP Get"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"functional-tests.tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2456-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"functional-tests.tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":20},"items":[{"uid":"39e1d6a17f850963","reportUrl":"https://pagopa.github.io/rtp-platform-qa/594//#testresult/39e1d6a17f850963","status":"passed","time":{"start":1761632742322,"stop":1761632745034,"duration":2712}},{"uid":"5905834829a60048","reportUrl":"https://pagopa.github.io/rtp-platform-qa/593//#testresult/5905834829a60048","status":"passed","time":{"start":1761546404028,"stop":1761546407901,"duration":3873}},{"uid":"c74dab38af619c8d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/592//#testresult/c74dab38af619c8d","status":"passed","time":{"start":1761459753007,"stop":1761459755893,"duration":2886}},{"uid":"a8ecc5568a964ec2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/591//#testresult/a8ecc5568a964ec2","status":"passed","time":{"start":1761373312092,"stop":1761373315387,"duration":3295}},{"uid":"96d1bb43d63d7113","reportUrl":"https://pagopa.github.io/rtp-platform-qa/590//#testresult/96d1bb43d63d7113","status":"passed","time":{"start":1761286994062,"stop":1761286998050,"duration":3988}},{"uid":"86ae06161e3c884b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/589//#testresult/86ae06161e3c884b","status":"passed","time":{"start":1761200609305,"stop":1761200612619,"duration":3314}},{"uid":"47be898d476ca3d3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/588//#testresult/47be898d476ca3d3","status":"passed","time":{"start":1761114270932,"stop":1761114273440,"duration":2508}},{"uid":"332ca63605bef77f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/587//#testresult/332ca63605bef77f","status":"passed","time":{"start":1761053848495,"stop":1761053851497,"duration":3002}},{"uid":"8e50741ccdf6c6bb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/585//#testresult/8e50741ccdf6c6bb","status":"passed","time":{"start":1761027821163,"stop":1761027823865,"duration":2702}},{"uid":"51709edb1e74a050","reportUrl":"https://pagopa.github.io/rtp-platform-qa/584//#testresult/51709edb1e74a050","status":"passed","time":{"start":1760941461442,"stop":1760941463949,"duration":2507}},{"uid":"a96fa1088f99b4ad","reportUrl":"https://pagopa.github.io/rtp-platform-qa/583//#testresult/a96fa1088f99b4ad","status":"passed","time":{"start":1760854960390,"stop":1760854963106,"duration":2716}},{"uid":"f2425ad1260c2964","reportUrl":"https://pagopa.github.io/rtp-platform-qa/582//#testresult/f2425ad1260c2964","status":"passed","time":{"start":1760768495293,"stop":1760768497727,"duration":2434}},{"uid":"9f266576afcf6c0e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/581//#testresult/9f266576afcf6c0e","status":"passed","time":{"start":1760682151381,"stop":1760682153863,"duration":2482}},{"uid":"60c582dbc6ae991","reportUrl":"https://pagopa.github.io/rtp-platform-qa/580//#testresult/60c582dbc6ae991","status":"passed","time":{"start":1760624514642,"stop":1760624518666,"duration":4024}},{"uid":"5de249fde8d550b2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/579//#testresult/5de249fde8d550b2","status":"passed","time":{"start":1760619692652,"stop":1760619696126,"duration":3474}},{"uid":"7a8669b3ae68931a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/578//#testresult/7a8669b3ae68931a","status":"passed","time":{"start":1760595805238,"stop":1760595807990,"duration":2752}},{"uid":"47c8e1c8eb86c7f4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/575//#testresult/47c8e1c8eb86c7f4","status":"passed","time":{"start":1760522120917,"stop":1760522124562,"duration":3645}},{"uid":"7322cea27dae2ec0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/574//#testresult/7322cea27dae2ec0","status":"passed","time":{"start":1760521346900,"stop":1760521349580,"duration":2680}},{"uid":"8d2463838a2856e3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/573//#testresult/8d2463838a2856e3","status":"passed","time":{"start":1760520549455,"stop":1760520551980,"duration":2525}}]},"tags":["get","happy_path"]},"source":"5e749840b32cdc64.json","parameterValues":[]}