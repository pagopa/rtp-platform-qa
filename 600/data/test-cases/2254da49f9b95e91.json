{"uid":"2254da49f9b95e91","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"functional-tests.tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"c2c26c59af7cf357974f77dc8e7a5246","time":{"start":1761891912901,"stop":1761891916385,"duration":3484},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761891772938,"stop":1761891772995,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"functional-tests.tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2498-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"functional-tests.tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":25,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":25},"items":[{"uid":"1cb718b4ef6070de","reportUrl":"https://pagopa.github.io/rtp-platform-qa/599//#testresult/1cb718b4ef6070de","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761837117564,"stop":1761837120783,"duration":3219}},{"uid":"eaf5d6f4a0585e75","reportUrl":"https://pagopa.github.io/rtp-platform-qa/598//#testresult/eaf5d6f4a0585e75","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761818897785,"stop":1761818901068,"duration":3283}},{"uid":"7e2573045cd6597b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/597//#testresult/7e2573045cd6597b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761805423636,"stop":1761805427278,"duration":3642}},{"uid":"e7e76c1bd76df543","reportUrl":"https://pagopa.github.io/rtp-platform-qa/596//#testresult/e7e76c1bd76df543","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761752122807,"stop":1761752125853,"duration":3046}},{"uid":"20fe4fcd0401036a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/595//#testresult/20fe4fcd0401036a","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1761719129753,"stop":1761719130924,"duration":1171}},{"uid":"9952fb817a321c2e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/594//#testresult/9952fb817a321c2e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761632753047,"stop":1761632755916,"duration":2869}},{"uid":"2812b5a1ebb66ab9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/593//#testresult/2812b5a1ebb66ab9","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761546417991,"stop":1761546421442,"duration":3451}},{"uid":"f2f85da040d7a647","reportUrl":"https://pagopa.github.io/rtp-platform-qa/592//#testresult/f2f85da040d7a647","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761459764605,"stop":1761459767921,"duration":3316}},{"uid":"ac8a74cc5efe0569","reportUrl":"https://pagopa.github.io/rtp-platform-qa/591//#testresult/ac8a74cc5efe0569","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761373325798,"stop":1761373328922,"duration":3124}},{"uid":"6ddcf9c00a2036e1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/590//#testresult/6ddcf9c00a2036e1","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761287008816,"stop":1761287012372,"duration":3556}},{"uid":"87ec8d95c584ed42","reportUrl":"https://pagopa.github.io/rtp-platform-qa/589//#testresult/87ec8d95c584ed42","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761200621281,"stop":1761200624714,"duration":3433}},{"uid":"11116c39e4452f38","reportUrl":"https://pagopa.github.io/rtp-platform-qa/588//#testresult/11116c39e4452f38","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761114281031,"stop":1761114284405,"duration":3374}},{"uid":"d38c4b7b5dd10b2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/587//#testresult/d38c4b7b5dd10b2","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761053859153,"stop":1761053862438,"duration":3285}},{"uid":"9c8a88a375929778","reportUrl":"https://pagopa.github.io/rtp-platform-qa/585//#testresult/9c8a88a375929778","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1761027831586,"stop":1761027834446,"duration":2860}},{"uid":"22129ad875130ff6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/584//#testresult/22129ad875130ff6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760941471269,"stop":1760941474811,"duration":3542}},{"uid":"35cf0d3fa0038119","reportUrl":"https://pagopa.github.io/rtp-platform-qa/583//#testresult/35cf0d3fa0038119","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760854969790,"stop":1760854972833,"duration":3043}},{"uid":"b76c152f0f79c548","reportUrl":"https://pagopa.github.io/rtp-platform-qa/582//#testresult/b76c152f0f79c548","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760768505425,"stop":1760768508262,"duration":2837}},{"uid":"a566f762be39de2f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/581//#testresult/a566f762be39de2f","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760682160501,"stop":1760682163358,"duration":2857}},{"uid":"b230ef6898ad1ef4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/580//#testresult/b230ef6898ad1ef4","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760624528891,"stop":1760624532699,"duration":3808}},{"uid":"2cc7ba81f5991d7b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/579//#testresult/2cc7ba81f5991d7b","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1760619705063,"stop":1760619708851,"duration":3788}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"2254da49f9b95e91.json","parameterValues":[]}