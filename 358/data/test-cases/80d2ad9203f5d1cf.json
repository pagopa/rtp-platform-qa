{"uid":"80d2ad9203f5d1cf","name":"Cannot send RTP with expired date","fullName":"tests.test_debtor_service_provider_availability#test_send_rtp_to_cbi_expired_date","historyId":"6908d8a096f06149222842bbb65d22a3","time":{"start":1749020841034,"stop":1749020842053,"duration":1019},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with expired date')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_expired_date():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['expiryDate'] = '2020-01-01'\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id, secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(\n            secrets.CBI_client_PFX_base64,\n            secrets.CBI_client_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider_availability.py:107: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749020819578,"stop":1749020819637,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider_availability"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2501-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":9},"items":[{"uid":"35a52dc6e3a4af3c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/357//#testresult/35a52dc6e3a4af3c","status":"passed","time":{"start":1748956575834,"stop":1748956577072,"duration":1238}},{"uid":"bbf2446c1a796732","reportUrl":"https://pagopa.github.io/rtp-platform-qa/356//#testresult/bbf2446c1a796732","status":"passed","time":{"start":1748953141124,"stop":1748953141971,"duration":847}},{"uid":"3e59b74b85963096","reportUrl":"https://pagopa.github.io/rtp-platform-qa/355//#testresult/3e59b74b85963096","status":"passed","time":{"start":1748934484584,"stop":1748934485676,"duration":1092}},{"uid":"6fcd0a307ccce723","reportUrl":"https://pagopa.github.io/rtp-platform-qa/354//#testresult/6fcd0a307ccce723","status":"passed","time":{"start":1748848082076,"stop":1748848083039,"duration":963}},{"uid":"fbe982842df09f48","reportUrl":"https://pagopa.github.io/rtp-platform-qa/353//#testresult/fbe982842df09f48","status":"passed","time":{"start":1748761643027,"stop":1748761644519,"duration":1492}},{"uid":"aeead51a9d6e5947","reportUrl":"https://pagopa.github.io/rtp-platform-qa/352//#testresult/aeead51a9d6e5947","status":"passed","time":{"start":1748675228372,"stop":1748675229647,"duration":1275}},{"uid":"6f815b833784fe29","reportUrl":"https://pagopa.github.io/rtp-platform-qa/351//#testresult/6f815b833784fe29","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1748588847539,"stop":1748588849355,"duration":1816}},{"uid":"ba725a5987f4f8a6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/350//#testresult/ba725a5987f4f8a6","status":"passed","time":{"start":1748534041119,"stop":1748534042364,"duration":1245}}]},"tags":["cbi","unhappy_path","send"]},"source":"80d2ad9203f5d1cf.json","parameterValues":[]}