{"uid":"743e2389abcc9536","name":"An RTP is sent to ICCREA service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_iccrea","historyId":"43c6e6f1884b3efb611eee04b5b6eb0c","time":{"start":1754204878435,"stop":1754204878795,"duration":360},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider')\n    @allure.title('An RTP is sent to ICCREA service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.iccrea\n    def test_send_rtp_to_iccrea():\n        rtp_data = generate_rtp_data(payer_id=secrets.iccrea_activated_fiscal_code)\n    \n>       creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_send_rtp.py:134: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1754204829719,"stop":1754204829775,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider"},{"name":"tag","value":"iccrea"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmjbmru5nbw0"},{"name":"thread","value":"2517-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":12,"skipped":0,"passed":19,"unknown":0,"total":46},"items":[{"uid":"82445d5cc10451cb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/468//#testresult/82445d5cc10451cb","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754118495054,"stop":1754118495638,"duration":584}},{"uid":"38fd97b536f2c4fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/467//#testresult/38fd97b536f2c4fe","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754051920019,"stop":1754051920460,"duration":441}},{"uid":"5f266efe6cd00b03","reportUrl":"https://pagopa.github.io/rtp-platform-qa/466//#testresult/5f266efe6cd00b03","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754032287108,"stop":1754032287470,"duration":362}},{"uid":"18a8272ccf66a80c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/465//#testresult/18a8272ccf66a80c","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753974039912,"stop":1753974040341,"duration":429}},{"uid":"a12ff4738668c0e7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/464//#testresult/a12ff4738668c0e7","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753945854699,"stop":1753945855306,"duration":607}},{"uid":"ce213f62562e238","reportUrl":"https://pagopa.github.io/rtp-platform-qa/463//#testresult/ce213f62562e238","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753878291113,"stop":1753878291749,"duration":636}},{"uid":"22a37b518c1442bb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/462//#testresult/22a37b518c1442bb","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753859503707,"stop":1753859504345,"duration":638}},{"uid":"6302c594564bf4d2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/461//#testresult/6302c594564bf4d2","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753773061546,"stop":1753773062192,"duration":646}},{"uid":"291d08bca6356ea8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/460//#testresult/291d08bca6356ea8","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753686734812,"stop":1753686735325,"duration":513}},{"uid":"77e1bab3210c6081","reportUrl":"https://pagopa.github.io/rtp-platform-qa/459//#testresult/77e1bab3210c6081","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753600070216,"stop":1753600070580,"duration":364}},{"uid":"13e7f3adc0ba3987","reportUrl":"https://pagopa.github.io/rtp-platform-qa/458//#testresult/13e7f3adc0ba3987","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753513683348,"stop":1753513683717,"duration":369}},{"uid":"ea44d518c496bc3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/457//#testresult/ea44d518c496bc3","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1753433598611,"stop":1753433601932,"duration":3321}},{"uid":"7236dab265caea6f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/456//#testresult/7236dab265caea6f","status":"passed","time":{"start":1753427413908,"stop":1753427415572,"duration":1664}},{"uid":"6866638594a65a91","reportUrl":"https://pagopa.github.io/rtp-platform-qa/455//#testresult/6866638594a65a91","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1753367017510,"stop":1753367020511,"duration":3001}},{"uid":"87e2183d8f4bc2a5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/454//#testresult/87e2183d8f4bc2a5","status":"passed","time":{"start":1753351374275,"stop":1753351375721,"duration":1446}},{"uid":"50bdc1f2d6968be8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/453//#testresult/50bdc1f2d6968be8","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1753341028458,"stop":1753341031947,"duration":3489}},{"uid":"9efa7f161b8e160e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/452//#testresult/9efa7f161b8e160e","status":"passed","time":{"start":1753254648073,"stop":1753254649146,"duration":1073}},{"uid":"8c207d072a760d44","reportUrl":"https://pagopa.github.io/rtp-platform-qa/451//#testresult/8c207d072a760d44","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1753168199954,"stop":1753168202535,"duration":2581}},{"uid":"caf835315fd30d11","reportUrl":"https://pagopa.github.io/rtp-platform-qa/450//#testresult/caf835315fd30d11","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1753081919527,"stop":1753081922856,"duration":3329}},{"uid":"e5b1a8a201854faf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/449//#testresult/e5b1a8a201854faf","status":"passed","time":{"start":1752995291509,"stop":1752995292598,"duration":1089}}]},"tags":["iccrea","real_integration","send","happy_path"]},"source":"743e2389abcc9536.json","parameterValues":[]}