{"uid":"766e84c70b65d0e0","name":"An RTP callback is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback_DS_04b_compliant","historyId":"475e3c0708b05c2b7bfae9db8dc283af","time":{"start":1750329637394,"stop":1750329638042,"duration":648},"status":"failed","statusMessage":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('An RTP callback is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback_DS_04b_compliant():\n        callback_data = generate_callback_data_DS_04b_compliant()\n    \n        cert, key = pfx_to_pem(secrets.debtor_service_provider_mock_PFX_base64,\n                               secrets.debtor_service_provider_mock_PFX_password_base64,\n                               config.cert_path,\n                               config.key_path)\n    \n        callback_response = srtp_callback(rtp_payload=callback_data,\n                                          cert_path=cert,\n                                          key_path=key)\n>       assert callback_response.status_code == 200, f'Error from callback, expected 200 got {callback_response.status_code}'\nE       AssertionError: Error from callback, expected 200 got 400\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\nfunctional-tests/tests/test_callback.py:28: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750329626327,"stop":1750329626385,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Callback"},{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2604-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":31,"broken":0,"skipped":0,"passed":48,"unknown":0,"total":79},"items":[{"uid":"7f3d4e91386f20e5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/394//#testresult/7f3d4e91386f20e5","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750317540509,"stop":1750317540910,"duration":401}},{"uid":"798c8681db5e894a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/392//#testresult/798c8681db5e894a","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750230471416,"stop":1750230472914,"duration":1498}},{"uid":"7a2b80268b68ffaa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/390//#testresult/7a2b80268b68ffaa","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750170122430,"stop":1750170123062,"duration":632}},{"uid":"4d4d8063a35b2e69","reportUrl":"https://pagopa.github.io/rtp-platform-qa/389//#testresult/4d4d8063a35b2e69","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750144039853,"stop":1750144040582,"duration":729}},{"uid":"f36535a7b76ead3f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/388//#testresult/f36535a7b76ead3f","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750069024538,"stop":1750069025105,"duration":567}},{"uid":"9e3bb5ac8055174f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/387//#testresult/9e3bb5ac8055174f","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750057705500,"stop":1750057707115,"duration":1615}},{"uid":"434a039336824fdf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/386//#testresult/434a039336824fdf","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749971241768,"stop":1749971243534,"duration":1766}},{"uid":"a1b0958605cd087a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/385//#testresult/a1b0958605cd087a","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749884849913,"stop":1749884851251,"duration":1338}},{"uid":"4a65509cb22bc212","reportUrl":"https://pagopa.github.io/rtp-platform-qa/384//#testresult/4a65509cb22bc212","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749810118229,"stop":1749810118727,"duration":498}},{"uid":"8ff086b45d125d8b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/380//#testresult/8ff086b45d125d8b","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749801527452,"stop":1749801527875,"duration":423}},{"uid":"d48ab598573c0347","reportUrl":"https://pagopa.github.io/rtp-platform-qa/376//#testresult/d48ab598573c0347","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749798429835,"stop":1749798430343,"duration":508}},{"uid":"594739aa425f1709","reportUrl":"https://pagopa.github.io/rtp-platform-qa/375//#testresult/594739aa425f1709","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749712036927,"stop":1749712038659,"duration":1732}},{"uid":"d3a7bdafecff82fd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/374//#testresult/d3a7bdafecff82fd","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749625630957,"stop":1749625632767,"duration":1810}},{"uid":"bc1155d96e373b89","reportUrl":"https://pagopa.github.io/rtp-platform-qa/373//#testresult/bc1155d96e373b89","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749539223506,"stop":1749539223975,"duration":469}},{"uid":"49a067938cbd4165","reportUrl":"https://pagopa.github.io/rtp-platform-qa/365//#testresult/49a067938cbd4165","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749482092089,"stop":1749482097029,"duration":4940}},{"uid":"3fb5cf8227536ef0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/363//#testresult/3fb5cf8227536ef0","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749452878633,"stop":1749452880317,"duration":1684}},{"uid":"e4e126f4288b5a34","reportUrl":"https://pagopa.github.io/rtp-platform-qa/362//#testresult/e4e126f4288b5a34","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749366421421,"stop":1749366423776,"duration":2355}},{"uid":"aedd1eec3e85c3b3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/361//#testresult/aedd1eec3e85c3b3","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749280008781,"stop":1749280009300,"duration":519}},{"uid":"c194cceab4b26865","reportUrl":"https://pagopa.github.io/rtp-platform-qa/360//#testresult/c194cceab4b26865","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749193617849,"stop":1749193618370,"duration":521}},{"uid":"d812c643b89e039f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/359//#testresult/d812c643b89e039f","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749107241987,"stop":1749107243046,"duration":1059}}]},"tags":["callback","happy_path"]},"source":"766e84c70b65d0e0.json","parameterValues":[]}