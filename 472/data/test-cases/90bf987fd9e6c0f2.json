{"uid":"90bf987fd9e6c0f2","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1754377957329,"stop":1754377957935,"duration":606},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n>       creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_send_rtp.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1754377858717,"stop":1754377858775,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmjbmru5nbw0"},{"name":"thread","value":"2583-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":55,"broken":16,"skipped":0,"passed":29,"unknown":0,"total":100},"items":[{"uid":"82385cefa5a07f8d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/471//#testresult/82385cefa5a07f8d","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754319238246,"stop":1754319238700,"duration":454}},{"uid":"7199d53ba64720f3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/470//#testresult/7199d53ba64720f3","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754291692416,"stop":1754291693056,"duration":640}},{"uid":"2588ea92649c358b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/469//#testresult/2588ea92649c358b","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754204877687,"stop":1754204878047,"duration":360}},{"uid":"e8017e73408ff2cb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/468//#testresult/e8017e73408ff2cb","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754118493859,"stop":1754118494443,"duration":584}},{"uid":"8454212cc413566b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/467//#testresult/8454212cc413566b","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754051919102,"stop":1754051919547,"duration":445}},{"uid":"4e98de53151f845d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/466//#testresult/4e98de53151f845d","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1754032285473,"stop":1754032286719,"duration":1246}},{"uid":"421124eb33e4254d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/465//#testresult/421124eb33e4254d","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753974039116,"stop":1753974039499,"duration":383}},{"uid":"fc3eca86a9842eb2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/464//#testresult/fc3eca86a9842eb2","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753945853404,"stop":1753945854026,"duration":622}},{"uid":"571b9eea19c7c296","reportUrl":"https://pagopa.github.io/rtp-platform-qa/463//#testresult/571b9eea19c7c296","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753878289817,"stop":1753878290448,"duration":631}},{"uid":"702ecd8bf13ffd9e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/462//#testresult/702ecd8bf13ffd9e","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753859502401,"stop":1753859503035,"duration":634}},{"uid":"1bd8ecac7da8015b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/461//#testresult/1bd8ecac7da8015b","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753773060189,"stop":1753773060834,"duration":645}},{"uid":"ca0656c96e7b8ca5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/460//#testresult/ca0656c96e7b8ca5","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753686733790,"stop":1753686734282,"duration":492}},{"uid":"d211171b41b8b498","reportUrl":"https://pagopa.github.io/rtp-platform-qa/459//#testresult/d211171b41b8b498","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753600069433,"stop":1753600069808,"duration":375}},{"uid":"8d2207e3b223d870","reportUrl":"https://pagopa.github.io/rtp-platform-qa/458//#testresult/8d2207e3b223d870","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753513682584,"stop":1753513682948,"duration":364}},{"uid":"28c2627b82286446","reportUrl":"https://pagopa.github.io/rtp-platform-qa/457//#testresult/28c2627b82286446","status":"passed","time":{"start":1753433593561,"stop":1753433597084,"duration":3523}},{"uid":"5e1dcfaa07be1ca","reportUrl":"https://pagopa.github.io/rtp-platform-qa/456//#testresult/5e1dcfaa07be1ca","status":"passed","time":{"start":1753427409162,"stop":1753427412771,"duration":3609}},{"uid":"38f93f12273bca7a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/455//#testresult/38f93f12273bca7a","status":"passed","time":{"start":1753367011710,"stop":1753367016091,"duration":4381}},{"uid":"c2a4977d5f7cf577","reportUrl":"https://pagopa.github.io/rtp-platform-qa/454//#testresult/c2a4977d5f7cf577","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1753351369746,"stop":1753351373042,"duration":3296}},{"uid":"7e0c93f2c236658a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/453//#testresult/7e0c93f2c236658a","status":"passed","time":{"start":1753341021324,"stop":1753341027224,"duration":5900}},{"uid":"3c6f5c1881ad6d70","reportUrl":"https://pagopa.github.io/rtp-platform-qa/452//#testresult/3c6f5c1881ad6d70","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1753254637904,"stop":1753254647046,"duration":9142}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"90bf987fd9e6c0f2.json","parameterValues":[]}