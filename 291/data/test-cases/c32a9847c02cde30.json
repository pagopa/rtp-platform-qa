{"uid":"c32a9847c02cde30","name":"An RTP is sent through CBI API","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi","historyId":"b7843ec0a9572280c9663808e1141c5c","time":{"start":1744700825865,"stop":1744700827600,"duration":1735},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('An RTP is sent through CBI API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        rtp_data = generate_rtp_data()\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1744700814937,"stop":1744700814998,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az788-934"},{"name":"thread","value":"2329-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":52,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":52},"items":[{"uid":"6c0df71f99c7d47c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/290//#testresult/6c0df71f99c7d47c","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744640110690,"stop":1744640112289,"duration":1599}},{"uid":"e51d1b6bda263811","reportUrl":"https://pagopa.github.io/rtp-platform-qa/289//#testresult/e51d1b6bda263811","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744614440623,"stop":1744614442204,"duration":1581}},{"uid":"19b4dac07780886d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/288//#testresult/19b4dac07780886d","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744528017840,"stop":1744528020113,"duration":2273}},{"uid":"3fd0cd6e003d64d4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/287//#testresult/3fd0cd6e003d64d4","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744441591287,"stop":1744441592771,"duration":1484}},{"uid":"6ce6cb4b95fe2b4c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/285//#testresult/6ce6cb4b95fe2b4c","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744355221949,"stop":1744355224431,"duration":2482}},{"uid":"823b7eed1f3b1972","reportUrl":"https://pagopa.github.io/rtp-platform-qa/283//#testresult/823b7eed1f3b1972","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744268806806,"stop":1744268809328,"duration":2522}},{"uid":"d4977d9c6ed93019","reportUrl":"https://pagopa.github.io/rtp-platform-qa/282//#testresult/d4977d9c6ed93019","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744215118562,"stop":1744215119972,"duration":1410}},{"uid":"f21e5d86ca832bee","reportUrl":"https://pagopa.github.io/rtp-platform-qa/275//#testresult/f21e5d86ca832bee","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744182412535,"stop":1744182413881,"duration":1346}},{"uid":"f40a496ade4cb404","reportUrl":"https://pagopa.github.io/rtp-platform-qa/273//#testresult/f40a496ade4cb404","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744096032140,"stop":1744096033807,"duration":1667}},{"uid":"4d0c106b8a0eb3bd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/272//#testresult/4d0c106b8a0eb3bd","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1744009627532,"stop":1744009628988,"duration":1456}},{"uid":"1a6d9981005945e8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/271//#testresult/1a6d9981005945e8","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743923189039,"stop":1743923190968,"duration":1929}},{"uid":"821f0352a185a079","reportUrl":"https://pagopa.github.io/rtp-platform-qa/270//#testresult/821f0352a185a079","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743836805761,"stop":1743836808101,"duration":2340}},{"uid":"69f6502c95d5c15a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/269//#testresult/69f6502c95d5c15a","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743755302018,"stop":1743755303441,"duration":1423}},{"uid":"dae54702f5829f0d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/268//#testresult/dae54702f5829f0d","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743754338108,"stop":1743754340556,"duration":2448}},{"uid":"9e6ace8556609caa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/267//#testresult/9e6ace8556609caa","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743750399831,"stop":1743750402358,"duration":2527}},{"uid":"96bace16deaf7fc1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/266//#testresult/96bace16deaf7fc1","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743664017325,"stop":1743664020660,"duration":3335}},{"uid":"3a7fd43cedee745c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/265//#testresult/3a7fd43cedee745c","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743577624996,"stop":1743577627201,"duration":2205}},{"uid":"d0ddf8f062008a45","reportUrl":"https://pagopa.github.io/rtp-platform-qa/262//#testresult/d0ddf8f062008a45","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743491220328,"stop":1743491221716,"duration":1388}},{"uid":"7164705270b9486","reportUrl":"https://pagopa.github.io/rtp-platform-qa/261//#testresult/7164705270b9486","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743404833574,"stop":1743404835156,"duration":1582}},{"uid":"6de42bdce1d777c6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/260//#testresult/6de42bdce1d777c6","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1743318391396,"stop":1743318393129,"duration":1733}}]},"tags":["cbi","send","happy_path"]},"source":"c32a9847c02cde30.json","parameterValues":[]}