{"uid":"54b29a1dd88d3efc","name":"Get a page of activations","fullName":"functional-tests.tests.test_activation#test_get_all_activations","historyId":"66267a3409d96dfc9a077ff3adf38f69","time":{"start":1761752066040,"stop":1761752067048,"duration":1008},"status":"failed","statusMessage":"AssertionError: Expected 'page' metadata to be present and be a dict\nassert False\n +  where False = isinstance(None, dict)\n +    where None = <built-in method get of dict object at 0x7f6e99218b00>('page')\n +      where <built-in method get of dict object at 0x7f6e99218b00> = {'activations': [{'effectiveActivationDate': '2025-07-31T13:13:14.456', 'id': '00003ce7-7b36-41ad-abff-b70f4f412273', ...', 'rtpSpId': 'MOCKSP04'}}, ...], 'metadata': {'nextActivationId': '00033cdf-1775-4436-8f2a-7e30b36d92a4', 'size': 16}}.get","statusTrace":"@allure.feature('Activation')\n    @allure.story('List Activations')\n    @allure.title('Get a page of activations')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.happy_path\n    def test_get_all_activations():\n        access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n        res = get_all_activations(access_token, page=0, size=16)\n        assert res.status_code == 200, f'Expected 200 but got {res.status_code}'\n        body = res.json()\n        assert isinstance(body.get('activations'), list), \"Expected 'activations' to be a list\"\n>       assert isinstance(body.get('page'), dict), \"Expected 'page' metadata to be present and be a dict\"\nE       AssertionError: Expected 'page' metadata to be present and be a dict\nE       assert False\nE        +  where False = isinstance(None, dict)\nE        +    where None = <built-in method get of dict object at 0x7f6e99218b00>('page')\nE        +      where <built-in method get of dict object at 0x7f6e99218b00> = {'activations': [{'effectiveActivationDate': '2025-07-31T13:13:14.456', 'id': '00003ce7-7b36-41ad-abff-b70f4f412273', ...', 'rtpSpId': 'MOCKSP04'}}, ...], 'metadata': {'nextActivationId': '00033cdf-1775-4436-8f2a-7e30b36d92a4', 'size': 16}}.get\n\nfunctional-tests/tests/test_activation.py:67: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761752064454,"stop":1761752064516,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"List Activations"},{"name":"feature","value":"Activation"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"functional-tests.tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2485-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"functional-tests.tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":21,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":21},"items":[{"uid":"1f7a2ea21d1033dd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/595//#testresult/1f7a2ea21d1033dd","status":"failed","statusDetails":"AssertionError: Expected 'page' metadata to be present and be a dict\nassert False\n +  where False = isinstance(None, dict)\n +    where None = <built-in method get of dict object at 0x7f2fc29d2180>('page')\n +      where <built-in method get of dict object at 0x7f2fc29d2180> = {'activations': [{'effectiveActivationDate': '2025-07-31T13:13:14.456', 'id': '00003ce7-7b36-41ad-abff-b70f4f412273', ...', 'rtpSpId': 'MOCKSP04'}}, ...], 'metadata': {'nextActivationId': '00033cdf-1775-4436-8f2a-7e30b36d92a4', 'size': 16}}.get","time":{"start":1761719054315,"stop":1761719055884,"duration":1569}},{"uid":"1b5f999d662ea8f3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/594//#testresult/1b5f999d662ea8f3","status":"failed","statusDetails":"AssertionError: Expected 'page' metadata to be present and be a dict\nassert False\n +  where False = isinstance(None, dict)\n +    where None = <built-in method get of dict object at 0x7f89c0cf9ec0>('page')\n +      where <built-in method get of dict object at 0x7f89c0cf9ec0> = {'activations': [{'effectiveActivationDate': '2025-07-31T13:13:14.456', 'id': '00003ce7-7b36-41ad-abff-b70f4f412273', ...', 'rtpSpId': 'MOCKSP04'}}, ...], 'metadata': {'nextActivationId': '00033cdf-1775-4436-8f2a-7e30b36d92a4', 'size': 16}}.get","time":{"start":1761632690097,"stop":1761632691208,"duration":1111}},{"uid":"b869194b6e860a27","reportUrl":"https://pagopa.github.io/rtp-platform-qa/593//#testresult/b869194b6e860a27","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761546330797,"stop":1761546333783,"duration":2986}},{"uid":"31631ffdeae2ef72","reportUrl":"https://pagopa.github.io/rtp-platform-qa/592//#testresult/31631ffdeae2ef72","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761459694425,"stop":1761459696464,"duration":2039}},{"uid":"b44bfffd78fb301d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/591//#testresult/b44bfffd78fb301d","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761373250691,"stop":1761373253237,"duration":2546}},{"uid":"d9b175b976c018eb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/590//#testresult/d9b175b976c018eb","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761286926101,"stop":1761286929000,"duration":2899}},{"uid":"5ada894564dacfb0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/589//#testresult/5ada894564dacfb0","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761200549945,"stop":1761200551982,"duration":2037}},{"uid":"d7f2dee1d3a17824","reportUrl":"https://pagopa.github.io/rtp-platform-qa/588//#testresult/d7f2dee1d3a17824","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761114216283,"stop":1761114222991,"duration":6708}},{"uid":"a701b968ec4217c5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/587//#testresult/a701b968ec4217c5","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761053791855,"stop":1761053794552,"duration":2697}},{"uid":"32f8a7335289b0da","reportUrl":"https://pagopa.github.io/rtp-platform-qa/585//#testresult/32f8a7335289b0da","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1761027771197,"stop":1761027773692,"duration":2495}},{"uid":"670c7851d8609cab","reportUrl":"https://pagopa.github.io/rtp-platform-qa/584//#testresult/670c7851d8609cab","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1760941410362,"stop":1760941412683,"duration":2321}},{"uid":"16a74972e83cd37a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/583//#testresult/16a74972e83cd37a","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1760854910865,"stop":1760854912898,"duration":2033}},{"uid":"f9d23ec1df6caef8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/582//#testresult/f9d23ec1df6caef8","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1760768437434,"stop":1760768439947,"duration":2513}},{"uid":"9d72856da9fa7ce1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/581//#testresult/9d72856da9fa7ce1","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1760682104988,"stop":1760682107257,"duration":2269}},{"uid":"2779c1dcd6eb9487","reportUrl":"https://pagopa.github.io/rtp-platform-qa/580//#testresult/2779c1dcd6eb9487","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1760624449281,"stop":1760624451505,"duration":2224}},{"uid":"260fed76bd1ae079","reportUrl":"https://pagopa.github.io/rtp-platform-qa/579//#testresult/260fed76bd1ae079","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1760619633895,"stop":1760619636516,"duration":2621}},{"uid":"a0f98ccd9bb1d0cc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/578//#testresult/a0f98ccd9bb1d0cc","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1760595756671,"stop":1760595759216,"duration":2545}},{"uid":"61ba321bc6ebfbbe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/575//#testresult/61ba321bc6ebfbbe","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1760522063013,"stop":1760522065079,"duration":2066}},{"uid":"72f401559e708411","reportUrl":"https://pagopa.github.io/rtp-platform-qa/574//#testresult/72f401559e708411","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1760521301814,"stop":1760521303582,"duration":1768}},{"uid":"de1a770bdaf9348f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/573//#testresult/de1a770bdaf9348f","status":"failed","statusDetails":"AssertionError: Expected 200 but got 429\nassert 429 == 200\n +  where 429 = <Response [429]>.status_code","time":{"start":1760520504598,"stop":1760520506247,"duration":1649}}]},"tags":["auth","activation","happy_path"]},"source":"54b29a1dd88d3efc.json","parameterValues":[]}