{"uid":"5e25b59359eeb35a","name":"Invalid pagination parameters returns 400","fullName":"functional-tests.tests.test_activation#test_get_all_activations_invalid_params","historyId":"495b89c77372f0fca35211e92c389df5","time":{"start":1761752075319,"stop":1761752076120,"duration":801},"status":"failed","statusMessage":"AssertionError: Expected 400 for invalid params, got 200\nassert 200 == 400\n +  where 200 = <Response [200]>.status_code","statusTrace":"page = -1, size = 16\n\n    @allure.feature('Activation')\n    @allure.story('List Activations')\n    @allure.title('Invalid pagination parameters returns 400')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.unhappy_path\n    @pytest.mark.parametrize('page,size', [(-1,16), (0,-5)])\n    def test_get_all_activations_invalid_params(page, size):\n        access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token\n        )\n        res = get_all_activations(access_token, page=page, size=size)\n>       assert res.status_code == 400, f'Expected 400 for invalid params, got {res.status_code}'\nE       AssertionError: Expected 400 for invalid params, got 200\nE       assert 200 == 400\nE        +  where 200 = <Response [200]>.status_code\n\nfunctional-tests/tests/test_activation.py:228: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761752064454,"stop":1761752064516,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"List Activations"},{"name":"feature","value":"Activation"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"functional-tests.tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2485-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"functional-tests.tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"page","value":"-1"},{"name":"size","value":"16"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":18,"unknown":0,"total":21},"items":[{"uid":"bc8c52767ca9e2a3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/595//#testresult/bc8c52767ca9e2a3","status":"failed","statusDetails":"AssertionError: Expected 400 for invalid params, got 200\nassert 200 == 400\n +  where 200 = <Response [200]>.status_code","time":{"start":1761719067786,"stop":1761719069052,"duration":1266}},{"uid":"cb67aade6afaca08","reportUrl":"https://pagopa.github.io/rtp-platform-qa/594//#testresult/cb67aade6afaca08","status":"failed","statusDetails":"AssertionError: Expected 400 for invalid params, got 200\nassert 200 == 400\n +  where 200 = <Response [200]>.status_code","time":{"start":1761632699595,"stop":1761632700461,"duration":866}},{"uid":"f9eb67449efd391b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/593//#testresult/f9eb67449efd391b","status":"passed","time":{"start":1761546345299,"stop":1761546346586,"duration":1287}},{"uid":"df1cb3f16145f104","reportUrl":"https://pagopa.github.io/rtp-platform-qa/592//#testresult/df1cb3f16145f104","status":"passed","time":{"start":1761459705859,"stop":1761459706906,"duration":1047}},{"uid":"b5fa05788d5e6166","reportUrl":"https://pagopa.github.io/rtp-platform-qa/591//#testresult/b5fa05788d5e6166","status":"passed","time":{"start":1761373263007,"stop":1761373264078,"duration":1071}},{"uid":"9d9d0f073d8bf208","reportUrl":"https://pagopa.github.io/rtp-platform-qa/590//#testresult/9d9d0f073d8bf208","status":"passed","time":{"start":1761286941106,"stop":1761286942377,"duration":1271}},{"uid":"cd3fa036cd9d478c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/589//#testresult/cd3fa036cd9d478c","status":"passed","time":{"start":1761200561656,"stop":1761200562749,"duration":1093}},{"uid":"4d3cfae2a07867df","reportUrl":"https://pagopa.github.io/rtp-platform-qa/588//#testresult/4d3cfae2a07867df","status":"passed","time":{"start":1761114231239,"stop":1761114232017,"duration":778}},{"uid":"d31dfdd3347a8e4d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/587//#testresult/d31dfdd3347a8e4d","status":"passed","time":{"start":1761053804300,"stop":1761053805492,"duration":1192}},{"uid":"885500e3b48e272d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/585//#testresult/885500e3b48e272d","status":"passed","time":{"start":1761027781821,"stop":1761027782804,"duration":983}},{"uid":"8744f2b966756105","reportUrl":"https://pagopa.github.io/rtp-platform-qa/584//#testresult/8744f2b966756105","status":"passed","time":{"start":1760941420505,"stop":1760941421419,"duration":914}},{"uid":"c2d9687c081c32cf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/583//#testresult/c2d9687c081c32cf","status":"passed","time":{"start":1760854920526,"stop":1760854921355,"duration":829}},{"uid":"6e687d1702fca627","reportUrl":"https://pagopa.github.io/rtp-platform-qa/582//#testresult/6e687d1702fca627","status":"passed","time":{"start":1760768447232,"stop":1760768448168,"duration":936}},{"uid":"7c90322729156b3f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/581//#testresult/7c90322729156b3f","status":"passed","time":{"start":1760682114640,"stop":1760682115527,"duration":887}},{"uid":"54e81e4d658ac196","reportUrl":"https://pagopa.github.io/rtp-platform-qa/580//#testresult/54e81e4d658ac196","status":"passed","time":{"start":1760624464042,"stop":1760624465362,"duration":1320}},{"uid":"4257aff1472aaf62","reportUrl":"https://pagopa.github.io/rtp-platform-qa/579//#testresult/4257aff1472aaf62","status":"passed","time":{"start":1760619646810,"stop":1760619647949,"duration":1139}},{"uid":"a9bf9c0ce028dcc2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/578//#testresult/a9bf9c0ce028dcc2","status":"passed","time":{"start":1760595767120,"stop":1760595767968,"duration":848}},{"uid":"c7f03e8c68bec2b4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/575//#testresult/c7f03e8c68bec2b4","status":"passed","time":{"start":1760522076096,"stop":1760522077266,"duration":1170}},{"uid":"62fe50a595dbeff4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/574//#testresult/62fe50a595dbeff4","status":"passed","time":{"start":1760521312454,"stop":1760521313438,"duration":984}},{"uid":"3ff1c78577f42c0f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/573//#testresult/3ff1c78577f42c0f","status":"passed","time":{"start":1760520513720,"stop":1760520514513,"duration":793}}]},"tags":["auth","activation","unhappy_path"]},"source":"5e25b59359eeb35a.json","parameterValues":["-1","16"]}