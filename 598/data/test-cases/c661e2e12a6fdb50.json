{"uid":"c661e2e12a6fdb50","name":"Non-existent NextActivationId returns 200 with empty body","fullName":"functional-tests.tests.test_activation#test_get_all_activations_nonexistent_next_activation_id","historyId":"672b6120dac73b1b59f585e4bed66acd","time":{"start":1761818845668,"stop":1761818846304,"duration":636},"status":"failed","statusMessage":"AssertionError: Expected empty body for nonexistent NextActivationId\nassert False\n +  where False = is_empty_response(<Response [200]>)","statusTrace":"access_token = 'Bearer eyJraWQiOiJiM2MxOWIxODA0ODg0ZGFjOGViYjY3NDhlODcyZDE0ZS83ZjFkZWQzZWQ4OTA0MzEyOTYwMjU5MDIxZjY3Y2I0MCIsImFsZyI6Il...f-yL8Z6LmJs-vwSqds2krN_I5C2LJtmFE4kLCtxD6FTi-YkKX4WuZYiwN6nHmli7AToXkuhXNNcDeCAisV6YETq_fAa6dGGI9CVb2yzNNJXOzHSHDFAn_k'\n\n    @allure.feature('Activation')\n    @allure.story('List Activations')\n    @allure.title('Non-existent NextActivationId returns 200 with empty body')\n    @pytest.mark.auth\n    @pytest.mark.activation\n    @pytest.mark.unhappy_path\n    def test_get_all_activations_nonexistent_next_activation_id(access_token):\n        random_cursor = str(uuid.uuid4())\n    \n        res = get_all_activations(access_token, size=5, next_activation_id=random_cursor)\n    \n        assert res.status_code == 200, f'Expected 200 but got {res.status_code}'\n>       assert is_empty_response(res), 'Expected empty body for nonexistent NextActivationId'\nE       AssertionError: Expected empty body for nonexistent NextActivationId\nE       assert False\nE        +  where False = is_empty_response(<Response [200]>)\n\nfunctional-tests/tests/test_activation.py:299: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761818825876,"stop":1761818825933,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"access_token","time":{"start":1761818845037,"stop":1761818845668,"duration":631},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"List Activations"},{"name":"feature","value":"Activation"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"activation"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"functional-tests.tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2478-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"functional-tests.tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["auth","activation","unhappy_path"]},"source":"c661e2e12a6fdb50.json","parameterValues":[]}