{"uid":"7808000ff0a42c2b","name":"An RTP is sent through API","fullName":"tests.test_send_rtp#test_send_rtp_api","historyId":"6c14d2fbb180e49a106680915fe95577","time":{"start":1742195225234,"stop":1742195227380,"duration":2146},"status":"failed","statusMessage":"AssertionError: Error activating debtor\nassert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('An RTP is sent through API')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    def test_send_rtp_api():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        activation_response = activate(debtor_service_provider_access_token, rtp_data['payer']['payerId'],\n                                       secrets.debtor_service_provider.service_provider_id)\n>       assert activation_response.status_code == 201, 'Error activating debtor'\nE       AssertionError: Error activating debtor\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:34: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1742195197545,"stop":1742195197605,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"fv-az1048-329"},{"name":"thread","value":"2291-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":16,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":16},"items":[{"uid":"d37493180690cbcd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/243//#testresult/d37493180690cbcd","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1742108784169,"stop":1742108800630,"duration":16461}},{"uid":"c2debc1395f9ba35","reportUrl":"https://pagopa.github.io/rtp-platform-qa/242//#testresult/c2debc1395f9ba35","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1742022376038,"stop":1742022392181,"duration":16143}},{"uid":"4b963e389bbcb1b3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/241//#testresult/4b963e389bbcb1b3","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741936001495,"stop":1741936022308,"duration":20813}},{"uid":"5207f610ceefb4ba","reportUrl":"https://pagopa.github.io/rtp-platform-qa/240//#testresult/5207f610ceefb4ba","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741849609232,"stop":1741849672595,"duration":63363}},{"uid":"4e2e57a8e7722152","reportUrl":"https://pagopa.github.io/rtp-platform-qa/239//#testresult/4e2e57a8e7722152","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741763218413,"stop":1741763282074,"duration":63661}},{"uid":"da8da500a01700e6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/238//#testresult/da8da500a01700e6","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741705699721,"stop":1741705762774,"duration":63053}},{"uid":"3dffb662d873dc32","reportUrl":"https://pagopa.github.io/rtp-platform-qa/237//#testresult/3dffb662d873dc32","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741676815611,"stop":1741676881348,"duration":65737}},{"uid":"c42e686956f94fa2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/236//#testresult/c42e686956f94fa2","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741631452329,"stop":1741631515392,"duration":63063}},{"uid":"c1cf92e0fa16ec5e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/233//#testresult/c1cf92e0fa16ec5e","status":"failed","statusDetails":"AssertionError: assert 504 == 201\n +  where 504 = <Response [504]>.status_code","time":{"start":1741603696204,"stop":1741603759474,"duration":63270}},{"uid":"413f9514a5ffd0cd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/232//#testresult/413f9514a5ffd0cd","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741590418231,"stop":1741590423309,"duration":5078}},{"uid":"57675922bed0c726","reportUrl":"https://pagopa.github.io/rtp-platform-qa/231//#testresult/57675922bed0c726","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741503958081,"stop":1741503963563,"duration":5482}},{"uid":"4bac02326660b3c7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/230//#testresult/4bac02326660b3c7","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741417536444,"stop":1741417539991,"duration":3547}},{"uid":"ec22644f5ee20c9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/229//#testresult/ec22644f5ee20c9","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741368333998,"stop":1741368337155,"duration":3157}},{"uid":"4efddbe336dd47c0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/228//#testresult/4efddbe336dd47c0","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741365933629,"stop":1741365942760,"duration":9131}},{"uid":"1b2ca3dc9abf6032","reportUrl":"https://pagopa.github.io/rtp-platform-qa/227//#testresult/1b2ca3dc9abf6032","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1741364150277,"stop":1741364154273,"duration":3996}}]},"tags":["send","happy_path"]},"source":"7808000ff0a42c2b.json","parameterValues":[]}