{"uid":"b967030c4fe8f3a","name":"Debtor fiscal code must be lower case during RTP send","fullName":"tests.test_send_rtp#test_cannot_send_rtp_api_lower_fiscal_code","historyId":"017de99ba5d6b89046c2601fd9a0cfdc","time":{"start":1737039680756,"stop":1737039683558,"duration":2802},"status":"failed","statusMessage":"AssertionError: assert 201 == 400\n +  where 201 = <Response [201]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('Debtor fiscal code must be lower case during RTP send')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_cannot_send_rtp_api_lower_fiscal_code():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                                                      client_secret=secrets.debtor_service_provider.client_secret)\n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret)\n    \n        res = activate(debtor_service_provider_access_token, rtp_data['payer']['payerId'],\n                       secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, 'Error activating debtor'\n    \n        rtp_data['payerId'] = rtp_data['payer']['payerId'].lower()\n        response = send_rtp(access_token=creditor_service_provider_access_token, rtp_payload=rtp_data)\n>       assert response.status_code == 400\nE       assert 201 == 400\nE        +  where 201 = <Response [201]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:53: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1737039640666,"stop":1737039640723,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"fv-az813-931"},{"name":"thread","value":"2264-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"7a62191b3671dfc0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/158//#testresult/7a62191b3671dfc0","status":"failed","statusDetails":"AssertionError: assert 201 == 400\n +  where 201 = <Response [201]>.status_code","time":{"start":1737038782208,"stop":1737038785046,"duration":2838}}]},"tags":["unhappy_path","send"]},"source":"b967030c4fe8f3a.json","parameterValues":[]}