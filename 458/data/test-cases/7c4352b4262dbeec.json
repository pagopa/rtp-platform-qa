{"uid":"7c4352b4262dbeec","name":"RTP is successfully retrieved","fullName":"tests.test_get_rtp#test_get_rtp_success","historyId":"caeb9610ab96a7a077f09cf26a913a9a","time":{"start":1753513676262,"stop":1753513677070,"duration":808},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Get')\n    @allure.story('Service provider retrieves an RTP')\n    @allure.title('RTP is successfully retrieved')\n    @pytest.mark.get\n    @pytest.mark.happy_path\n    def test_get_rtp_success():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n>       creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_get_rtp.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1753513625012,"stop":1753513625068,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider retrieves an RTP"},{"name":"feature","value":"RTP Get"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"2481-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":66,"unknown":0,"total":67},"items":[{"uid":"5a2b37b5415ed8b5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/457//#testresult/5a2b37b5415ed8b5","status":"passed","time":{"start":1753433579747,"stop":1753433583088,"duration":3341}},{"uid":"4e5517d30ab73fc6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/456//#testresult/4e5517d30ab73fc6","status":"passed","time":{"start":1753427400010,"stop":1753427402309,"duration":2299}},{"uid":"22f0f952016049f7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/455//#testresult/22f0f952016049f7","status":"passed","time":{"start":1753366998951,"stop":1753367001912,"duration":2961}},{"uid":"235da5d7d53ee1d8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/454//#testresult/235da5d7d53ee1d8","status":"passed","time":{"start":1753351360530,"stop":1753351362786,"duration":2256}},{"uid":"f505ebbbdd706813","reportUrl":"https://pagopa.github.io/rtp-platform-qa/453//#testresult/f505ebbbdd706813","status":"passed","time":{"start":1753341010646,"stop":1753341013075,"duration":2429}},{"uid":"87dbde1a3a10bcb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/452//#testresult/87dbde1a3a10bcb","status":"passed","time":{"start":1753254629896,"stop":1753254631872,"duration":1976}},{"uid":"5d671479534f9dd7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/451//#testresult/5d671479534f9dd7","status":"passed","time":{"start":1753168188936,"stop":1753168190788,"duration":1852}},{"uid":"d0259ef0d5e2d8f4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/450//#testresult/d0259ef0d5e2d8f4","status":"passed","time":{"start":1753081909794,"stop":1753081911687,"duration":1893}},{"uid":"83a79df714745573","reportUrl":"https://pagopa.github.io/rtp-platform-qa/449//#testresult/83a79df714745573","status":"passed","time":{"start":1752995274960,"stop":1752995276943,"duration":1983}},{"uid":"8acf388b8929487b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/448//#testresult/8acf388b8929487b","status":"passed","time":{"start":1752908913586,"stop":1752908916856,"duration":3270}},{"uid":"5653439117c2ef2a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/447//#testresult/5653439117c2ef2a","status":"passed","time":{"start":1752822638180,"stop":1752822641445,"duration":3265}},{"uid":"58b6ce5c7bcd3b71","reportUrl":"https://pagopa.github.io/rtp-platform-qa/446//#testresult/58b6ce5c7bcd3b71","status":"passed","time":{"start":1752736189190,"stop":1752736191658,"duration":2468}},{"uid":"db715c48c72b5414","reportUrl":"https://pagopa.github.io/rtp-platform-qa/445//#testresult/db715c48c72b5414","status":"passed","time":{"start":1752672658868,"stop":1752672660880,"duration":2012}},{"uid":"3592d03536f9507c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/444//#testresult/3592d03536f9507c","status":"passed","time":{"start":1752649783847,"stop":1752649786156,"duration":2309}},{"uid":"53da5eefaa93259e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/443//#testresult/53da5eefaa93259e","status":"passed","time":{"start":1752569315133,"stop":1752569317019,"duration":1886}},{"uid":"e28d9ae79c951d38","reportUrl":"https://pagopa.github.io/rtp-platform-qa/442//#testresult/e28d9ae79c951d38","status":"passed","time":{"start":1752563391252,"stop":1752563394475,"duration":3223}},{"uid":"750fd370282b02db","reportUrl":"https://pagopa.github.io/rtp-platform-qa/441//#testresult/750fd370282b02db","status":"passed","time":{"start":1752477006473,"stop":1752477008543,"duration":2070}},{"uid":"2e9078b6b9e5dab2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/440//#testresult/2e9078b6b9e5dab2","status":"passed","time":{"start":1752390574195,"stop":1752390576025,"duration":1830}},{"uid":"dd4012dc5c6abb78","reportUrl":"https://pagopa.github.io/rtp-platform-qa/439//#testresult/dd4012dc5c6abb78","status":"passed","time":{"start":1752304106247,"stop":1752304108081,"duration":1834}},{"uid":"1d794284c520357d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/438//#testresult/1d794284c520357d","status":"passed","time":{"start":1752217734477,"stop":1752217737344,"duration":2867}}]},"tags":["get","happy_path"]},"source":"7c4352b4262dbeec.json","parameterValues":[]}