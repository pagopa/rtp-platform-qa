{"uid":"b5a45428b9d0211","name":"malformed rtp_id → 400 Bad Request","fullName":"tests.test_get_rtp#test_get_rtp_invalid_id_format","historyId":"c21612d12b7544d1e793acec3594d7a6","time":{"start":1753513678346,"stop":1753513678719,"duration":373},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Get')\n    @allure.story('Service provider retrieves an RTP')\n    @allure.title('malformed rtp_id → 400 Bad Request')\n    @pytest.mark.get\n    @pytest.mark.unhappy_path\n    def test_get_rtp_invalid_id_format():\n        bad_id = '123-not-a-uuid'\n>       token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_get_rtp.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1753513625012,"stop":1753513625068,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider retrieves an RTP"},{"name":"feature","value":"RTP Get"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"2481-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":66,"unknown":0,"total":67},"items":[{"uid":"26b95d9003b64a63","reportUrl":"https://pagopa.github.io/rtp-platform-qa/457//#testresult/26b95d9003b64a63","status":"passed","time":{"start":1753433584361,"stop":1753433585615,"duration":1254}},{"uid":"d0a9be9ae88e1c9e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/456//#testresult/d0a9be9ae88e1c9e","status":"passed","time":{"start":1753427403155,"stop":1753427404082,"duration":927}},{"uid":"32f9a51ad306050d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/455//#testresult/32f9a51ad306050d","status":"passed","time":{"start":1753367003061,"stop":1753367004196,"duration":1135}},{"uid":"e46938dc7b5008a4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/454//#testresult/e46938dc7b5008a4","status":"passed","time":{"start":1753351363646,"stop":1753351364496,"duration":850}},{"uid":"6c96aeed5850f364","reportUrl":"https://pagopa.github.io/rtp-platform-qa/453//#testresult/6c96aeed5850f364","status":"passed","time":{"start":1753341014038,"stop":1753341014977,"duration":939}},{"uid":"a427146ea182526","reportUrl":"https://pagopa.github.io/rtp-platform-qa/452//#testresult/a427146ea182526","status":"passed","time":{"start":1753254632603,"stop":1753254633416,"duration":813}},{"uid":"4b8e65734844a133","reportUrl":"https://pagopa.github.io/rtp-platform-qa/451//#testresult/4b8e65734844a133","status":"passed","time":{"start":1753168191504,"stop":1753168192596,"duration":1092}},{"uid":"9e909233b78ec97b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/450//#testresult/9e909233b78ec97b","status":"passed","time":{"start":1753081912399,"stop":1753081913114,"duration":715}},{"uid":"4781c6dcbec6d92a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/449//#testresult/4781c6dcbec6d92a","status":"passed","time":{"start":1752995277643,"stop":1752995278344,"duration":701}},{"uid":"e9170545f216df2c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/448//#testresult/e9170545f216df2c","status":"passed","time":{"start":1752908918107,"stop":1752908919372,"duration":1265}},{"uid":"2bc99c8204c7039a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/447//#testresult/2bc99c8204c7039a","status":"passed","time":{"start":1752822642698,"stop":1752822643956,"duration":1258}},{"uid":"49dd28a2d73d21d9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/446//#testresult/49dd28a2d73d21d9","status":"passed","time":{"start":1752736192646,"stop":1752736193604,"duration":958}},{"uid":"46f9aad2637a89b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/445//#testresult/46f9aad2637a89b","status":"passed","time":{"start":1752672661574,"stop":1752672662284,"duration":710}},{"uid":"895edecd81df5378","reportUrl":"https://pagopa.github.io/rtp-platform-qa/444//#testresult/895edecd81df5378","status":"passed","time":{"start":1752649787094,"stop":1752649788032,"duration":938}},{"uid":"53c30e2f8aa394ae","reportUrl":"https://pagopa.github.io/rtp-platform-qa/443//#testresult/53c30e2f8aa394ae","status":"passed","time":{"start":1752569317751,"stop":1752569318467,"duration":716}},{"uid":"6d1c11558b29e3d2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/442//#testresult/6d1c11558b29e3d2","status":"passed","time":{"start":1752563395698,"stop":1752563396917,"duration":1219}},{"uid":"31882c217f730389","reportUrl":"https://pagopa.github.io/rtp-platform-qa/441//#testresult/31882c217f730389","status":"passed","time":{"start":1752477009265,"stop":1752477010003,"duration":738}},{"uid":"fa1c808fb15d0585","reportUrl":"https://pagopa.github.io/rtp-platform-qa/440//#testresult/fa1c808fb15d0585","status":"passed","time":{"start":1752390576698,"stop":1752390577398,"duration":700}},{"uid":"d3f9971531cc61b8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/439//#testresult/d3f9971531cc61b8","status":"passed","time":{"start":1752304108890,"stop":1752304109573,"duration":683}},{"uid":"cc01c28a325e64da","reportUrl":"https://pagopa.github.io/rtp-platform-qa/438//#testresult/cc01c28a325e64da","status":"passed","time":{"start":1752217738476,"stop":1752217739606,"duration":1130}}]},"tags":["get","unhappy_path"]},"source":"b5a45428b9d0211.json","parameterValues":[]}