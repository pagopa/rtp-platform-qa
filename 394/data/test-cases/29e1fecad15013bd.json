{"uid":"29e1fecad15013bd","name":"An RTP callback is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback_DS_08P_compliant","historyId":"e98ff8a1e43c45b6eec2e1ce025e4cfc","time":{"start":1750317540921,"stop":1750317541303,"duration":382},"status":"failed","statusMessage":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('An RTP callback is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback_DS_08P_compliant():\n        callback_data = generate_callback_data_DS_08P_compliant()\n    \n        cert, key = pfx_to_pem(secrets.debtor_service_provider_mock_PFX_base64,\n                               secrets.debtor_service_provider_mock_PFX_password_base64,\n                               config.cert_path,\n                               config.key_path)\n    \n        callback_response = srtp_callback(rtp_payload=callback_data,\n                                          cert_path=cert,\n                                          key_path=key)\n>       assert callback_response.status_code == 200, f'Error from callback, expected 200 got {callback_response.status_code}'\nE       AssertionError: Error from callback, expected 200 got 400\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\nfunctional-tests/tests/test_callback.py:47: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750317533571,"stop":1750317533633,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2657-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":30,"broken":0,"skipped":0,"passed":48,"unknown":0,"total":78},"items":[{"uid":"7d314b7270f958b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/392//#testresult/7d314b7270f958b","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750230472924,"stop":1750230473550,"duration":626}},{"uid":"786705adf356fc2f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/390//#testresult/786705adf356fc2f","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750170123073,"stop":1750170123678,"duration":605}},{"uid":"9f3c6cba9e90e8ae","reportUrl":"https://pagopa.github.io/rtp-platform-qa/389//#testresult/9f3c6cba9e90e8ae","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750144040593,"stop":1750144041261,"duration":668}},{"uid":"a5f26f4eff50a769","reportUrl":"https://pagopa.github.io/rtp-platform-qa/388//#testresult/a5f26f4eff50a769","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750069025115,"stop":1750069025627,"duration":512}},{"uid":"196e0be0dab04b66","reportUrl":"https://pagopa.github.io/rtp-platform-qa/387//#testresult/196e0be0dab04b66","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1750057707126,"stop":1750057707585,"duration":459}},{"uid":"a8884bbf67086dbf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/386//#testresult/a8884bbf67086dbf","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749971243545,"stop":1749971244037,"duration":492}},{"uid":"fbcb5cb1cc0e21c1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/385//#testresult/fbcb5cb1cc0e21c1","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749884851262,"stop":1749884851715,"duration":453}},{"uid":"c73bc75d964fddbf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/384//#testresult/c73bc75d964fddbf","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749810118738,"stop":1749810119252,"duration":514}},{"uid":"a475146cd9163263","reportUrl":"https://pagopa.github.io/rtp-platform-qa/380//#testresult/a475146cd9163263","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749801527886,"stop":1749801528397,"duration":511}},{"uid":"275da699da016970","reportUrl":"https://pagopa.github.io/rtp-platform-qa/376//#testresult/275da699da016970","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749798430354,"stop":1749798430831,"duration":477}},{"uid":"65fec7efb21171b9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/375//#testresult/65fec7efb21171b9","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749712038670,"stop":1749712039307,"duration":637}},{"uid":"e8333bf3fb445a95","reportUrl":"https://pagopa.github.io/rtp-platform-qa/374//#testresult/e8333bf3fb445a95","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749625632778,"stop":1749625633229,"duration":451}},{"uid":"2977f6bbcb68410a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/373//#testresult/2977f6bbcb68410a","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749539223986,"stop":1749539224438,"duration":452}},{"uid":"79dcacb98e20260d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/365//#testresult/79dcacb98e20260d","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749482097040,"stop":1749482097447,"duration":407}},{"uid":"d3ddb1d1fb4a6825","reportUrl":"https://pagopa.github.io/rtp-platform-qa/363//#testresult/d3ddb1d1fb4a6825","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749452880327,"stop":1749452880789,"duration":462}},{"uid":"ff69a76fb09966aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/362//#testresult/ff69a76fb09966aa","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749366423787,"stop":1749366424448,"duration":661}},{"uid":"8cd5b6b4cfc5cf2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/361//#testresult/8cd5b6b4cfc5cf2","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749280009310,"stop":1749280009821,"duration":511}},{"uid":"60bb8c7a6952ae85","reportUrl":"https://pagopa.github.io/rtp-platform-qa/360//#testresult/60bb8c7a6952ae85","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749193618381,"stop":1749193618763,"duration":382}},{"uid":"c92c65b2a3e24b67","reportUrl":"https://pagopa.github.io/rtp-platform-qa/359//#testresult/c92c65b2a3e24b67","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749107243056,"stop":1749107243871,"duration":815}},{"uid":"ddb07288b8b7fe49","reportUrl":"https://pagopa.github.io/rtp-platform-qa/358//#testresult/ddb07288b8b7fe49","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749020828080,"stop":1749020828533,"duration":453}}]},"tags":["callback","happy_path"]},"source":"29e1fecad15013bd.json","parameterValues":[]}