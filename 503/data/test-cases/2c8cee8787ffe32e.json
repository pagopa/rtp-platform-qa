{"uid":"2c8cee8787ffe32e","name":"An RTP is sent to a CBI service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_cbi","historyId":"5a1461d85ccaaf32bbfc88fcc8135a41","time":{"start":1755932844296,"stop":1755932847282,"duration":2986},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider through Sender')\n    @allure.title('An RTP is sent to a CBI service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi():\n        fiscal_code = secrets.cbi_activated_fiscal_code\n        payee_id = secrets.cbi_payee_id\n        rtp_data = generate_rtp_data(payer_id=fiscal_code, payee_id=str(payee_id))\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755932756992,"stop":1755932757050,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to a provider through Sender"},{"name":"tag","value":"cbi"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2557-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":82,"broken":17,"skipped":0,"passed":29,"unknown":0,"total":128},"items":[{"uid":"9252bd82bbcf60e2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/502//#testresult/9252bd82bbcf60e2","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755847718406,"stop":1755847721679,"duration":3273}},{"uid":"f733a670b579999","reportUrl":"https://pagopa.github.io/rtp-platform-qa/501//#testresult/f733a670b579999","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755846500368,"stop":1755846503678,"duration":3310}},{"uid":"8dd14eda6af2631d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/500//#testresult/8dd14eda6af2631d","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755843966847,"stop":1755843970459,"duration":3612}},{"uid":"d3bc4021b2ff5692","reportUrl":"https://pagopa.github.io/rtp-platform-qa/499//#testresult/d3bc4021b2ff5692","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755760233455,"stop":1755760237610,"duration":4155}},{"uid":"996f29b96d1a74fc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/498//#testresult/996f29b96d1a74fc","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755673756823,"stop":1755673760097,"duration":3274}},{"uid":"89dc886d4d9277fd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/497//#testresult/89dc886d4d9277fd","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755613353321,"stop":1755613356048,"duration":2727}},{"uid":"a12ef99ae7522787","reportUrl":"https://pagopa.github.io/rtp-platform-qa/496//#testresult/a12ef99ae7522787","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755588533579,"stop":1755588536879,"duration":3300}},{"uid":"f50f464c0f3ab699","reportUrl":"https://pagopa.github.io/rtp-platform-qa/495//#testresult/f50f464c0f3ab699","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755587323851,"stop":1755587327061,"duration":3210}},{"uid":"7ca2ecf979f062f5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/494//#testresult/7ca2ecf979f062f5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755501070318,"stop":1755501074272,"duration":3954}},{"uid":"74ef429708e18f65","reportUrl":"https://pagopa.github.io/rtp-platform-qa/493//#testresult/74ef429708e18f65","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755414460974,"stop":1755414464285,"duration":3311}},{"uid":"4cd6e286de850a64","reportUrl":"https://pagopa.github.io/rtp-platform-qa/492//#testresult/4cd6e286de850a64","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755328052662,"stop":1755328055790,"duration":3128}},{"uid":"e67d7914a182e8c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/491//#testresult/e67d7914a182e8c","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755241737960,"stop":1755241741330,"duration":3370}},{"uid":"c4dea651540aefd5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/490//#testresult/c4dea651540aefd5","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755166851314,"stop":1755166854874,"duration":3560}},{"uid":"b05d10c878f792b4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/489//#testresult/b05d10c878f792b4","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755158355000,"stop":1755158358016,"duration":3016}},{"uid":"18a5ddb797158158","reportUrl":"https://pagopa.github.io/rtp-platform-qa/488//#testresult/18a5ddb797158158","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755155400596,"stop":1755155404462,"duration":3866}},{"uid":"aa520bdb2ee34d3e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/487//#testresult/aa520bdb2ee34d3e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755068971756,"stop":1755068974865,"duration":3109}},{"uid":"2f0b692d1bd171e2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/486//#testresult/2f0b692d1bd171e2","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754982585201,"stop":1754982588732,"duration":3531}},{"uid":"ff6cbc084f2502b2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/485//#testresult/ff6cbc084f2502b2","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1754907896290,"stop":1754907897349,"duration":1059}},{"uid":"2b427dcbfdc786af","reportUrl":"https://pagopa.github.io/rtp-platform-qa/483//#testresult/2b427dcbfdc786af","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754896343518,"stop":1754896347116,"duration":3598}},{"uid":"806a2a9cfca5f137","reportUrl":"https://pagopa.github.io/rtp-platform-qa/482//#testresult/806a2a9cfca5f137","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754809671326,"stop":1754809674353,"duration":3027}}]},"tags":["cbi","real_integration","send","happy_path"]},"source":"2c8cee8787ffe32e.json","parameterValues":[]}