{"uid":"8c26fa632005440c","name":"Cannot send RTP with invalid amount","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi_invalid_amount","historyId":"3a2d68c98ccbf254d83aa6a209f2af2f","time":{"start":1741935998225,"stop":1741935999521,"duration":1296},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with invalid amount')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_invalid_amount():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['amount'] = -1\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:53: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1741935982264,"stop":1741935982328,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1660-24"},{"name":"thread","value":"2319-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":13},"items":[{"uid":"a3167bf9483e957e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/240//#testresult/a3167bf9483e957e","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741849604550,"stop":1741849606609,"duration":2059}},{"uid":"f7946bdfb5e7bef4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/239//#testresult/f7946bdfb5e7bef4","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741763215215,"stop":1741763216453,"duration":1238}},{"uid":"b94c21c19e05fe1d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/238//#testresult/b94c21c19e05fe1d","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741705696861,"stop":1741705697993,"duration":1132}},{"uid":"88c3bcc72a051a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/237//#testresult/88c3bcc72a051a","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741676811480,"stop":1741676813447,"duration":1967}},{"uid":"403602a904ebf92","reportUrl":"https://pagopa.github.io/rtp-platform-qa/236//#testresult/403602a904ebf92","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741631449528,"stop":1741631450941,"duration":1413}},{"uid":"cffb22abf58adc98","reportUrl":"https://pagopa.github.io/rtp-platform-qa/233//#testresult/cffb22abf58adc98","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741603692700,"stop":1741603694141,"duration":1441}},{"uid":"a6e7fd1574431fe7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/232//#testresult/a6e7fd1574431fe7","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741590414940,"stop":1741590416356,"duration":1416}},{"uid":"84b691b393d10dde","reportUrl":"https://pagopa.github.io/rtp-platform-qa/231//#testresult/84b691b393d10dde","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741503953484,"stop":1741503955279,"duration":1795}},{"uid":"a3d0eb32d312eb96","reportUrl":"https://pagopa.github.io/rtp-platform-qa/230//#testresult/a3d0eb32d312eb96","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741417533766,"stop":1741417535018,"duration":1252}},{"uid":"2cd2bc5ad40d7c6c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/229//#testresult/2cd2bc5ad40d7c6c","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741368330760,"stop":1741368331940,"duration":1180}},{"uid":"7e0c0cb8c15cb7a2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/228//#testresult/7e0c0cb8c15cb7a2","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741365929822,"stop":1741365931542,"duration":1720}},{"uid":"a6d2f2eab8548170","reportUrl":"https://pagopa.github.io/rtp-platform-qa/227//#testresult/a6d2f2eab8548170","status":"broken","statusDetails":"KeyError: 'access_token'","time":{"start":1741364148289,"stop":1741364149296,"duration":1007}}]},"tags":["cbi","unhappy_path","send"]},"source":"8c26fa632005440c.json","parameterValues":[]}