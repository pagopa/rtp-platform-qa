{"uid":"f24148cf387cb8fa","name":"Happy path: a newly published debt position with VALID status is updated","fullName":"tests.test_debt_position_update#test_update_valid_newly_published_debt_position","historyId":"679ff7081714ee69d34bdd290b398cfd","time":{"start":1759921197212,"stop":1759921239221,"duration":42009},"description":"\nVerify that a newly published debt position with VALID status\ncan be updated and changes are reflected in RTP lookups.\n","descriptionHtml":"<p>Verify that a newly published debt position with VALID status<br />\ncan be updated and changes are reflected in RTP lookups.</p>\n","status":"failed","statusMessage":"AssertionError: Wrong status. Expected SENT but got ERROR_SEND\nassert 'ERROR_SEND' == 'SENT'\n  \n  - SENT\n  + ERROR_SEND","statusTrace":"setup_data = {'debtor_fc': 'FOAGSR57R70X000Z', 'iupd': '66a26397db5447779', 'iuv': '46368364423177927', 'organization_id': '02438750586', ...}\n\n    @allure.feature('Debt Positions')\n    @allure.story('Update Valid Newly Published Debt Position')\n    @pytest.mark.debt_positions\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.timeout(TEST_TIMEOUT_SEC)\n    def test_update_valid_newly_published_debt_position(setup_data: dict[str, Any]) -> None:\n        \"\"\"\n        Verify that a newly published debt position with VALID status\n        can be updated and changes are reflected in RTP lookups.\n        \"\"\"\n        allure.dynamic.title('Happy path: a newly published debt position with VALID status is updated')\n    \n        update_data = _setup_update_test(setup_data, 'VALID', to_publish=False)\n        access_token = _get_rtp_reader_access_token()\n        expected_status = 'SENT'\n    \n        while True:\n            response = get_rtp_by_notice_number(access_token, update_data.nav)\n    \n            if response.status_code != 200:\n                raise RuntimeError(\n                    f\"Error calling find_rtp_by_notice_number API. \"\n                    f\"Response {response.status_code}. Notice number: {update_data.nav}\"\n                )\n    \n            data = response.json()\n            assert isinstance(data, list), 'Invalid response body.'\n    \n            if len(data) == 0:\n                time.sleep(POLLING_RATE_SEC)\n                continue\n    \n            assert len(data) == 1\n    \n            rtp = data[0]\n>           assert rtp['status'] == expected_status, f\"Wrong status. Expected {expected_status} but got {rtp['status']}\"\nE           AssertionError: Wrong status. Expected SENT but got ERROR_SEND\nE           assert 'ERROR_SEND' == 'SENT'\nE             \nE             - SENT\nE             + ERROR_SEND\n\nfunctional-tests/tests/test_debt_position_update.py:134: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759920815183,"stop":1759920815241,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_data","time":{"start":1759921196507,"stop":1759921197212,"duration":705},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Debt Positions"},{"name":"story","value":"Update Valid Newly Published Debt Position"},{"name":"tag","value":"timeout(300)"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"tag","value":"debt_positions"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debt_position_update"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2485-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debt_position_update"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":18,"broken":3,"skipped":0,"passed":11,"unknown":0,"total":32},"items":[{"uid":"ca3139636681a5e8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/559//#testresult/ca3139636681a5e8","status":"failed","statusDetails":"AssertionError: Wrong status. Expected SENT but got ERROR_SEND\nassert 'ERROR_SEND' == 'SENT'\n  \n  - SENT\n  + ERROR_SEND","time":{"start":1759919958366,"stop":1759920000322,"duration":41956}},{"uid":"417581f7e8d41c85","reportUrl":"https://pagopa.github.io/rtp-platform-qa/558//#testresult/417581f7e8d41c85","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1759908324654,"stop":1759908324654,"duration":0}},{"uid":"1e986d0cdd903b05","reportUrl":"https://pagopa.github.io/rtp-platform-qa/557//#testresult/1e986d0cdd903b05","status":"passed","time":{"start":1759822052114,"stop":1759822094027,"duration":41913}},{"uid":"10db308dc830bca1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/556//#testresult/10db308dc830bca1","status":"failed","statusDetails":"AssertionError: assert 403 == 201\n +  where 403 = <Response [403]>.status_code","time":{"start":1759735673990,"stop":1759735674589,"duration":599}},{"uid":"a78f384fa732d6f6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/555//#testresult/a78f384fa732d6f6","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1759649347371,"stop":1759649646619,"duration":299248}},{"uid":"17010b6753d19394","reportUrl":"https://pagopa.github.io/rtp-platform-qa/554//#testresult/17010b6753d19394","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1759562998051,"stop":1759563296831,"duration":298780}},{"uid":"625d3624147ea222","reportUrl":"https://pagopa.github.io/rtp-platform-qa/553//#testresult/625d3624147ea222","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1759484199738,"stop":1759484498465,"duration":298727}},{"uid":"f075960a4b092a84","reportUrl":"https://pagopa.github.io/rtp-platform-qa/552//#testresult/f075960a4b092a84","status":"broken","statusDetails":"requests.exceptions.HTTPError: 504 Server Error: Gateway Time-out for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1759476733277,"stop":1759476733277,"duration":0}},{"uid":"131ad2f7e731d419","reportUrl":"https://pagopa.github.io/rtp-platform-qa/551//#testresult/131ad2f7e731d419","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1759390190232,"stop":1759390489463,"duration":299231}},{"uid":"c084c8afe0628806","reportUrl":"https://pagopa.github.io/rtp-platform-qa/550//#testresult/c084c8afe0628806","status":"passed","time":{"start":1759316130782,"stop":1759316173010,"duration":42228}},{"uid":"aa53d22803063111","reportUrl":"https://pagopa.github.io/rtp-platform-qa/549//#testresult/aa53d22803063111","status":"passed","time":{"start":1759303705500,"stop":1759303747493,"duration":41993}},{"uid":"9e16ba1298270bc4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/548//#testresult/9e16ba1298270bc4","status":"passed","time":{"start":1759217287153,"stop":1759217329623,"duration":42470}},{"uid":"aa0b6c0c5ede3455","reportUrl":"https://pagopa.github.io/rtp-platform-qa/547//#testresult/aa0b6c0c5ede3455","status":"failed","statusDetails":"AssertionError: assert 502 == 201\n +  where 502 = <Response [502]>.status_code","time":{"start":1759130886826,"stop":1759130887188,"duration":362}},{"uid":"b38b643147dea571","reportUrl":"https://pagopa.github.io/rtp-platform-qa/546//#testresult/b38b643147dea571","status":"passed","time":{"start":1759044308864,"stop":1759044321423,"duration":12559}},{"uid":"7e2275567be03218","reportUrl":"https://pagopa.github.io/rtp-platform-qa/545//#testresult/7e2275567be03218","status":"passed","time":{"start":1758957654518,"stop":1758957696607,"duration":42089}},{"uid":"dc41a71cd18a08e3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/544//#testresult/dc41a71cd18a08e3","status":"passed","time":{"start":1758871929851,"stop":1758871973148,"duration":43297}},{"uid":"dac8a2483702c38b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/543//#testresult/dac8a2483702c38b","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1758785534193,"stop":1758785833445,"duration":299252}},{"uid":"de7118f821d6d13b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/542//#testresult/de7118f821d6d13b","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1758699139441,"stop":1758699438313,"duration":298872}},{"uid":"e164ae0b3e654043","reportUrl":"https://pagopa.github.io/rtp-platform-qa/541//#testresult/e164ae0b3e654043","status":"passed","time":{"start":1758612500704,"stop":1758612543809,"duration":43105}},{"uid":"c71145da901e056","reportUrl":"https://pagopa.github.io/rtp-platform-qa/540//#testresult/c71145da901e056","status":"passed","time":{"start":1758526167545,"stop":1758526210861,"duration":43316}}]},"tags":["debt_positions","timeout(300)","send","happy_path"]},"source":"f24148cf387cb8fa.json","parameterValues":[]}