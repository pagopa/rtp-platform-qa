{"uid":"cce3f2e7dd9369b2","name":"An RTP callback with status ACTC is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback_DS_05_ACTC_compliant","historyId":"4b2bd33e1a231657dc457cb580c88b06","time":{"start":1759920833175,"stop":1759920835003,"duration":1828},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP with status ACTC')\n    @allure.title('An RTP callback with status ACTC is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback_DS_05_ACTC_compliant():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        rtp_reader_access_token = get_valid_access_token(\n            client_id=secrets.rtp_reader.client_id,\n            client_secret=secrets.rtp_reader.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        activation_response = activate(\n            debtor_service_provider_access_token,\n            rtp_data['payer']['payerId'],\n            secrets.debtor_service_provider.service_provider_id,\n        )\n    \n        assert activation_response.status_code == 201\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_callback.py:188: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759920815183,"stop":1759920815241,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP with status ACTC"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2485-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":55,"broken":18,"skipped":0,"passed":31,"unknown":0,"total":104},"items":[{"uid":"7c67533260f69103","reportUrl":"https://pagopa.github.io/rtp-platform-qa/559//#testresult/7c67533260f69103","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1759919592557,"stop":1759919594568,"duration":2011}},{"uid":"8739191760312ad4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/558//#testresult/8739191760312ad4","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1759908050083,"stop":1759908052834,"duration":2751}},{"uid":"c2331135c77f63c4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/557//#testresult/c2331135c77f63c4","status":"passed","time":{"start":1759821684567,"stop":1759821687650,"duration":3083}},{"uid":"5416b328812cd6b9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/556//#testresult/5416b328812cd6b9","status":"passed","time":{"start":1759735334597,"stop":1759735339001,"duration":4404}},{"uid":"5ef3b72e73f0ca95","reportUrl":"https://pagopa.github.io/rtp-platform-qa/555//#testresult/5ef3b72e73f0ca95","status":"passed","time":{"start":1759648713405,"stop":1759648716287,"duration":2882}},{"uid":"dcc4de7f52a7a73","reportUrl":"https://pagopa.github.io/rtp-platform-qa/554//#testresult/dcc4de7f52a7a73","status":"passed","time":{"start":1759562352478,"stop":1759562356880,"duration":4402}},{"uid":"bd2c83f88458fe3e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/553//#testresult/bd2c83f88458fe3e","status":"passed","time":{"start":1759483553790,"stop":1759483558369,"duration":4579}},{"uid":"f4cfdb7ed12b3ca4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/552//#testresult/f4cfdb7ed12b3ca4","status":"passed","time":{"start":1759476031461,"stop":1759476036126,"duration":4665}},{"uid":"36c2da4ceee7fb84","reportUrl":"https://pagopa.github.io/rtp-platform-qa/551//#testresult/36c2da4ceee7fb84","status":"passed","time":{"start":1759389608509,"stop":1759389611523,"duration":3014}},{"uid":"bd92ccdbe0809f38","reportUrl":"https://pagopa.github.io/rtp-platform-qa/550//#testresult/bd92ccdbe0809f38","status":"passed","time":{"start":1759315762492,"stop":1759315765576,"duration":3084}},{"uid":"65dcba0f074c6412","reportUrl":"https://pagopa.github.io/rtp-platform-qa/549//#testresult/65dcba0f074c6412","status":"passed","time":{"start":1759303338625,"stop":1759303341511,"duration":2886}},{"uid":"30fc76e4f16bab88","reportUrl":"https://pagopa.github.io/rtp-platform-qa/548//#testresult/30fc76e4f16bab88","status":"passed","time":{"start":1759216945923,"stop":1759216949305,"duration":3382}},{"uid":"65092d85f20fecac","reportUrl":"https://pagopa.github.io/rtp-platform-qa/547//#testresult/65092d85f20fecac","status":"passed","time":{"start":1759130559863,"stop":1759130562728,"duration":2865}},{"uid":"936741acec9cfe0b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/546//#testresult/936741acec9cfe0b","status":"passed","time":{"start":1759043960277,"stop":1759043964725,"duration":4448}},{"uid":"d90e260bf25e9195","reportUrl":"https://pagopa.github.io/rtp-platform-qa/545//#testresult/d90e260bf25e9195","status":"passed","time":{"start":1758957527014,"stop":1758957529923,"duration":2909}},{"uid":"94529da18621a756","reportUrl":"https://pagopa.github.io/rtp-platform-qa/544//#testresult/94529da18621a756","status":"passed","time":{"start":1758871282760,"stop":1758871287232,"duration":4472}},{"uid":"760557003da3c82a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/543//#testresult/760557003da3c82a","status":"passed","time":{"start":1758784899104,"stop":1758784901956,"duration":2852}},{"uid":"b79416e900428c0e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/542//#testresult/b79416e900428c0e","status":"failed","statusDetails":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","time":{"start":1758698494106,"stop":1758698496899,"duration":2793}},{"uid":"78ebf0487f4bc615","reportUrl":"https://pagopa.github.io/rtp-platform-qa/541//#testresult/78ebf0487f4bc615","status":"passed","time":{"start":1758612123336,"stop":1758612127571,"duration":4235}},{"uid":"38aad1af7f46033","reportUrl":"https://pagopa.github.io/rtp-platform-qa/540//#testresult/38aad1af7f46033","status":"passed","time":{"start":1758525786361,"stop":1758525790920,"duration":4559}}]},"tags":["callback","happy_path"]},"source":"cce3f2e7dd9369b2.json","parameterValues":[]}