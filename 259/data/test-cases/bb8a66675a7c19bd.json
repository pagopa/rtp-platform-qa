{"uid":"bb8a66675a7c19bd","name":"The service returns the mocked server error","fullName":"tests.test_mock#test_mock_reachability","historyId":"f2c03b008760b160f2e7c20a3e1161d9","time":{"start":1743232003895,"stop":1743232004565,"duration":670},"status":"failed","statusMessage":"AssertionError: assert 200 == 201\n +  where 200 = <Response [200]>.status_code","statusTrace":"@allure.feature('RTP Service Provider Mock')\n    @allure.story('Send an RTP to mocked Service Provider')\n    @allure.title('The service returns the mocked server error')\n    @pytest.mark.mock\n    @pytest.mark.happy_path\n    def test_mock_reachability():\n        rtp_data = generate_rtp_data()\n        response = send_rtp_to_mock(rtp_payload=rtp_data)\n>       assert response.status_code == 201\nE       assert 200 == 201\nE        +  where 200 = <Response [200]>.status_code\n\nfunctional-tests/tests/test_mock.py:16: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1743231946441,"stop":1743231946504,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Service Provider Mock"},{"name":"story","value":"Send an RTP to mocked Service Provider"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"mock"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_mock"},{"name":"host","value":"fv-az1680-829"},{"name":"thread","value":"2316-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_mock"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":9},"items":[{"uid":"783b928450c1f4d7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/258//#testresult/783b928450c1f4d7","status":"failed","statusDetails":"AssertionError: assert 200 == 201\n +  where 200 = <Response [200]>.status_code","time":{"start":1743145633381,"stop":1743145634053,"duration":672}},{"uid":"c53d5f282c37f448","reportUrl":"https://pagopa.github.io/rtp-platform-qa/257//#testresult/c53d5f282c37f448","status":"failed","statusDetails":"AssertionError: assert 200 == 201\n +  where 200 = <Response [200]>.status_code","time":{"start":1743059226572,"stop":1743059227158,"duration":586}},{"uid":"bd8c921f2e93d640","reportUrl":"https://pagopa.github.io/rtp-platform-qa/256//#testresult/bd8c921f2e93d640","status":"failed","statusDetails":"AssertionError: assert 200 == 201\n +  where 200 = <Response [200]>.status_code","time":{"start":1742972819857,"stop":1742972820327,"duration":470}},{"uid":"a02a97de43c8ac30","reportUrl":"https://pagopa.github.io/rtp-platform-qa/255//#testresult/a02a97de43c8ac30","status":"failed","statusDetails":"AssertionError: assert 200 == 201\n +  where 200 = <Response [200]>.status_code","time":{"start":1742886429833,"stop":1742886430425,"duration":592}},{"uid":"31fba845e6ca153e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/254//#testresult/31fba845e6ca153e","status":"failed","statusDetails":"AssertionError: assert 200 == 201\n +  where 200 = <Response [200]>.status_code","time":{"start":1742800030435,"stop":1742800031043,"duration":608}},{"uid":"e36bd5db3bdf0ca5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/253//#testresult/e36bd5db3bdf0ca5","status":"failed","statusDetails":"AssertionError: assert 200 == 201\n +  where 200 = <Response [200]>.status_code","time":{"start":1742713602221,"stop":1742713602881,"duration":660}},{"uid":"253eff098fd760e8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/252//#testresult/253eff098fd760e8","status":"failed","statusDetails":"AssertionError: assert 200 == 201\n +  where 200 = <Response [200]>.status_code","time":{"start":1742627184817,"stop":1742627185180,"duration":363}},{"uid":"8e251a308c54c65e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/251//#testresult/8e251a308c54c65e","status":"failed","statusDetails":"AssertionError: assert 200 == 201\n +  where 200 = <Response [200]>.status_code","time":{"start":1742576852621,"stop":1742576852960,"duration":339}}]},"tags":["mock","happy_path"]},"source":"bb8a66675a7c19bd.json","parameterValues":[]}