{"uid":"8ff086b45d125d8b","name":"An RTP callback is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback_DS_04b_compliant","historyId":"475e3c0708b05c2b7bfae9db8dc283af","time":{"start":1749801527452,"stop":1749801527875,"duration":423},"status":"failed","statusMessage":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider sends a callback referred to an RTP')\n    @allure.title('An RTP callback is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback_DS_04b_compliant():\n        callback_data = generate_callback_data_DS_04b_compliant()\n    \n        cert, key = pfx_to_pem(secrets.debtor_service_provider_mock_PFX_base64,\n                               secrets.debtor_service_provider_mock_PFX_password_base64,\n                               config.cert_path,\n                               config.key_path)\n    \n        callback_response = srtp_callback(rtp_payload=callback_data,\n                                          cert_path=cert,\n                                          key_path=key)\n>       assert callback_response.status_code == 200, f'Error from callback, expected 200 got {callback_response.status_code}'\nE       AssertionError: Error from callback, expected 200 got 400\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\nfunctional-tests/tests/test_callback.py:28: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749801520690,"stop":1749801520748,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends a callback referred to an RTP"},{"name":"feature","value":"RTP Callback"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2528-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":21,"broken":0,"skipped":0,"passed":48,"unknown":0,"total":69},"items":[{"uid":"d48ab598573c0347","reportUrl":"https://pagopa.github.io/rtp-platform-qa/376//#testresult/d48ab598573c0347","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749798429835,"stop":1749798430343,"duration":508}},{"uid":"594739aa425f1709","reportUrl":"https://pagopa.github.io/rtp-platform-qa/375//#testresult/594739aa425f1709","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749712036927,"stop":1749712038659,"duration":1732}},{"uid":"d3a7bdafecff82fd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/374//#testresult/d3a7bdafecff82fd","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749625630957,"stop":1749625632767,"duration":1810}},{"uid":"bc1155d96e373b89","reportUrl":"https://pagopa.github.io/rtp-platform-qa/373//#testresult/bc1155d96e373b89","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749539223506,"stop":1749539223975,"duration":469}},{"uid":"49a067938cbd4165","reportUrl":"https://pagopa.github.io/rtp-platform-qa/365//#testresult/49a067938cbd4165","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749482092089,"stop":1749482097029,"duration":4940}},{"uid":"3fb5cf8227536ef0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/363//#testresult/3fb5cf8227536ef0","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749452878633,"stop":1749452880317,"duration":1684}},{"uid":"e4e126f4288b5a34","reportUrl":"https://pagopa.github.io/rtp-platform-qa/362//#testresult/e4e126f4288b5a34","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749366421421,"stop":1749366423776,"duration":2355}},{"uid":"aedd1eec3e85c3b3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/361//#testresult/aedd1eec3e85c3b3","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749280008781,"stop":1749280009300,"duration":519}},{"uid":"c194cceab4b26865","reportUrl":"https://pagopa.github.io/rtp-platform-qa/360//#testresult/c194cceab4b26865","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749193617849,"stop":1749193618370,"duration":521}},{"uid":"d812c643b89e039f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/359//#testresult/d812c643b89e039f","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749107241987,"stop":1749107243046,"duration":1059}},{"uid":"4dfbb56f4b7c6300","reportUrl":"https://pagopa.github.io/rtp-platform-qa/358//#testresult/4dfbb56f4b7c6300","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1749020827514,"stop":1749020828069,"duration":555}},{"uid":"4419660d6abd937d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/357//#testresult/4419660d6abd937d","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748956563392,"stop":1748956563803,"duration":411}},{"uid":"8d26a1b276e1ac91","reportUrl":"https://pagopa.github.io/rtp-platform-qa/356//#testresult/8d26a1b276e1ac91","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748953129189,"stop":1748953129687,"duration":498}},{"uid":"343a4e71c59ca95d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/355//#testresult/343a4e71c59ca95d","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748934470114,"stop":1748934472578,"duration":2464}},{"uid":"a23d4ba340a0f4f8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/354//#testresult/a23d4ba340a0f4f8","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748848067686,"stop":1748848069943,"duration":2257}},{"uid":"4e31b3e3e451ba01","reportUrl":"https://pagopa.github.io/rtp-platform-qa/353//#testresult/4e31b3e3e451ba01","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748761621156,"stop":1748761623851,"duration":2695}},{"uid":"6ff9c8536a2aae9d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/352//#testresult/6ff9c8536a2aae9d","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748675215311,"stop":1748675215898,"duration":587}},{"uid":"9e4d956406aa616c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/351//#testresult/9e4d956406aa616c","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748588827402,"stop":1748588828303,"duration":901}},{"uid":"e538ca61b5e6f19","reportUrl":"https://pagopa.github.io/rtp-platform-qa/350//#testresult/e538ca61b5e6f19","status":"failed","statusDetails":"AssertionError: Error from callback, expected 200 got 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1748534028006,"stop":1748534028622,"duration":616}},{"uid":"5ec37a29e1a97961","reportUrl":"https://pagopa.github.io/rtp-platform-qa/349//#testresult/5ec37a29e1a97961","status":"passed","time":{"start":1748502447591,"stop":1748502452909,"duration":5318}}]},"tags":["callback","happy_path"]},"source":"8ff086b45d125d8b.json","parameterValues":[]}