{"uid":"76716dfac4128dbd","name":"A debtor cannot be activated more than once","fullName":"tests.test_activation#test_fail_activate_debtor_two_times","historyId":"8704b37d564cbbe926da79ebe6202dbe","time":{"start":1749884846961,"stop":1749884848209,"duration":1248},"status":"failed","statusMessage":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","statusTrace":"@allure.feature('Activation')\n    @allure.story('Debtor activation')\n    @allure.title('A debtor cannot be activated more than once')\n    @pytest.mark.activation\n    @pytest.mark.unhappy_path\n    def test_fail_activate_debtor_two_times():\n        access_token = get_valid_access_token(client_id=secrets.debtor_service_provider.client_id,\n                                              client_secret=secrets.debtor_service_provider.client_secret,\n                                              access_token_function=get_access_token)\n        debtor_fc = fake_fc()\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 201, f'Error activating debtor, expected 201 but got {res.status_code}'\n    \n        res = activate(access_token, debtor_fc, secrets.debtor_service_provider.service_provider_id)\n        assert res.status_code == 409, f'Error activating debtor, expected 409 but got {res.status_code}'\n>       assert res.json()['errors'][0]['code'] == '01031000F'\nE       AssertionError: assert '01031000E' == '01031000F'\nE         \nE         - 01031000F\nE         ?         ^\nE         + 01031000E\nE         ?         ^\n\nfunctional-tests/tests/test_activation.py:114: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749884789616,"stop":1749884789672,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Debtor activation"},{"name":"feature","value":"Activation"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"activation"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_activation"},{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"2496-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_activation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":63,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":63},"items":[{"uid":"bf4bcfb59c7cfb74","reportUrl":"https://pagopa.github.io/rtp-platform-qa/384//#testresult/bf4bcfb59c7cfb74","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749810115745,"stop":1749810116852,"duration":1107}},{"uid":"787ae029b438f898","reportUrl":"https://pagopa.github.io/rtp-platform-qa/380//#testresult/787ae029b438f898","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749801524970,"stop":1749801526082,"duration":1112}},{"uid":"b6baaf8443731221","reportUrl":"https://pagopa.github.io/rtp-platform-qa/376//#testresult/b6baaf8443731221","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749798426828,"stop":1749798428086,"duration":1258}},{"uid":"143f7bebc1a56dcd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/375//#testresult/143f7bebc1a56dcd","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749712032437,"stop":1749712034422,"duration":1985}},{"uid":"cc0df11ebdc7eebf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/374//#testresult/cc0df11ebdc7eebf","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749625627883,"stop":1749625629161,"duration":1278}},{"uid":"43e6470e28e978cd","reportUrl":"https://pagopa.github.io/rtp-platform-qa/373//#testresult/43e6470e28e978cd","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749539220732,"stop":1749539221991,"duration":1259}},{"uid":"fa8add5f1fd99775","reportUrl":"https://pagopa.github.io/rtp-platform-qa/365//#testresult/fa8add5f1fd99775","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749482089416,"stop":1749482090764,"duration":1348}},{"uid":"c4379d4d83ea0b4c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/363//#testresult/c4379d4d83ea0b4c","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749452875635,"stop":1749452876907,"duration":1272}},{"uid":"2dcb8c8253b763aa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/362//#testresult/2dcb8c8253b763aa","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749366416455,"stop":1749366418653,"duration":2198}},{"uid":"9e1e439956b24ca8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/361//#testresult/9e1e439956b24ca8","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749280005778,"stop":1749280007063,"duration":1285}},{"uid":"bf44983afb18f68d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/360//#testresult/bf44983afb18f68d","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749193615070,"stop":1749193616151,"duration":1081}},{"uid":"deb47ef7cfec6bca","reportUrl":"https://pagopa.github.io/rtp-platform-qa/359//#testresult/deb47ef7cfec6bca","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749107237168,"stop":1749107239323,"duration":2155}},{"uid":"11104a5115c2bb4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/358//#testresult/11104a5115c2bb4","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1749020824611,"stop":1749020825853,"duration":1242}},{"uid":"7d4fa61c6766b554","reportUrl":"https://pagopa.github.io/rtp-platform-qa/357//#testresult/7d4fa61c6766b554","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748956560639,"stop":1748956561812,"duration":1173}},{"uid":"ac1ce4a9bc932faa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/356//#testresult/ac1ce4a9bc932faa","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748953126369,"stop":1748953127740,"duration":1371}},{"uid":"571b1d7ffd5a2ec","reportUrl":"https://pagopa.github.io/rtp-platform-qa/355//#testresult/571b1d7ffd5a2ec","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748934467339,"stop":1748934468536,"duration":1197}},{"uid":"36cd2d6eb58482d6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/354//#testresult/36cd2d6eb58482d6","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748848064975,"stop":1748848066212,"duration":1237}},{"uid":"78b91f7133e3a90","reportUrl":"https://pagopa.github.io/rtp-platform-qa/353//#testresult/78b91f7133e3a90","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748761616511,"stop":1748761618561,"duration":2050}},{"uid":"7b0f3230cffc03a1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/352//#testresult/7b0f3230cffc03a1","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748675212199,"stop":1748675213641,"duration":1442}},{"uid":"1453ecf0d21eb82d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/351//#testresult/1453ecf0d21eb82d","status":"failed","statusDetails":"AssertionError: assert '01031000E' == '01031000F'\n  \n  - 01031000F\n  ?         ^\n  + 01031000E\n  ?         ^","time":{"start":1748588822851,"stop":1748588825051,"duration":2200}}]},"tags":["activation","unhappy_path"]},"source":"76716dfac4128dbd.json","parameterValues":[]}