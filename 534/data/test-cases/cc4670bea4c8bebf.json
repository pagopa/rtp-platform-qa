{"uid":"cc4670bea4c8bebf","name":"Happy path: an already published debt position with VALID status is updated","fullName":"tests.test_debt_position_update#test_update_valid_already_published_debt_position","historyId":"0b7c62c7454094d3206fd6273e9965e0","time":{"start":1758093981315,"stop":1758094280205,"duration":298890},"description":"\nVerify that an already published debt position with VALID status\ncan be updated and changes are reflected in RTP lookups.\n","descriptionHtml":"<p>Verify that an already published debt position with VALID status<br />\ncan be updated and changes are reflected in RTP lookups.</p>\n","status":"failed","statusMessage":"Failed: Timeout (>300.0s) from pytest-timeout.","statusTrace":"setup_data = {'debtor_fc': 'SRRPNI34L14X000U', 'iupd': '148f178785964cd9a', 'iuv': '503377509438108434', 'organization_id': '02438750586', ...}\n\n    @allure.feature('Debt Positions')\n    @allure.story('Update Valid Already Published Debt Position')\n    @pytest.mark.debt_positions\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.timeout(TEST_TIMEOUT_SEC)\n    def test_update_valid_already_published_debt_position(setup_data: dict[str, Any]) -> None:\n        \"\"\"\n        Verify that an already published debt position with VALID status\n        can be updated and changes are reflected in RTP lookups.\n        \"\"\"\n        allure.dynamic.title('Happy path: an already published debt position with VALID status is updated')\n    \n        update_data = _setup_update_test(setup_data, 'VALID')\n        access_token = _get_rtp_reader_access_token()\n        expected_status = 'SENT'\n    \n        while True:\n            response = get_rtp_by_notice_number(access_token, update_data.nav)\n    \n            if response.status_code != 200:\n                raise RuntimeError(\n                    f\"Error calling find_rtp_by_notice_number API. \"\n                    f\"Response {response.status_code}. Notice number: {update_data.nav}\"\n                )\n    \n            data = response.json()\n            assert isinstance(data, list), 'Invalid response body.'\n    \n            if len(data) == 0:\n>               time.sleep(POLLING_RATE_SEC)\nE               Failed: Timeout (>300.0s) from pytest-timeout.\n\nfunctional-tests/tests/test_debt_position_update.py:174: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758093619632,"stop":1758093619689,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_data","time":{"start":1758093980205,"stop":1758093981314,"duration":1109},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"Debt Positions"},{"name":"story","value":"Update Valid Already Published Debt Position"},{"name":"tag","value":"timeout(300)"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"tag","value":"debt_positions"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debt_position_update"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2487-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debt_position_update"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"4ff2f46325fbc24e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/533//#testresult/4ff2f46325fbc24e","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1758007644663,"stop":1758007943495,"duration":298832}},{"uid":"d2e3cca2393bc940","reportUrl":"https://pagopa.github.io/rtp-platform-qa/532//#testresult/d2e3cca2393bc940","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1757921270690,"stop":1757921569604,"duration":298914}},{"uid":"e70183a738080ee7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/531//#testresult/e70183a738080ee7","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1757834779475,"stop":1757835078015,"duration":298540}},{"uid":"8c70ccc0fcb322e5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/530//#testresult/8c70ccc0fcb322e5","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1757748305744,"stop":1757748604597,"duration":298853}},{"uid":"7114d35c8e7dbfe7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/529//#testresult/7114d35c8e7dbfe7","status":"failed","statusDetails":"Failed: Timeout (>300.0s) from pytest-timeout.","time":{"start":1757666180915,"stop":1757666479366,"duration":298451}}]},"tags":["debt_positions","timeout(300)","send","happy_path"]},"source":"cc4670bea4c8bebf.json","parameterValues":[]}