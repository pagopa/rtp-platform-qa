{"uid":"33092254f37b0655","name":"Cannot send RTP with expired date","fullName":"tests.test_debtor_service_provider#test_send_rtp_to_cbi_expired_date","historyId":"af763254cdd5d120d914e8ce75139912","time":{"start":1741763216457,"stop":1741763217812,"duration":1355},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with expired date')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_expired_date():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['expiryDate'] = '2020-01-01'\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id,\n            secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(secrets.CBI_client_PFX_base64, secrets.CBI_client_PFX_password_base64, config.cert_path, config.key_path)\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider.py:75: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1741763199430,"stop":1741763199490,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider"},{"name":"host","value":"fv-az1909-324"},{"name":"thread","value":"2283-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":11},"items":[{"uid":"daed098324ce8fd5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/238//#testresult/daed098324ce8fd5","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741705697998,"stop":1741705699118,"duration":1120}},{"uid":"7083e8f1522efdc2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/237//#testresult/7083e8f1522efdc2","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741676813450,"stop":1741676815570,"duration":2120}},{"uid":"7df221076905cceb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/236//#testresult/7df221076905cceb","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741631450945,"stop":1741631452292,"duration":1347}},{"uid":"fcac670adc01c67e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/233//#testresult/fcac670adc01c67e","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741603694145,"stop":1741603695604,"duration":1459}},{"uid":"a0db6bbfe05190f8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/232//#testresult/a0db6bbfe05190f8","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741590416359,"stop":1741590417632,"duration":1273}},{"uid":"623057873d6c10af","reportUrl":"https://pagopa.github.io/rtp-platform-qa/231//#testresult/623057873d6c10af","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741503955283,"stop":1741503957168,"duration":1885}},{"uid":"c8c969fc656bb408","reportUrl":"https://pagopa.github.io/rtp-platform-qa/230//#testresult/c8c969fc656bb408","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741417535022,"stop":1741417536392,"duration":1370}},{"uid":"ffda6bc613bb923d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/229//#testresult/ffda6bc613bb923d","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741368331944,"stop":1741368333276,"duration":1332}},{"uid":"9d54177a185813fe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/228//#testresult/9d54177a185813fe","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1741365931546,"stop":1741365933590,"duration":2044}},{"uid":"340bcbd381b3b62","reportUrl":"https://pagopa.github.io/rtp-platform-qa/227//#testresult/340bcbd381b3b62","status":"broken","statusDetails":"KeyError: 'access_token'","time":{"start":1741364149301,"stop":1741364150218,"duration":917}}]},"tags":["cbi","unhappy_path","send"]},"source":"33092254f37b0655.json","parameterValues":[]}