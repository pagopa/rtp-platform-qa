{"uid":"80e4fa6c0fd82533","name":"The response body contains a comprehensible error message","fullName":"tests.test_send_rtp#test_field_error_in_body","historyId":"dd6ce34dc9b4737f86cbefdca52b3610","time":{"start":1741763348647,"stop":1741763352550,"duration":3903},"status":"failed","statusMessage":"AssertionError: Error activating debtor\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('The response body contains a comprehensible error message')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_field_error_in_body():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token)\n    \n        res = activate(debtor_service_provider_access_token, rtp_data['payer']['payerId'],\n                       secrets.debtor_service_provider.service_provider_id)\n>       assert res.status_code == 201, 'Error activating debtor'\nE       AssertionError: Error activating debtor\nE       assert 401 == 201\nE        +  where 401 = <Response [401]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:120: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1741763199430,"stop":1741763199490,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Send"},{"name":"story","value":"Service provider sends an RTP"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"fv-az1909-324"},{"name":"thread","value":"2283-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":11},"items":[{"uid":"1aaf8375f5bb694a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/238//#testresult/1aaf8375f5bb694a","status":"passed","time":{"start":1741705828926,"stop":1741705831935,"duration":3009}},{"uid":"5527be5e72a86b08","reportUrl":"https://pagopa.github.io/rtp-platform-qa/237//#testresult/5527be5e72a86b08","status":"passed","time":{"start":1741676950291,"stop":1741676955348,"duration":5057}},{"uid":"559698c007661b5c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/236//#testresult/559698c007661b5c","status":"passed","time":{"start":1741631581546,"stop":1741631584602,"duration":3056}},{"uid":"381de8257b8288de","reportUrl":"https://pagopa.github.io/rtp-platform-qa/233//#testresult/381de8257b8288de","status":"passed","time":{"start":1741603825372,"stop":1741603828636,"duration":3264}},{"uid":"eb746b910cb3eba6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/232//#testresult/eb746b910cb3eba6","status":"passed","time":{"start":1741590429901,"stop":1741590433155,"duration":3254}},{"uid":"4cc950abbdc18faf","reportUrl":"https://pagopa.github.io/rtp-platform-qa/231//#testresult/4cc950abbdc18faf","status":"passed","time":{"start":1741503971524,"stop":1741503975404,"duration":3880}},{"uid":"3a90cccbff7ca6d3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/230//#testresult/3a90cccbff7ca6d3","status":"passed","time":{"start":1741417546047,"stop":1741417548944,"duration":2897}},{"uid":"5fb0d973bcda88d4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/229//#testresult/5fb0d973bcda88d4","status":"passed","time":{"start":1741368343281,"stop":1741368346438,"duration":3157}},{"uid":"7221022eb0401e72","reportUrl":"https://pagopa.github.io/rtp-platform-qa/228//#testresult/7221022eb0401e72","status":"passed","time":{"start":1741365954601,"stop":1741365958572,"duration":3971}},{"uid":"4d964ebd4b9895b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/227//#testresult/4d964ebd4b9895b","status":"passed","time":{"start":1741364162297,"stop":1741364166174,"duration":3877}}]},"tags":["unhappy_path","send"]},"source":"80e4fa6c0fd82533.json","parameterValues":[]}