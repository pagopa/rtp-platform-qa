{"uid":"92d1dee35311a28c","name":"inexistent RTP -> empty body","fullName":"tests.test_get_rtp#test_get_rtp_not_found","historyId":"f374baeb8e6aa77fbe08e6036a22e13b","time":{"start":1755847704601,"stop":1755847705779,"duration":1178},"status":"failed","statusMessage":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","statusTrace":"@allure.feature('RTP Get')\n    @allure.story('Service provider retrieves an RTP')\n    @allure.title('inexistent RTP -> empty body')\n    @pytest.mark.get\n    @pytest.mark.unhappy_path\n    def test_get_rtp_not_found():\n        fake_rtp_id = str(uuid.uuid4())\n    \n        token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        resp = get_rtp(access_token=token, rtp_id=fake_rtp_id)\n    \n>       assert resp.status_code in (\n            404,\n            204,\n        ), f\"Status code: {resp.status_code}, body: {resp.text}\"\nE       AssertionError: Status code: 403, body: \nE       assert 403 in (404, 204)\nE        +  where 403 = <Response [403]>.status_code\n\nfunctional-tests/tests/test_get_rtp.py:75: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755847614004,"stop":1755847614062,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider retrieves an RTP"},{"name":"feature","value":"RTP Get"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2475-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":26,"broken":16,"skipped":0,"passed":66,"unknown":0,"total":108},"items":[{"uid":"4edb457a24fdd4d5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/501//#testresult/4edb457a24fdd4d5","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755846493690,"stop":1755846494609,"duration":919}},{"uid":"34ee3b5d388ea259","reportUrl":"https://pagopa.github.io/rtp-platform-qa/500//#testresult/34ee3b5d388ea259","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755843958914,"stop":1755843959801,"duration":887}},{"uid":"d37bbda970faf81d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/499//#testresult/d37bbda970faf81d","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755760226893,"stop":1755760227657,"duration":764}},{"uid":"a6a91f1435cd8c43","reportUrl":"https://pagopa.github.io/rtp-platform-qa/498//#testresult/a6a91f1435cd8c43","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755673747155,"stop":1755673748401,"duration":1246}},{"uid":"17389ad17d97089c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/497//#testresult/17389ad17d97089c","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755613346461,"stop":1755613347251,"duration":790}},{"uid":"8b2739bd53bcb393","reportUrl":"https://pagopa.github.io/rtp-platform-qa/496//#testresult/8b2739bd53bcb393","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755588527640,"stop":1755588528415,"duration":775}},{"uid":"d61934b3734c4bf2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/495//#testresult/d61934b3734c4bf2","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755587316729,"stop":1755587317618,"duration":889}},{"uid":"a0af6308e2056ca2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/494//#testresult/a0af6308e2056ca2","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755501060689,"stop":1755501061993,"duration":1304}},{"uid":"ab40c1765730f078","reportUrl":"https://pagopa.github.io/rtp-platform-qa/493//#testresult/ab40c1765730f078","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755414454621,"stop":1755414455406,"duration":785}},{"uid":"cb4726be2c735fd4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/492//#testresult/cb4726be2c735fd4","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755328047064,"stop":1755328047784,"duration":720}},{"uid":"770d56002f6ad666","reportUrl":"https://pagopa.github.io/rtp-platform-qa/491//#testresult/770d56002f6ad666","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755241732126,"stop":1755241732911,"duration":785}},{"uid":"546c279a0701e1d3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/490//#testresult/546c279a0701e1d3","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755166843075,"stop":1755166844132,"duration":1057}},{"uid":"d6b05d3fc47c09e8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/489//#testresult/d6b05d3fc47c09e8","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755158348649,"stop":1755158349411,"duration":762}},{"uid":"3b63f72bcbd455a0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/488//#testresult/3b63f72bcbd455a0","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755155390618,"stop":1755155391870,"duration":1252}},{"uid":"57e0f88543c106e4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/487//#testresult/57e0f88543c106e4","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1755068963764,"stop":1755068964668,"duration":904}},{"uid":"3a7a501352eb7cc4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/486//#testresult/3a7a501352eb7cc4","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1754982575509,"stop":1754982576805,"duration":1296}},{"uid":"4ea0db697fb71b25","reportUrl":"https://pagopa.github.io/rtp-platform-qa/485//#testresult/4ea0db697fb71b25","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1754907888642,"stop":1754907889546,"duration":904}},{"uid":"7abaae6ecf169e74","reportUrl":"https://pagopa.github.io/rtp-platform-qa/483//#testresult/7abaae6ecf169e74","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1754896333357,"stop":1754896334648,"duration":1291}},{"uid":"2e6b8f0022a1bdd9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/482//#testresult/2e6b8f0022a1bdd9","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1754809664624,"stop":1754809665537,"duration":913}},{"uid":"f946ab4de671b5f9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/481//#testresult/f946ab4de671b5f9","status":"failed","statusDetails":"AssertionError: Status code: 403, body: \nassert 403 in (404, 204)\n +  where 403 = <Response [403]>.status_code","time":{"start":1754723274641,"stop":1754723275396,"duration":755}}]},"tags":["get","unhappy_path"]},"source":"92d1dee35311a28c.json","parameterValues":[]}