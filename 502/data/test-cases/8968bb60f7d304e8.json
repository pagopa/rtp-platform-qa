{"uid":"8968bb60f7d304e8","name":"An RTP is sent to ICCREA service with activated fiscal code","fullName":"tests.test_send_rtp#test_send_rtp_to_iccrea","historyId":"43c6e6f1884b3efb611eee04b5b6eb0c","time":{"start":1755847723107,"stop":1755847726329,"duration":3222},"status":"failed","statusMessage":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to a provider')\n    @allure.title('An RTP is sent to ICCREA service with activated fiscal code')\n    @pytest.mark.send\n    @pytest.mark.happy_path\n    @pytest.mark.real_integration\n    @pytest.mark.iccrea\n    def test_send_rtp_to_iccrea():\n        rtp_data = generate_rtp_data(payer_id=secrets.iccrea_activated_fiscal_code)\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n>       assert send_response.status_code == 201\nE       assert 422 == 201\nE        +  where 422 = <Response [422]>.status_code\n\nfunctional-tests/tests/test_send_rtp.py:143: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755847614004,"stop":1755847614062,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to a provider"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"iccrea"},{"name":"tag","value":"real_integration"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2475-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":41,"broken":16,"skipped":0,"passed":19,"unknown":0,"total":76},"items":[{"uid":"a813c02f4362194a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/501//#testresult/a813c02f4362194a","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755846505816,"stop":1755846508966,"duration":3150}},{"uid":"bedf338f3ff64310","reportUrl":"https://pagopa.github.io/rtp-platform-qa/500//#testresult/bedf338f3ff64310","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755843971586,"stop":1755843974301,"duration":2715}},{"uid":"b8a0a6a6909cbc58","reportUrl":"https://pagopa.github.io/rtp-platform-qa/499//#testresult/b8a0a6a6909cbc58","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755760238948,"stop":1755760241654,"duration":2706}},{"uid":"de3e279d5fbc9d2d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/498//#testresult/de3e279d5fbc9d2d","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755673761620,"stop":1755673765335,"duration":3715}},{"uid":"e95b4261c1517dc1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/497//#testresult/e95b4261c1517dc1","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755613357038,"stop":1755613359717,"duration":2679}},{"uid":"deee5c1b0f0d45de","reportUrl":"https://pagopa.github.io/rtp-platform-qa/496//#testresult/deee5c1b0f0d45de","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755588537905,"stop":1755588540469,"duration":2564}},{"uid":"db87502b452c176e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/495//#testresult/db87502b452c176e","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755587328219,"stop":1755587330742,"duration":2523}},{"uid":"8c6419277702ace3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/494//#testresult/8c6419277702ace3","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755501075823,"stop":1755501079494,"duration":3671}},{"uid":"3f7856acbd7fb474","reportUrl":"https://pagopa.github.io/rtp-platform-qa/493//#testresult/3f7856acbd7fb474","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755414465314,"stop":1755414468322,"duration":3008}},{"uid":"a19369d2f2adaa2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/492//#testresult/a19369d2f2adaa2","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755328056790,"stop":1755328059578,"duration":2788}},{"uid":"d7faf30499290697","reportUrl":"https://pagopa.github.io/rtp-platform-qa/491//#testresult/d7faf30499290697","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755241742360,"stop":1755241745323,"duration":2963}},{"uid":"741be3274f4c8697","reportUrl":"https://pagopa.github.io/rtp-platform-qa/490//#testresult/741be3274f4c8697","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755166856090,"stop":1755166858916,"duration":2826}},{"uid":"684046b6c5f0d17","reportUrl":"https://pagopa.github.io/rtp-platform-qa/489//#testresult/684046b6c5f0d17","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755158359042,"stop":1755158362212,"duration":3170}},{"uid":"7d8e5d8f368cbde9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/488//#testresult/7d8e5d8f368cbde9","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755155406030,"stop":1755155409531,"duration":3501}},{"uid":"bcb28a67f610a1b1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/487//#testresult/bcb28a67f610a1b1","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1755068976128,"stop":1755068978940,"duration":2812}},{"uid":"2c49e05db6148b54","reportUrl":"https://pagopa.github.io/rtp-platform-qa/486//#testresult/2c49e05db6148b54","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754982590296,"stop":1754982593961,"duration":3665}},{"uid":"205f5e8a103d4ba8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/485//#testresult/205f5e8a103d4ba8","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754907899068,"stop":1754907902277,"duration":3209}},{"uid":"f3b1d78add1a8657","reportUrl":"https://pagopa.github.io/rtp-platform-qa/483//#testresult/f3b1d78add1a8657","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754896349188,"stop":1754896353033,"duration":3845}},{"uid":"fa6101a4910ec854","reportUrl":"https://pagopa.github.io/rtp-platform-qa/482//#testresult/fa6101a4910ec854","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754809675526,"stop":1754809678289,"duration":2763}},{"uid":"3330543858a1b6c6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/481//#testresult/3330543858a1b6c6","status":"failed","statusDetails":"AssertionError: assert 422 == 201\n +  where 422 = <Response [422]>.status_code","time":{"start":1754723284880,"stop":1754723287536,"duration":2656}}]},"tags":["iccrea","real_integration","send","happy_path"]},"source":"8968bb60f7d304e8.json","parameterValues":[]}