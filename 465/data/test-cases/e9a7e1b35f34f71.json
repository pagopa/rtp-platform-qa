{"uid":"e9a7e1b35f34f71","name":"The response body contains a comprehensible error message","fullName":"tests.test_send_rtp#test_field_error_in_body","historyId":"dd6ce34dc9b4737f86cbefdca52b3610","time":{"start":1753974041104,"stop":1753974041852,"duration":748},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP')\n    @allure.title('The response body contains a comprehensible error message')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    def test_field_error_in_body():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n>       creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n\nfunctional-tests/tests/test_send_rtp.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/auth.py:8: in get_valid_access_token\n    token_response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/requests/models.py:1026: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1753973983537,"stop":1753973983594,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_rtp"},{"name":"host","value":"pkrvmjbmru5nbw0"},{"name":"thread","value":"2503-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":8,"skipped":0,"passed":187,"unknown":0,"total":199},"items":[{"uid":"f368017109bdf0ba","reportUrl":"https://pagopa.github.io/rtp-platform-qa/464//#testresult/f368017109bdf0ba","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753945856518,"stop":1753945857714,"duration":1196}},{"uid":"359ede1890ef5010","reportUrl":"https://pagopa.github.io/rtp-platform-qa/463//#testresult/359ede1890ef5010","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753878293035,"stop":1753878294320,"duration":1285}},{"uid":"305f039c3a6e2d06","reportUrl":"https://pagopa.github.io/rtp-platform-qa/462//#testresult/305f039c3a6e2d06","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753859505649,"stop":1753859506892,"duration":1243}},{"uid":"2a6bcc82c6a55d71","reportUrl":"https://pagopa.github.io/rtp-platform-qa/461//#testresult/2a6bcc82c6a55d71","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753773063481,"stop":1753773064749,"duration":1268}},{"uid":"a22644062e83f90b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/460//#testresult/a22644062e83f90b","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753686736308,"stop":1753686737275,"duration":967}},{"uid":"8d22566615e3115a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/459//#testresult/8d22566615e3115a","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753600071314,"stop":1753600072012,"duration":698}},{"uid":"d73a1ffe4670090e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/458//#testresult/d73a1ffe4670090e","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1753513684457,"stop":1753513685163,"duration":706}},{"uid":"a3fc4f33b6d36d32","reportUrl":"https://pagopa.github.io/rtp-platform-qa/457//#testresult/a3fc4f33b6d36d32","status":"passed","time":{"start":1753433604438,"stop":1753433606943,"duration":2505}},{"uid":"dc9e37b29c222ad9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/456//#testresult/dc9e37b29c222ad9","status":"passed","time":{"start":1753427417293,"stop":1753427418995,"duration":1702}},{"uid":"72dac655a7663f03","reportUrl":"https://pagopa.github.io/rtp-platform-qa/455//#testresult/72dac655a7663f03","status":"passed","time":{"start":1753367023245,"stop":1753367025511,"duration":2266}},{"uid":"ad2a664b8aac203c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/454//#testresult/ad2a664b8aac203c","status":"passed","time":{"start":1753351377448,"stop":1753351379162,"duration":1714}},{"uid":"e6b87a32bc8c036f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/453//#testresult/e6b87a32bc8c036f","status":"passed","time":{"start":1753341033848,"stop":1753341035681,"duration":1833}},{"uid":"a8334a0f23015e5c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/452//#testresult/a8334a0f23015e5c","status":"passed","time":{"start":1753254650580,"stop":1753254651987,"duration":1407}},{"uid":"f7cd575d5ea92f14","reportUrl":"https://pagopa.github.io/rtp-platform-qa/451//#testresult/f7cd575d5ea92f14","status":"passed","time":{"start":1753168203928,"stop":1753168205304,"duration":1376}},{"uid":"36b3e4ba1cf021ba","reportUrl":"https://pagopa.github.io/rtp-platform-qa/450//#testresult/36b3e4ba1cf021ba","status":"passed","time":{"start":1753081924301,"stop":1753081925703,"duration":1402}},{"uid":"25eb786a156bd27a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/449//#testresult/25eb786a156bd27a","status":"passed","time":{"start":1752995294013,"stop":1752995295415,"duration":1402}},{"uid":"177037b35fdbf24f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/448//#testresult/177037b35fdbf24f","status":"passed","time":{"start":1752908940831,"stop":1752908943337,"duration":2506}},{"uid":"d9e357bb46bf3cb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/447//#testresult/d9e357bb46bf3cb","status":"passed","time":{"start":1752822663355,"stop":1752822665846,"duration":2491}},{"uid":"b425391567a234dc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/446//#testresult/b425391567a234dc","status":"passed","time":{"start":1752736209183,"stop":1752736211089,"duration":1906}},{"uid":"81a78d04c929075a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/445//#testresult/81a78d04c929075a","status":"passed","time":{"start":1752672676017,"stop":1752672677411,"duration":1394}}]},"tags":["unhappy_path","send"]},"source":"e9a7e1b35f34f71.json","parameterValues":[]}