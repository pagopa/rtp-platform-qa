{"uid":"d6802fa7b5998787","name":"Happy path: a debt position is created and published in UAT environment","fullName":"tests.test_debt_position_create_delete#test_create_debt_position","historyId":"bd3cd7c9cc92a95d2c3217f54f078888","time":{"start":1759483572861,"stop":1759483871589,"duration":298728},"description":"\nVerify that after creating and publishing a debt position,\nthe RTP lookup returns exactly one entry for the notice number.\n","descriptionHtml":"<p>Verify that after creating and publishing a debt position,<br />\nthe RTP lookup returns exactly one entry for the notice number.</p>\n","status":"failed","statusMessage":"Failed: Timeout (>300.0s) from pytest-timeout.","statusTrace":"setup_data = {'debtor_fc': 'NNCGNG48C59X000P', 'iupd': 'd882a63386f943899', 'iuv': '77152862537082607', 'organization_id': '02438750586', ...}\nenvironment = {'create_function': <function environment.<locals>.<lambda> at 0x7f60b7c16340>, 'delete_function': <function environme...> at 0x7f60b7c16480>, 'get_function': <function environment.<locals>.<lambda> at 0x7f60b7c163e0>, 'is_dev': False, ...}\n\n    @allure.feature('Debt Positions')\n    @allure.story('Create Debt Position')\n    @pytest.mark.debt_positions\n    @pytest.mark.happy_path\n    @pytest.mark.timeout(TEST_TIMEOUT_SEC)\n    def test_create_debt_position(setup_data, environment):\n        \"\"\"\n        Verify that after creating and publishing a debt position,\n        the RTP lookup returns exactly one entry for the notice number.\n        \"\"\"\n        allure.dynamic.title(f\"Happy path: a debt position is created and published in {environment['name']} environment\")\n    \n        subscription_key = setup_data['subscription_key']\n        organization_id = setup_data['organization_id']\n        debtor_fc = setup_data['debtor_fc']\n        iupd = setup_data['iupd']\n        iuv = setup_data['iuv']\n    \n        payload = create_debt_position_payload(debtor_fc=debtor_fc, iupd=iupd, iuv=iuv)\n    \n        create_function = environment['create_function']\n    \n        res = create_function(subscription_key, organization_id, payload, to_publish=True)\n        assert res.status_code == 201, f'Expected 201 but got {res.status_code}'\n        body = res.json()\n    \n        nav = body['paymentOption'][0]['nav']\n        expected_description = body['paymentOption'][0]['description']\n        expected_amount = body['paymentOption'][0]['amount']\n    \n        access_token = get_valid_access_token(\n            client_id=secrets.rtp_reader.client_id,\n            client_secret=secrets.rtp_reader.client_secret,\n            access_token_function=get_access_token,\n        )\n        assert access_token, 'Access token cannot be None'\n    \n        expected_status = 'SENT'\n    \n        while True:\n            response = get_rtp_by_notice_number(access_token, nav)\n    \n            if response.status_code != 200:\n                raise RuntimeError(\n                    f\"Error calling find_rtp_by_notice_number API. \"\n                    f\"Response {response.status_code}. Notice number: {nav}\"\n                )\n    \n            data = response.json()\n            assert isinstance(data, list), 'Invalid response body.'\n    \n            if len(data) == 0:\n>               time.sleep(POLLING_RATE_SEC)\nE               Failed: Timeout (>300.0s) from pytest-timeout.\n\nfunctional-tests/tests/test_debt_position_create_delete.py:138: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1759483521947,"stop":1759483522010,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"environment","time":{"start":1759483571589,"stop":1759483571590,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_data","time":{"start":1759483571590,"stop":1759483572861,"duration":1271},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Create Debt Position"},{"name":"feature","value":"Debt Positions"},{"name":"tag","value":"timeout(300)"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"debt_positions"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debt_position_create_delete"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2547-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debt_position_create_delete"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"environment","value":"{'name': 'UAT', 'is_dev': False, 'create_function': <function environment.<locals>.<lambda> at 0x7f60b7c16340>, 'get_function': <function environment.<locals>.<lambda> at 0x7f60b7c163e0>, 'delete_function': <function environment.<locals>.<lambda> at 0x7f60b7c16480>, 'update_function': <function environment.<locals>.<lambda> at 0x7f60b7c16520>, 'subscription_key': 'fceef49eb5874c1fa60e488724cddc58', 'organization_id': '02438750586'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["debt_positions","timeout(300)","happy_path"]},"source":"d6802fa7b5998787.json","parameterValues":["{'name': 'UAT', 'is_dev': False, 'create_function': <function environment.<locals>.<lambda> at 0x7f60b7c16340>, 'get_function': <function environment.<locals>.<lambda> at 0x7f60b7c163e0>, 'delete_function': <function environment.<locals>.<lambda> at 0x7f60b7c16480>, 'update_function': <function environment.<locals>.<lambda> at 0x7f60b7c16520>, 'subscription_key': 'fceef49eb5874c1fa60e488724cddc58', 'organization_id': '02438750586'}"]}