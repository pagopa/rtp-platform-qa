{"uid":"e04de06c8fce0dc8","name":"RTP is successfully retrieved","fullName":"tests.test_get_rtp#test_get_rtp_success","historyId":"caeb9610ab96a7a077f09cf26a913a9a","time":{"start":1758699754216,"stop":1758699757496,"duration":3280},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"@allure.feature('RTP Get')\n    @allure.story('Service provider retrieves an RTP')\n    @allure.title('RTP is successfully retrieved')\n    @pytest.mark.get\n    @pytest.mark.happy_path\n    def test_get_rtp_success():\n        rtp_data = generate_rtp_data()\n    \n        debtor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.debtor_service_provider.client_id,\n            client_secret=secrets.debtor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        creditor_service_provider_access_token = get_valid_access_token(\n            client_id=secrets.creditor_service_provider.client_id,\n            client_secret=secrets.creditor_service_provider.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        rtp_reader_access_token = get_valid_access_token(\n            client_id=secrets.rtp_reader.client_id,\n            client_secret=secrets.rtp_reader.client_secret,\n            access_token_function=get_access_token,\n        )\n    \n        activation_response = activate(\n            debtor_service_provider_access_token,\n            rtp_data['payer']['payerId'],\n            secrets.debtor_service_provider.service_provider_id,\n        )\n    \n        assert activation_response.status_code == 201, 'Error activating debtor'\n    \n        send_response = send_rtp(\n            access_token=creditor_service_provider_access_token, rtp_payload=rtp_data\n        )\n    \n>       assert send_response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\nfunctional-tests/tests/test_get_rtp.py:52: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758698467826,"stop":1758698467883,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Get"},{"name":"story","value":"Service provider retrieves an RTP"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"get"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_rtp"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2484-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_rtp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":52,"broken":18,"skipped":0,"passed":78,"unknown":0,"total":148},"items":[{"uid":"e28a4ee1d8227de3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/541//#testresult/e28a4ee1d8227de3","status":"passed","time":{"start":1758612577178,"stop":1758612580766,"duration":3588}},{"uid":"45f47d589f75c844","reportUrl":"https://pagopa.github.io/rtp-platform-qa/540//#testresult/45f47d589f75c844","status":"passed","time":{"start":1758526241697,"stop":1758526245689,"duration":3992}},{"uid":"a9c05b3bf7dfb18a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/539//#testresult/a9c05b3bf7dfb18a","status":"passed","time":{"start":1758439584568,"stop":1758439588098,"duration":3530}},{"uid":"af00213f59024be9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/538//#testresult/af00213f59024be9","status":"passed","time":{"start":1758353243272,"stop":1758353246988,"duration":3716}},{"uid":"a83d8a10224febe","reportUrl":"https://pagopa.github.io/rtp-platform-qa/537//#testresult/a83d8a10224febe","status":"broken","statusDetails":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://api-mcshared.uat.cstar.pagopa.it/auth/token","time":{"start":1758271087774,"stop":1758271088312,"duration":538}},{"uid":"ba41d32ccfe68783","reportUrl":"https://pagopa.github.io/rtp-platform-qa/536//#testresult/ba41d32ccfe68783","status":"passed","time":{"start":1758267106631,"stop":1758267109602,"duration":2971}},{"uid":"30a33be2b65a8a1c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/535//#testresult/30a33be2b65a8a1c","status":"passed","time":{"start":1758180709065,"stop":1758180713118,"duration":4053}},{"uid":"fb1354a81c088e84","reportUrl":"https://pagopa.github.io/rtp-platform-qa/534//#testresult/fb1354a81c088e84","status":"passed","time":{"start":1758094290408,"stop":1758094293530,"duration":3122}},{"uid":"ca40ba9dea7904c3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/533//#testresult/ca40ba9dea7904c3","status":"passed","time":{"start":1758007958923,"stop":1758007962185,"duration":3262}},{"uid":"b1908c93d7a53d58","reportUrl":"https://pagopa.github.io/rtp-platform-qa/532//#testresult/b1908c93d7a53d58","status":"passed","time":{"start":1757921585847,"stop":1757921588806,"duration":2959}},{"uid":"42f53d0391b2cb49","reportUrl":"https://pagopa.github.io/rtp-platform-qa/531//#testresult/42f53d0391b2cb49","status":"passed","time":{"start":1757835091083,"stop":1757835095253,"duration":4170}},{"uid":"c79ee28d4f3488e4","reportUrl":"https://pagopa.github.io/rtp-platform-qa/530//#testresult/c79ee28d4f3488e4","status":"passed","time":{"start":1757748734679,"stop":1757748738048,"duration":3369}},{"uid":"2bc5fbba28e8768","reportUrl":"https://pagopa.github.io/rtp-platform-qa/529//#testresult/2bc5fbba28e8768","status":"passed","time":{"start":1757666494777,"stop":1757666499011,"duration":4234}},{"uid":"400ad8e341c77dc7","reportUrl":"https://pagopa.github.io/rtp-platform-qa/528//#testresult/400ad8e341c77dc7","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1757661688215,"stop":1757661691220,"duration":3005}},{"uid":"be3ec51b4a737c53","reportUrl":"https://pagopa.github.io/rtp-platform-qa/527//#testresult/be3ec51b4a737c53","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1757598393847,"stop":1757598395996,"duration":2149}},{"uid":"46d438b0bd45240f","reportUrl":"https://pagopa.github.io/rtp-platform-qa/526//#testresult/46d438b0bd45240f","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1757575321726,"stop":1757575323901,"duration":2175}},{"uid":"6236d11c1b13c404","reportUrl":"https://pagopa.github.io/rtp-platform-qa/525//#testresult/6236d11c1b13c404","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1757489074350,"stop":1757489076579,"duration":2229}},{"uid":"20fce1d492c33058","reportUrl":"https://pagopa.github.io/rtp-platform-qa/524//#testresult/20fce1d492c33058","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1757402552032,"stop":1757402553937,"duration":1905}},{"uid":"8976c1f64b401199","reportUrl":"https://pagopa.github.io/rtp-platform-qa/523//#testresult/8976c1f64b401199","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1757316146228,"stop":1757316148161,"duration":1933}},{"uid":"4503f19bad221db0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/522//#testresult/4503f19bad221db0","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1757229692128,"stop":1757229694440,"duration":2312}}]},"tags":["get","happy_path"]},"source":"e04de06c8fce0dc8.json","parameterValues":[]}