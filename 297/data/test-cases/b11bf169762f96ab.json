{"uid":"b11bf169762f96ab","name":"RTP callback is successfully received","fullName":"tests.test_callback#test_receive_rtp_callback","historyId":"564f1dce6aedb3cd53747bbee764bfb9","time":{"start":1744873635890,"stop":1744873636476,"duration":586},"status":"failed","statusMessage":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"@allure.feature('RTP Callback')\n    @allure.story('Service provider receives RTP callback')\n    @allure.title('RTP callback is successfully received')\n    @pytest.mark.callback\n    @pytest.mark.happy_path\n    def test_receive_rtp_callback():\n        rtp_data = generate_rtp_data()\n    \n        cert, key = pfx_to_pem(secrets.debtor_service_provider_mock_PFX_base64,\n                               secrets.debtor_service_provider_mock_PFX_password_base64,\n                               config.cert_path,\n                               config.key_path)\n    \n        activation_response = srtp_callback(rtp_payload=rtp_data, cert_path=cert, key_path=key)\n>       assert activation_response.status_code == 200, 'Error from callback'\nE       AssertionError: Error from callback\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\nfunctional-tests/tests/test_callback.py:25: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1744873628988,"stop":1744873629049,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"RTP Callback"},{"name":"story","value":"Service provider receives RTP callback"},{"name":"tag","value":"happy_path"},{"name":"tag","value":"callback"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_callback"},{"name":"host","value":"fv-az1369-50"},{"name":"thread","value":"2325-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_callback"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":22,"skipped":0,"passed":0,"unknown":0,"total":35},"items":[{"uid":"87dcd08534bbcc6b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/296//#testresult/87dcd08534bbcc6b","status":"failed","statusDetails":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1744799601817,"stop":1744799602333,"duration":516}},{"uid":"ae10cee8dd943080","reportUrl":"https://pagopa.github.io/rtp-platform-qa/295//#testresult/ae10cee8dd943080","status":"failed","statusDetails":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1744787226573,"stop":1744787227097,"duration":524}},{"uid":"a352fcd1dda71fd0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/294//#testresult/a352fcd1dda71fd0","status":"failed","statusDetails":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1744727110653,"stop":1744727111314,"duration":661}},{"uid":"531f556c13395700","reportUrl":"https://pagopa.github.io/rtp-platform-qa/293//#testresult/531f556c13395700","status":"failed","statusDetails":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1744726250211,"stop":1744726250733,"duration":522}},{"uid":"5939a584aab6fa1b","reportUrl":"https://pagopa.github.io/rtp-platform-qa/291//#testresult/5939a584aab6fa1b","status":"failed","statusDetails":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1744700822206,"stop":1744700822672,"duration":466}},{"uid":"835493f098f06942","reportUrl":"https://pagopa.github.io/rtp-platform-qa/290//#testresult/835493f098f06942","status":"failed","statusDetails":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1744640107397,"stop":1744640107816,"duration":419}},{"uid":"106280421810f0a8","reportUrl":"https://pagopa.github.io/rtp-platform-qa/289//#testresult/106280421810f0a8","status":"failed","statusDetails":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1744614435506,"stop":1744614435983,"duration":477}},{"uid":"319996da72f74611","reportUrl":"https://pagopa.github.io/rtp-platform-qa/288//#testresult/319996da72f74611","status":"failed","statusDetails":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1744528010880,"stop":1744528011666,"duration":786}},{"uid":"7d12ef0be535c74e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/287//#testresult/7d12ef0be535c74e","status":"failed","statusDetails":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1744441588032,"stop":1744441588554,"duration":522}},{"uid":"f4a1afed4f9c9ba5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/285//#testresult/f4a1afed4f9c9ba5","status":"failed","statusDetails":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1744355216219,"stop":1744355216880,"duration":661}},{"uid":"69a7864fd03248f5","reportUrl":"https://pagopa.github.io/rtp-platform-qa/283//#testresult/69a7864fd03248f5","status":"failed","statusDetails":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1744268803091,"stop":1744268803550,"duration":459}},{"uid":"960012eeb895a324","reportUrl":"https://pagopa.github.io/rtp-platform-qa/282//#testresult/960012eeb895a324","status":"failed","statusDetails":"AssertionError: Error from callback\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code","time":{"start":1744215113979,"stop":1744215114390,"duration":411}},{"uid":"d2dc6c03a119be0e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/275//#testresult/d2dc6c03a119be0e","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1744182409740,"stop":1744182409740,"duration":0}},{"uid":"2eb0dad9ae70c393","reportUrl":"https://pagopa.github.io/rtp-platform-qa/273//#testresult/2eb0dad9ae70c393","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1744096027911,"stop":1744096027912,"duration":1}},{"uid":"3f659afd6196076e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/272//#testresult/3f659afd6196076e","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1744009623590,"stop":1744009623591,"duration":1}},{"uid":"3ee24ec80e1a95f1","reportUrl":"https://pagopa.github.io/rtp-platform-qa/271//#testresult/3ee24ec80e1a95f1","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743923184749,"stop":1743923184750,"duration":1}},{"uid":"23324acf7211f3fb","reportUrl":"https://pagopa.github.io/rtp-platform-qa/270//#testresult/23324acf7211f3fb","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743836801715,"stop":1743836801715,"duration":0}},{"uid":"f3eb6f947fb2d5c3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/269//#testresult/f3eb6f947fb2d5c3","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743755294818,"stop":1743755294819,"duration":1}},{"uid":"4e7fc471dbdbdb80","reportUrl":"https://pagopa.github.io/rtp-platform-qa/268//#testresult/4e7fc471dbdbdb80","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743754330537,"stop":1743754330538,"duration":1}},{"uid":"90cdaa4f0f941f46","reportUrl":"https://pagopa.github.io/rtp-platform-qa/267//#testresult/90cdaa4f0f941f46","status":"broken","statusDetails":"ValueError: Could not deserialize PKCS12 data","time":{"start":1743750399821,"stop":1743750399821,"duration":0}}]},"tags":["callback","happy_path"]},"source":"b11bf169762f96ab.json","parameterValues":[]}