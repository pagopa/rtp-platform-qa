{"uid":"8e1e63a2c212c680","name":"Cannot send RTP with invalid amount","fullName":"tests.test_debtor_service_provider_availability#test_send_rtp_to_cbi_invalid_amount","historyId":"1efb3edc4b0d10fb2c722d7c966d7daf","time":{"start":1751267315744,"stop":1751267317229,"duration":1485},"status":"failed","statusMessage":"AssertionError: assert 401 == 400\n +  where 401 = <Response [401]>.status_code","statusTrace":"@allure.feature('RTP Send')\n    @allure.story('Service provider sends an RTP to CBI')\n    @allure.title('Cannot send RTP with invalid amount')\n    @pytest.mark.send\n    @pytest.mark.unhappy_path\n    @pytest.mark.cbi\n    def test_send_rtp_to_cbi_invalid_amount():\n        rtp_data = generate_rtp_data()\n        rtp_data['paymentNotice']['amount'] = -1\n        cbi_payload = generate_cbi_rtp_data(rtp_data)\n    \n        auth = client_credentials_to_auth_token(\n            secrets.CBI_client_id, secrets.CBI_client_secret\n        )\n        cert, key = pfx_to_pem(\n            secrets.CBI_client_PFX_base64,\n            secrets.CBI_client_PFX_password_base64,\n            config.cert_path,\n            config.key_path,\n        )\n        cbi_token = get_cbi_access_token(cert, key, auth)\n    \n        response = send_srtp_to_cbi(f\"Bearer {cbi_token}\", cbi_payload)\n>       assert response.status_code == 400\nE       assert 401 == 400\nE        +  where 401 = <Response [401]>.status_code\n\nfunctional-tests/tests/test_debtor_service_provider_availability.py:82: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1751267281654,"stop":1751267281710,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Service provider sends an RTP to CBI"},{"name":"feature","value":"RTP Send"},{"name":"tag","value":"cbi"},{"name":"tag","value":"unhappy_path"},{"name":"tag","value":"send"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_debtor_service_provider_availability"},{"name":"host","value":"pkrvmbietmlfzoi"},{"name":"thread","value":"2594-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_debtor_service_provider_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":40,"unknown":0,"total":48},"items":[{"uid":"f37443cce9728206","reportUrl":"https://pagopa.github.io/rtp-platform-qa/417//#testresult/f37443cce9728206","status":"failed","statusDetails":"AssertionError: assert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1751180868054,"stop":1751180869009,"duration":955}},{"uid":"e8b1e68744c6525c","reportUrl":"https://pagopa.github.io/rtp-platform-qa/416//#testresult/e8b1e68744c6525c","status":"failed","statusDetails":"AssertionError: assert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1751094450161,"stop":1751094451234,"duration":1073}},{"uid":"2f8691fba1cc9f32","reportUrl":"https://pagopa.github.io/rtp-platform-qa/415//#testresult/2f8691fba1cc9f32","status":"passed","time":{"start":1751008090450,"stop":1751008091659,"duration":1209}},{"uid":"1e86a41d3f3014f6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/414//#testresult/1e86a41d3f3014f6","status":"passed","time":{"start":1750947023747,"stop":1750947024795,"duration":1048}},{"uid":"63548fd91a6e14b0","reportUrl":"https://pagopa.github.io/rtp-platform-qa/413//#testresult/63548fd91a6e14b0","status":"passed","time":{"start":1750924197134,"stop":1750924198411,"duration":1277}},{"uid":"a16a2b926f653fbc","reportUrl":"https://pagopa.github.io/rtp-platform-qa/412//#testresult/a16a2b926f653fbc","status":"passed","time":{"start":1750921678209,"stop":1750921679257,"duration":1048}},{"uid":"5844b9d10712a07d","reportUrl":"https://pagopa.github.io/rtp-platform-qa/411//#testresult/5844b9d10712a07d","status":"passed","time":{"start":1750856379505,"stop":1750856381082,"duration":1577}},{"uid":"98dee268ad6f1a92","reportUrl":"https://pagopa.github.io/rtp-platform-qa/408//#testresult/98dee268ad6f1a92","status":"passed","time":{"start":1750835299395,"stop":1750835300831,"duration":1436}},{"uid":"c00ec17299611dd3","reportUrl":"https://pagopa.github.io/rtp-platform-qa/406//#testresult/c00ec17299611dd3","status":"passed","time":{"start":1750779066132,"stop":1750779067108,"duration":976}},{"uid":"d5f41c37689a12f2","reportUrl":"https://pagopa.github.io/rtp-platform-qa/404//#testresult/d5f41c37689a12f2","status":"passed","time":{"start":1750756724076,"stop":1750756725028,"duration":952}},{"uid":"3718d869665fdcc9","reportUrl":"https://pagopa.github.io/rtp-platform-qa/403//#testresult/3718d869665fdcc9","status":"passed","time":{"start":1750748873272,"stop":1750748874461,"duration":1189}},{"uid":"946e7e2b49409d61","reportUrl":"https://pagopa.github.io/rtp-platform-qa/402//#testresult/946e7e2b49409d61","status":"passed","time":{"start":1750684868878,"stop":1750684870284,"duration":1406}},{"uid":"f8cfd105a9965b3a","reportUrl":"https://pagopa.github.io/rtp-platform-qa/401//#testresult/f8cfd105a9965b3a","status":"passed","time":{"start":1750662507891,"stop":1750662509384,"duration":1493}},{"uid":"f836fb6e73a49e30","reportUrl":"https://pagopa.github.io/rtp-platform-qa/400//#testresult/f836fb6e73a49e30","status":"passed","time":{"start":1750576082421,"stop":1750576083513,"duration":1092}},{"uid":"52e7f8b20624c4df","reportUrl":"https://pagopa.github.io/rtp-platform-qa/399//#testresult/52e7f8b20624c4df","status":"passed","time":{"start":1750489649290,"stop":1750489650621,"duration":1331}},{"uid":"6e2cbf6e0b1e8aaa","reportUrl":"https://pagopa.github.io/rtp-platform-qa/398//#testresult/6e2cbf6e0b1e8aaa","status":"passed","time":{"start":1750403243253,"stop":1750403244235,"duration":982}},{"uid":"237ae17a68d18b6e","reportUrl":"https://pagopa.github.io/rtp-platform-qa/397//#testresult/237ae17a68d18b6e","status":"passed","time":{"start":1750335015116,"stop":1750335016897,"duration":1781}},{"uid":"724a1fc0bd21f030","reportUrl":"https://pagopa.github.io/rtp-platform-qa/396//#testresult/724a1fc0bd21f030","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1750329655021,"stop":1750329656521,"duration":1500}},{"uid":"272498c1948c9c70","reportUrl":"https://pagopa.github.io/rtp-platform-qa/394//#testresult/272498c1948c9c70","status":"passed","time":{"start":1750317552035,"stop":1750317553002,"duration":967}},{"uid":"2e2d5cff7c0b8f6","reportUrl":"https://pagopa.github.io/rtp-platform-qa/392//#testresult/2e2d5cff7c0b8f6","status":"passed","time":{"start":1750230492824,"stop":1750230493977,"duration":1153}}]},"tags":["cbi","unhappy_path","send"]},"source":"8e1e63a2c212c680.json","parameterValues":[]}